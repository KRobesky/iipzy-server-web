{"version":3,"sources":["../../iipzy-shared/src/defs.js","ipc/eventManager.js","components/navBar.jsx","components/closeButton.jsx","components/infoPopup.jsx","components/navigator.jsx","components/aboutWindow.jsx","utils/log.js","ipc/httpService.js","services/user.js","components/spinnerPopup.jsx","components/input.jsx","components/validationPopup.jsx","components/userForm.jsx","components/addUserWindow.jsx","components/adminNavigatorWindow.jsx","components/blankWindow.jsx","services/clients.js","components/clientPopup.jsx","components/clientsWindow.jsx","components/downloadWindow.jsx","components/passwordPopup.jsx","components/editUserWindow.jsx","components/forgotPasswordWindow.jsx","components/homeNavigatorWindow.jsx","components/iipzyWindow.jsx","utils/cookie.js","services/auth.js","components/loginWindow.jsx","components/clientPicker.jsx","services/sentinelAdmin.js","components/sentinelAdminWindow.jsx","components/sentinelsWindow.jsx","services/updater.js","components/updaterWindow.jsx","App.js","serviceWorker.js","services/heartbeat.js","index.js","utils/cipher.js"],"names":["module","exports","reqAreYouServerUuid","rspAreYouServerUuid","reqDiscoveryUuid","rspDiscoveryUuid","port_server","port_sentinel_admin","port_sentinel_core","port_sentinel_updater","port_sentinel_web","port_sentinel_web_client_proxy","port_sentinel_web_server_proxy","port_traffic_control","server_cert","server_key","pingTarget","urlAbout","urlAddUser","urlAdministration","urlBlank","urlClients","urlClientUpdate","urlCloseSentinel","urlDebug","urlDevices","urlDownload","urlEditUser","urlForgotPassword","urlHome","urlIipzy","urlLogin","urlLogLevel","urlLogSend","urlNavigator","urlPingPlot","urlScheduler","urlSentinelAdmin","urlSentinelDiscovery","urlSentinelInUse","urlSentinelOnlineCheck","urlSentinels","urlSettings","urlStartup","urlThroughputTest","urlUpdater","ipcAAATest","ipcAuthCredentialsUpdate","ipcBloatLatencyStatusIperf3Down","ipcBloatLatencyStatusIperf3DownFinal","ipcBloatLatencyStatusIperf3Up","ipcBloatLatencyStatusIperf3UpFinal","ipcClearDials","ipcClientLoginNeeded","ipcClientName","ipcClientShutdown","ipcConnectionToken","ipcConsoleLog","ipcConsoleLogVerbose","ipcDevicesReady","ipcDevicesWindowMount","ipcDevicesWindowUnmount","ipcDeviceUpdated","ipcDumpSentinelDeviceTable","ipcExit","ipcExiting","ipcIperf3StatusDown","ipcIperf3StatusUp","ipcIsLocalClient","ipcLinkTo","ipcLoginStatus","ipcLoginVerifyStatus","ipcNavBarInfo","ipcNominalLatencyStatus","ipcNominalLatencyStatusFinal","ipcNoop","ipcPingPlotConvertDB","ipcPingPlotData","ipcPingPlotWindowButtonHome","ipcPingPlotWindowButtonLeft","ipcPingPlotWindowButtonLeftMarked","ipcPingPlotWindowButtonRight","ipcPingPlotWindowButtonRightMarked","ipcPingPlotWindowButtonZoomChange","ipcPingPlotWindowMount","ipcPingPlotWindowButtonHomeEx","ipcPingPlotWindowButtonLeftEx","ipcPingPlotWindowButtonLeftMarkedEx","ipcPingPlotWindowButtonRightEx","ipcPingPlotWindowButtonRightMarkedEx","ipcPingPlotWindowButtonZoomChangeEx","ipcPingPlotWindowMountEx","ipcPingPlotWindowUnmount","ipcQuit","ipcRendererReady","ipcSentinelDiscoveryTryingSentinelIPAddress","ipcSentinelDiscovery","ipcSentinelSendState","ipcSentinelOnlineCheck","ipcSentinelOnlineStatus","ipcServerAddress","ipcShowNavBar","ipcTestingState","ipcTickStatusIperf3Down","ipcThroughputTestFailedToGetServer","ipcThrouputTestStatus","ipcThroughputTestWindowButtonLeft","ipcThroughputTestWindowButtonNewest","ipcThroughputTestWindowButtonOldest","ipcThroughputTestWindowButtonRight","ipcThroughputTestWindowMount","ipcThroughputTestWindowCancel","ipcThroughputTestWindowStart","ipcThroughputTestWindowStartStop","ipcTickStatusIperf3Up","ipcTickStatusNominalLatency","ipcTimeOfTest","ipcUserAddVerified","ipcZZZNext","configFilename","crashFilename","loginStatusLoggedOut","loginStatusLoggedIn","loginStatusLoginFailed","loginStatusVerified","loginStatusVerifyFailed","loginStatusNoServerAddress","sentinelStatusOnline","sentinelStatusOffline","sentinelStatusInUse","sentinelStatusNoAddress","sentinelStatusUnknown","sentinelStatusOnlineLoggedOut","pevLoginStatus","pevLoginNeeded","pevZZZNext","httpCustomHeader_XAuthToken","httpCustomHeader_XClientToken","httpCustomHeader_XConnToken","httpCustomHeader_XTimestamp","httpCustomHeader_XWebClient","httpStatusOk","httpStatusCreated","httpStatusAccepted","httpStatusNoContent","httpStatusMultiStatus","httpStatusFound","httpStatusBadRequest","httpStatusUnauthorized","httpStatusForbidden","httpStatusNotFound","httpStatusConflict","httpStatusGone","httpStatusUnprocessableEntity","httpStatusInternalError","httpStatusNotImplemented","httpStatusConnRefused","httpStatusConnAborted","httpStatusConnReset","httpStatusSentinelInUse","httpStatusException","statusOk","statusAlreadyExists","statusDoesNotExist","statusInvalidVerificationCode","statusGeneralSqlFailure","statusException","statusInvalidUserName","statusInvalidPasswordResetCode","statusCannotAllocateIperf3Server","statusDailyIperf3LimitReached","statusInvalidUpdateType","statusUpdateInProgress","statusRouteError","statusMissingClientToken","statusInvalidClientToken","statusMissingAuthToken","statusInvalidAuthToken","statusMissingParam","statusInvalidParam","statusInvalidCredentials","statusMissingConnectionToken","statusInvalidConnectionToken","statusAdminPriviledgeRequired","statusInvalidClientType","statusIperf3ServerBusy","statusHttpError","statusInvalidThirdPartyApi","statusSentinelInUse","statusAdminInProgress","statusInvalidDownloadClient","statusUserNotInWhiteList","statusIperf3ServerFailed","pingFlagNoop","pingFlagTcMode","pingMarkNormal","pingMarkDropped","pingMarkSavedRx","pingMarkSavedTx","objectType_null","objectType_clientInstance","objectType_networkDevice","objectType_server","eventClass_null","eventClass_clientAdded","eventClass_clientAddressChanged","eventClass_clientOnLineStatus","eventClass_clientLoginStatus","eventClass_cpuusage","eventClass_crash","eventClass_networkDeviceAdded","eventClass_networkDeviceDeleted","eventClass_networkDeviceIPAddressChanged","eventClass_networkDeviceStatus","eventClass_pingFail","eventId_null","eventActive_inactive","eventActive_active","eventActive_activeAutoInactive","alertTarget_null","alertTarget_email","alertTarget_sms","adminCmd_admin","adminCmd_getLogLevel","adminCmd_setLogLevel","adminCmd_sendLogs","adminCmd_sentinel_none","adminCmd_sentinel_reboot","adminCmd_sentinel_resetNetworkDevicesDatabase","adminCmd_sentinel_restartSentinel","adminCmd_sentinel_restartSentinelAdmin","adminCmd_sentinel_restartSentinelWeb","adminCmd_sentinel_restartUpdater","adminCmd_sentinel_sendLogs","adminCmd_sentinel_setLogLevelDetailed","adminCmd_sentinel_setLogLevelNormal","clientType_null","clientType_appliance","clientType_pc","clientType_web","clientMode_null","clientMode_pcOnly","clientMode_sentinel","thirdPartyApiName_null","thirdPartyApiName_email","thirdPartyApiName_ipApi","thirdPartyApiName_ipGeolocation","thirdPartyApiName_sms","headBuzzardUserId","endOfFile","send","channel","data","console","log","e","CustomEvent","detail","document","getElementById","dispatchEvent","on","callback","addEventListener","app","NavBar","props","handleClick","url","state","count","this","setState","isAdmin","loggedIn","navbarName","userName","className","id","onClick","Defs","to","style","marginLeft","textAlign","fontSize","React","Component","eventManager","event","loginStatus","doRender","CloseButton","linkCount","ev","type","position","top","right","border","background","outline","height","width","InfoPopup","getInfoMessage","closePopup","title","handleSubmitClick","Navigator","linkChange","link","handleLinkChange","AboutWindow","message","label","level","httpsInstance","axios","create","httpsAgent","https","Agent","keepAlive","validateStatus","status","handleHttpException","ex","code","config","a","delete","addHeaders","get","params","post","put","configWithHeaders","headers","Date","now","defaults","common","logAuthToken","setAuthTokenHeader","authToken","setBaseURL","baseURL","setClientTokenHeader","clientToken","setConnTokenHeader","connToken","serverIPAddress","serverIPAddress_","userData","http","reqData","init","final","addUser","deleteUser","getUser","newPassword","sendPasswordResetCode","updateUser","verifyUser","SpinnerPopup","alignItems","Spinner","animation","role","Input","name","value","error","autofocus","disabled","onChange","porportionalWidth","htmlFor","autoFocus","ValidationPopup","target","onSubmit","getCode","handleChange","text","Button","variant","isValidInput","color","handleCancelClick","UserForm","errors","emailAddress","mobilePhoneNo","password","password2","schema","Joi","string","required","min","max","email","regex","obj","validate","details","abortEarly","item","path","getUserData","setUserData","length","button1Label","button2Label","getButtonsEnabled","isValidUserName","isValidMobilePhoneNo","isValidEmailAddress","isValidPassword","errorMessage","validateProperty","preventDefault","Object","values","setButtonsEnabled","setFieldsEnabled","onSubmit2","buttonsEnabled","fieldsEnabled","getFieldsEnabled","button1MarginRight","ret","renderInput","userNameDisabled","handlePassword2Change","align","marginRight","handleButtonClick","getButton1Label","handleButton2Click","getButton2Label","AddUserWindow","nextProps","nextState","infoMessage","showInfoPopup","showValidationPopup","isVerified","verificationCode","userId","showSpinner","handleVerifyClick","hideValidationCodePopup","bind","handleInfoPopupClick","hideInfoPopup","handleAddClick","user","__hadError__","statusCode","needRegistration","AdminNavigatorWindow","BlankWindow","queryString","getClients","VersionTable","versionInfo","JSON","stringify","versionInfoByModuleName","Map","i","set","moduleName","map","key","updateTime","version","sharedVersion","ClientPopup","client","parse","getClient","onClose","navigator","clipboard","writeText","then","catch","err","clientIsSentinel","clientType","clientName","size","handleCopyClientTokenClick","publicIPAddress","substring","localIPAddress","ispName","isOnLine","isLoggedIn","iperf3UseCountDaily","font","fontWeight","overflowY","handleClientTokenClick","handleCloseClick","ClientTable","clients","cursor","ClientsWindow","getClientsFromDB","showClientPopup","clientByClientToken","handleClientCloseClick","hideClientPopup","DownloadWindow","href","PasswordPopup","getPassword","EditUserWindow","windowTitle","showPasswordPopup","passwordValidated","passwordSupplied","handlePasswordPopupClick","hidePasswordPopup","handleLoginClick","handleUpdateClick","handleDeleteClick","ipcSubmitLogout","handleLoginStatus","ForgotPasswordWindow","update","passwordResetCode","showGetCodeResponsePopup","getCodeResponseMessage","showSubmitResponsePopup","getSubmitResponseMessage","inputsEnabled","submitButtonEnabled","codeSent","componentDidMount","updatePassword","isValidPasswordResetCode","responseMessage","showResponsePopup","getResponseMessage","handleResponsePopupClick","hideResponsePopup","handleGetCodeClick","handleClearClck","HomeNavigatorWindow","IipzyWindow","class","handleSentinelClick","val","Cookies","cookie","sendLogin","credentials","sendLogout","passwordEncrypted","passwordDecrypted","decrypt","loginAsync","logoutAsync","handleCompletion","onUserCommand_","onUserCommand","undefined","encrypt","loginAttemped","login","loginRequest","logoutRequest","reLoginAsync","LoginWindow","handleKeyPress","title_","getUserName","hidden","getSubmitButtonEnabled","auth","ClientPicker","clientsFiltered","getDisabled","selectedClient","onPick","clientTokenByEntryString","options","handleSelect","getSelectedClient","placeholder","entryStringByClientToken","entryString","push","selectedClientToken","getSelectedClientToken","tgtClientToken","paramsSansActionUuid","actionUuid","getSentinelAdminStatus","postSentinelAdmin","SentinelAdminWindow","getSentinelAdminSettings","statusInterval","setInterval","inSendSentinelAdminStatusGetRequest","clearInterval","settings","action","submitTimeout","setTimeout","waitForInProgress","uuidv4","inProgress","clearTimeout","disabledWhileInProgress","activityStatus","handleClientPick","getClientToken","checked","handleActionChange","getEnableSave","handleSaveClick","getEnableSubmit","readOnly","sentinelAdmin","adminStatus","step","failed","SentinelTable","isWiFi","SentinelsWindow","isLocalClient","from","window","location","origin","paramsEncrypted","cipher","replace","encodeURI","numSentinels","handleLocalIPAddressClick","paramsSansUpdateUuid","updateUuid","getUpdaterStatus","postUpdaterUpdate","UpdaterWindow","inSendUpdaterStatusGetRequest","getUpdaterSettings","updateType","disabledWhileUpdating","updateStatus","handleUpdateTypeChange","updater","App","callBackendAPI","fetch","response","json","body","Error","Fragment","exact","component","Boolean","hostname","match","unregister","serviceWorker","ready","registration","sentClientLoginNeeded","inHeartbeat","heartbeat","createPseudoLocalIPAddress","toString","Math","floor","random","createClient","yourIPAddress","timestamp","newClientToken","ReactDOM","render","hasCredentials","main","decrypted","iv","Buffer","randomBytes","createCipheriv","crypted","encrypted","textParts","split","IV","shift","encryptedText","join","decipher","createDecipheriv"],"mappings":"mHAEAA,EAAOC,QAAU,CACfC,oBAAqB,uCACrBC,oBAAqB,uCAErBC,iBAAkB,uCAClBC,iBAAkB,uCAElBC,YAAa,OACbC,oBAAqB,OACrBC,mBAAoB,OACpBC,sBAAuB,OACvBC,kBAAmB,OACnBC,+BAAgC,OAChCC,+BAAgC,OAChCC,qBAAsB,OAEtBC,YAAa,qCACbC,WAAY,oCAEZC,WAAY,aAEZC,SAAU,SACVC,WAAY,WACZC,kBAAmB,kBACnBC,SAAU,SACVC,WAAY,WACZC,gBAAiB,gBACjBC,iBAAkB,iBAClBC,SAAU,SACVC,WAAY,WACZC,YAAa,YACbC,YAAa,YACbC,kBAAmB,kBACnBC,QAAS,QACTC,SAAU,SACVC,SAAU,SACVC,YAAa,YACbC,WAAY,WACZC,aAAc,aACdC,YAAa,YACbC,aAAc,aACdC,iBAAkB,iBAClBC,qBAAsB,qBACtBC,iBAAkB,iBAClBC,uBAAwB,uBACxBC,aAAc,aACdC,YAAa,YACbC,WAAY,WACZC,kBAAmB,kBACnBC,WAAY,WAEZC,WAAY,UACZC,yBAA0B,UAC1BC,gCAAiC,UACjCC,qCAAsC,UACtCC,8BAA+B,UAC/BC,mCAAoC,UACpCC,cAAe,UACfC,qBAAsB,UACtBC,cAAe,UACfC,kBAAmB,UACnBC,mBAAoB,UACpBC,cAAe,UACfC,qBAAsB,UACtBC,gBAAiB,UACjBC,sBAAuB,UACvBC,wBAAyB,UACzBC,iBAAkB,UAClBC,2BAA4B,UAC5BC,QAAS,UACTC,WAAY,UACZC,oBAAqB,UACrBC,kBAAmB,UACnBC,iBAAkB,UAClBC,UAAW,UACXC,eAAgB,UAChBC,qBAAsB,UACtBC,cAAe,UACfC,wBAAyB,UACzBC,6BAA8B,UAC9BC,QAAS,UACTC,qBAAsB,UACtBC,gBAAiB,UACjBC,4BAA6B,UAC7BC,4BAA6B,UAC7BC,kCAAmC,UACnCC,6BAA8B,UAC9BC,mCAAoC,UACpCC,kCAAmC,UACnCC,uBAAwB,UACxBC,8BAA+B,UAC/BC,8BAA+B,UAC/BC,oCAAqC,UACrCC,+BAAgC,UAChCC,qCAAsC,UACtCC,oCAAqC,UACrCC,yBAA0B,UAC1BC,yBAA0B,UAC1BC,QAAS,UACTC,iBAAkB,UAClBC,4CAA6C,UAC7CC,qBAAsB,UACtBC,qBAAsB,UACtBC,uBAAwB,UACxBC,wBAAyB,UACzBC,iBAAkB,UAClBC,cAAe,UACfC,gBAAiB,UACjBC,wBAAyB,UACzBC,mCAAoC,UACpCC,sBAAuB,UACvBC,kCAAmC,UACnCC,oCAAqC,UACrCC,oCAAqC,UACrCC,mCAAoC,UACpCC,6BAA8B,UAC9BC,8BAA+B,UAC/BC,6BAA8B,UAC9BC,iCAAkC,UAClCC,sBAAuB,UACvBC,4BAA6B,UAC7BC,cAAe,UACfC,mBAAoB,UACpBC,WAAY,UAEZC,eAAgB,QAEhBC,cAAe,kBAGfC,qBAAsB,EACtBC,oBAAqB,EACrBC,uBAAwB,EACxBC,oBAAqB,EACrBC,wBAAyB,EACzBC,2BAA4B,EAG5BC,qBAAsB,EACtBC,sBAAuB,EACvBC,oBAAqB,EACrBC,wBAAyB,EACzBC,sBAAuB,EACvBC,8BAA+B,EAI/BC,eAAgB,WAChBC,eAAgB,WAChBC,WAAY,WAGZC,4BAA6B,eAC7BC,8BAA+B,iBAC/BC,4BAA6B,eAC7BC,4BAA6B,cAC7BC,4BAA6B,eAG7BC,aAAc,IACdC,kBAAmB,IACnBC,mBAAoB,IACpBC,oBAAqB,IACrBC,sBAAuB,IACvBC,gBAAiB,IACjBC,qBAAsB,IACtBC,uBAAwB,IACxBC,oBAAqB,IACrBC,mBAAoB,IACpBC,mBAAoB,IACpBC,eAAgB,IAChBC,8BAA+B,IAC/BC,wBAAyB,IACzBC,yBAA0B,IAC1BC,sBAAuB,IACvBC,sBAAuB,IACvBC,oBAAqB,IACrBC,wBAAyB,IACzBC,oBAAqB,IAErBC,SAAU,EACVC,oBAAqB,MACrBC,mBAAoB,MACpBC,8BAA+B,MAC/BC,wBAAyB,MACzBC,gBAAiB,MACjBC,sBAAuB,MACvBC,+BAAgC,MAChCC,iCAAkC,MAClCC,8BAA+B,MAC/BC,wBAAyB,MACzBC,uBAAwB,MACxBC,iBAAkB,MAClBC,yBAA0B,MAC1BC,yBAA0B,MAC1BC,uBAAwB,MACxBC,uBAAwB,MACxBC,mBAAoB,MACpBC,mBAAoB,MACpBC,yBAA0B,MAC1BC,6BAA8B,MAC9BC,6BAA8B,MAC9BC,8BAA+B,MAC/BC,wBAAyB,MACzBC,uBAAwB,MACxBC,gBAAiB,MACjBC,2BAA4B,MAC5BC,oBAAqB,MACrBC,sBAAuB,MACvBC,4BAA6B,MAC7BC,yBAA0B,MAC1BC,yBAA0B,MAG1BC,aAAc,EACdC,eAAe,EAGfC,eAAgB,EAChBC,gBAAiB,EACjBC,gBAAiB,EACjBC,gBAAiB,EAIjBC,gBAAiB,GACjBC,0BAA2B,iBAC3BC,yBAA0B,gBAC1BC,kBAAmB,SAGnBC,gBAAiB,GACjBC,uBAAwB,cACxBC,gCAAiC,uBACjCC,8BAA+B,qBAC/BC,6BAA8B,oBAC9BC,oBAAqB,WACrBC,iBAAkB,QAClBC,8BAA+B,qBAC/BC,gCAAiC,uBACjCC,yCAA0C,gCAC1CC,+BAAgC,sBAChCC,oBAAqB,WAGrBC,aAAc,GAGdC,qBAAsB,EACtBC,mBAAoB,EACpBC,+BAAgC,EAGhCC,iBAAkB,EAClBC,kBAAmB,EACnBC,gBAAiB,EAGjBC,eAAgB,QAChBC,qBAAsB,gBACtBC,qBAAsB,gBACtBC,kBAAmB,YAEnBC,uBAAwB,OACxBC,yBAA0B,SAC1BC,8CACE,iCACFC,kCAAmC,mBACnCC,uCAAwC,yBACxCC,qCAAsC,uBACtCC,iCAAkC,kBAClCC,2BAA4B,YAC5BC,sCAAuC,yBACvCC,oCAAqC,uBAGrCC,gBAAiB,OACjBC,qBAAsB,YACtBC,cAAe,KACfC,eAAgB,MAGhBC,gBAAiB,OACjBC,kBAAmB,UACnBC,oBAAqB,WAGrBC,uBAAwB,OACxBC,wBAAyB,QACzBC,wBAAyB,QACzBC,gCAAiC,gBACjCC,sBAAuB,MAEvBC,kBAAmB,EAGnBC,UAAW,I,mYClRE,OAAEC,KAxBjB,SAAcC,EAASC,GAErBC,QAAQC,IAAI,mCAAqCH,GACjD,IACMI,EAAI,IAAIC,YAAYL,EAAS,CAAEM,OAAQ,CAAEL,KADjCA,GAAc,MAE5BM,SAASC,eAAe,QAAQC,cAAcL,IAmBzBM,GAhBvB,SAAYV,EAASW,GACnBJ,SAASC,eAAe,QAAQI,iBAC9BZ,GACA,SAAAI,GAOEO,EAASX,EAASI,EAAEE,OAAOL,SAE7B,KCbAY,EAAM,KAEJC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAeRC,YAAc,SAACC,GACbf,QAAQC,IAAI,+CAAiDc,IAd7Df,QAAQC,IAAI,sBAEZ,EAAKe,MAAQ,CAAEC,MAAO,GAEtBN,EAAG,eAPc,E,uDAWjBX,QAAQC,IAAI,mBACZ,IAAMgB,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,+BAgBf,IAAD,OACDG,EAAUR,EAAOQ,QACjBC,EAAWT,EAAOS,SAClBC,EAAaV,EAAOU,WAEpBC,EAAWX,EAAOW,SAIxB,OAFAvB,QAAQC,IAAI,oBAAsBqB,GAGhC,6BACE,yBAAKE,UAAU,iDACG,SAAfF,GACC,yBAAKE,UAAU,2BAA2BC,GAAG,sBAC3C,yBAAKD,UAAU,cACb,kBAAC,IAAD,CACEA,UAAU,oBACVE,QAAS,kBAAM,EAAKZ,YAAYa,IAAK1P,WACrC2P,GAAID,IAAK1P,UAHX,SAOA,kBAAC,IAAD,CACEuP,UAAU,oBACVE,QAAS,kBAAM,EAAKZ,YAAYa,IAAK/O,eACrCgP,GAAID,IAAK/O,cAHX,aAOEyO,GACA,kBAAC,IAAD,CACEG,UAAU,oBACVE,QAAS,kBAAM,EAAKZ,YAAYa,IAAKzP,WACrC0P,GAAID,IAAKzP,UAHX,UAQDmP,GACC,kBAAC,IAAD,CACEG,UAAU,oBACVE,QAAS,kBAAM,EAAKZ,YAAYa,IAAKzP,WACrC0P,GAAID,IAAKzP,UAHX,WAQF,kBAAC,IAAD,CACEsP,UAAU,oBACVE,QAAS,kBAAM,EAAKZ,YAAYa,IAAK7P,cACrC8P,GAAID,IAAK7P,aAHX,aAOA,kBAAC,IAAD,CACE0P,UAAU,oBACVE,QAAS,kBAAM,EAAKZ,YAAYa,IAAK5P,oBACrC6P,GAAID,IAAK5P,mBAHX,mBAOA,kBAAC,IAAD,CACEyP,UAAU,oBACVE,QAAS,kBAAM,EAAKZ,YAAYa,IAAKtQ,aACrCuQ,GAAID,IAAKtQ,YAHX,YAOA,kBAAC,IAAD,CACEmQ,UAAU,oBACVE,QAAS,kBAAM,EAAKZ,YAAYa,IAAKvQ,WACrCwQ,GAAID,IAAKvQ,UAHX,SAOA,kBAAC,IAAD,CACEoQ,UAAU,oBACVE,QAAS,kBAAM,EAAKZ,YAAYa,IAAK9P,cACrC+P,GAAID,IAAK9P,aAHX,YAOCuP,EACC,kBAAC,IAAD,CACEI,UAAU,oBACVE,QAAS,kBAAM,EAAKZ,YAAYa,IAAKrQ,oBACrCsQ,GAAID,IAAKrQ,mBAHX,kBAOE,OAIM,UAAfgQ,GACC,yBAAKE,UAAU,2BAA2BC,GAAG,sBAC3C,yBAAKD,UAAU,cACb,kBAAC,IAAD,CACEA,UAAU,oBACVE,QAAS,kBAAM,EAAKZ,YAAYa,IAAKnQ,aACrCoQ,GAAID,IAAKnQ,YAHX,WAOA,kBAAC,IAAD,CACEgQ,UAAU,oBACVE,QAAS,kBAAM,EAAKZ,YAAYa,IAAKnP,mBACrCoP,GAAID,IAAKnP,kBAHX,SAOA,kBAAC,IAAD,CACEgP,UAAU,oBACVE,QAAS,kBAAM,EAAKZ,YAAYa,IAAK3O,aACrC4O,GAAID,IAAK3O,YAHX,UAOA,kBAAC,IAAD,CACEwO,UAAU,oBACVE,QAAS,kBAAM,EAAKZ,YAAYa,IAAK3P,UACrC4P,GAAID,IAAK3P,SAHX,WAWR,yBAAK6P,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACrC,uBAAGF,MAAO,CAAEG,SAAU,SAAtB,SAAuCT,S,GAhK9BU,IAAMC,WAuK3BtB,EAAOQ,SAAU,EACjBR,EAAOU,WAAa,OACpBV,EAAOW,SAAW,gBAgBlBY,EAAa3B,GAAGmB,IAAKlN,gBARK,SAAC2N,EAAOrC,GAAU,IAClCqB,EAAmCrB,EAAnCqB,QAASiB,EAA0BtC,EAA1BsC,YAAad,EAAaxB,EAAbwB,SAC9BX,EAAOQ,QAAUA,EACjBR,EAAOS,SAAWgB,IAAgBV,IAAK9J,oBACvC+I,EAAOW,SAAWX,EAAOS,SAAWE,EAAW,gBACpC,MAAPZ,GAAaA,EAAI2B,cAIvBH,EAAa3B,GAAGmB,IAAKnL,eAfI,SAAC4L,EAAOrC,GAC/BC,QAAQC,IAAI,4BAA8BF,GAC1Ca,EAAOU,WAAavB,EACT,MAAPY,GAAaA,EAAI2B,cAcR1B,Q,oCCzJA2B,E,kDAvCb,WAAY1B,GAAQ,IAAD,6BACjB,cAAMA,GAENb,QAAQC,IAAI,2BAEZ,EAAKe,MAAQ,CACXwB,UAAW,GANI,E,wDAUPC,GACVzC,QAAQC,IAAI,2BACZiB,KAAKL,MAAMa,QAAQe,K,+BAGX,IAAD,OAGP,OAFAzC,QAAQC,IAAI,sBAGV,6BACE,kBAAC,IAAD,CACEyB,QAAS,SAACe,GAAD,OAAQ,EAAK3B,YAAY2B,IAClCC,KAAK,SACLb,MAAO,CACLc,SAAU,WACVC,IAAK,MACLC,MAAO,MACPC,OAAQ,OACRC,WAAY,OACZC,QAAS,SAGX,kBAAC,IAAD,CAAKnB,MAAO,CAAEoB,OAAQ,GAAIC,MAAO,Y,GAjCjBjB,IAAMC,WC2CjBiB,E,kDAvCb,WAAYtC,GAAQ,IAAD,6BACjB,cAAMA,GACH,eAFc,E,6DAMjB,OAAOK,KAAKL,MAAMuC,mB,wCAGFX,GAChBzC,QAAQC,IAAI,8BACZiB,KAAKL,MAAMwC,e,+BAGH,IAAD,OAGP,OAFArD,QAAQC,IAAI,oBAGV,6BACE,kBAAC,EAAD,MACA,yBAAKuB,UAAU,SACb,yBAAKA,UAAU,eACb,yBAAKK,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAWd,KAAKL,MAAMyC,QAE9C,yBAAKzB,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,2BACE,6BACCb,KAAKkC,mBAGV,kBAAC,EAAD,CAAa1B,QAAS,SAAAe,GAAE,OAAI,EAAKc,kBAAkBd,a,GAhCvCR,IAAMC,WCC1BvB,EAAM,KAGJ6C,E,kDACJ,WAAY3C,GAAQ,IAAD,6BACjB,cAAMA,GAENb,QAAQC,IAAI,yBAEZ,EAAKe,MAAQ,CACXwB,UAAW,GAGb7B,EAAG,eATc,E,gEAajBX,QAAQC,IAAI,+BACZU,EAAMO,O,6CAINlB,QAAQC,IAAI,kCACZU,EAAM,O,yCAIN6C,EAAUC,YAAa,EACvBD,EAAUhB,YAEVxC,QAAQC,IAAI,gCAAkCuD,EAAUE,MAExDxC,KAAKC,SAAS,CAAEqB,UAAWgB,EAAUhB,c,+BAIrC,IAAMiB,EAAaD,EAAUC,WAC7BD,EAAUC,YAAa,EACvB,IAAMC,EAAOF,EAAUE,KAIvB,OAFA1D,QAAQC,IAAI,qBAAuByD,EAAO,kBAAoBD,GAG5D,6BACGA,GACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU7B,GAAI8B,U,GA3CFzB,IAAMC,WAmD9BsB,EAAUE,KAAO,GACjBF,EAAUhB,UAAY,EACtBgB,EAAUC,YAAa,EAEvBtB,EAAa3B,GAAGmB,IAAKrL,yBAAyB,SAAC8L,EAAOrC,OAEtDoC,EAAa3B,GAAGmB,IAAKnN,WAAW,SAAC4N,EAAOrC,GACtCC,QAAQC,IAAI,cAAgBF,GAE5ByD,EAAUE,KAAO3D,EACbY,GAAKA,EAAIgD,sBAGAH,QCcAI,E,kDAhFb,WAAY/C,GAAQ,IAAD,6BACjB,cAAMA,GAENb,QAAQC,IAAI,2BAEZ,EAAKe,MAAQ,CAAEC,MAAO,GAEnB,eAPc,E,gEAWjBjB,QAAQC,IAAI,iCACZ,IAAMgB,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,6CAIvBjB,QAAQC,IAAI,oCACN,O,iCAIN,IAAMgB,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,+BAIvBjB,QAAQC,IAAI,sBAEgB0B,IAAK9P,YAEjC,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKgQ,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAtB,eACA,iGAGA,gMAG4B,uCAH5B,uEAI2C,uCAJ3C,KAMA,iXAQA,kTAOA,iPAMA,2Z,GAnEgBC,IAAMC,WCRzB,SAASjC,EAAI4D,EAASC,EAAOC,GAClC/D,QAAQC,IAAI8D,EAAQ,KAAOD,EAAQ,KAAOD,GAG7B,I,mCCCTG,EAAgBC,IAAMC,OAAO,CACjCC,WAAY,IAAIC,IAAMC,MAAM,CAC1BC,WAAW,IAEbC,eAAgB,SAASC,GAEvB,OAAO,KAIX,SAASC,EAAoBnB,EAAOoB,GAClC1E,QAAQC,IAAI,eAAiBqD,EAAQ,KAAOoB,EAAK,YAAcA,EAAGC,MAClE,IAAIH,EAAS7C,IAAKxH,oBAClB,OAAQuK,EAAGC,MACT,IAAK,eACHH,EAAS7C,IAAK5H,sBACd,MAEF,IAAK,eACHyK,EAAS7C,IAAK3H,sBACd,MAEF,IAAK,aACHwK,EAAS7C,IAAK1H,oBACd,MAEF,QACEuK,EAAS7C,IAAK5H,sBAKlB,MAAO,CAAEyK,U,4CAGX,WAAuBzD,EAAK6D,GAA5B,SAAAC,EAAA,+EAEiBb,EAAcc,OAAO/D,EAAKgE,EAAWH,IAFtD,iGAIWH,EAAoB,SAAD,OAJ9B,yD,kEAQA,WAAoB1D,EAAK6D,GAAzB,SAAAC,EAAA,6DACE7E,QAAQC,IAAI,2BAA6Bc,GAD3C,kBAGiBiD,EAAcgB,IAAIjE,EAAKgE,EAAWH,IAHnD,+EAKI5E,QAAQC,IAAI,qCAAuC,KAAG0E,MAL1D,kBAMWF,EAAoB,MAAD,OAN9B,0D,kEAUA,WAAqB1D,EAAKkE,EAAQL,GAAlC,SAAAC,EAAA,6DACE7E,QAAQC,IAAI,4BAA8Bc,GAD5C,kBAGiBiD,EAAckB,KAAKnE,EAAKkE,EAAQF,EAAWH,IAH5D,+EAKI5E,QAAQC,IAAI,sCAAwC,KAAG0E,MAL3D,kBAMWF,EAAoB,OAAD,OAN9B,0D,kEAUA,WAAoB1D,EAAKkE,EAAQL,GAAjC,SAAAC,EAAA,+EAEiBb,EAAcmB,IAAIpE,EAAKkE,EAAQF,EAAWH,IAF3D,iGAIWH,EAAoB,MAAD,OAJ9B,yD,sBAqCA,SAASM,EAAWH,GAClB,IAAMQ,EAAoBR,GAAkB,GAc5C,OAbAQ,EAAkBC,QAAU,GAC5BD,EAAkBC,QAAQ1D,IAAK7I,6BAA+BwM,KAAKC,MACnEH,EAAkBC,QAAQ1D,IAAK5I,6BAA+B,EAC1DkL,IAAMuB,SAASH,QAAQI,OAAO9D,IAAKhJ,+BACrCyM,EAAkBC,QAAQ1D,IAAKhJ,6BAC7BsL,IAAMuB,SAASH,QAAQI,OAAO9D,IAAKhJ,8BACnCsL,IAAMuB,SAASH,QAAQI,OAAO9D,IAAK/I,iCACrCwM,EAAkBC,QAAQ1D,IAAK/I,+BAC7BqL,IAAMuB,SAASH,QAAQI,OAAO9D,IAAK/I,gCACnCqL,IAAMuB,SAASH,QAAQI,OAAO9D,IAAK9I,+BACrCuM,EAAkBC,QAAQ1D,IAAK9I,6BAC7BoL,IAAMuB,SAASH,QAAQI,OAAO9D,IAAK9I,8BAEhCuM,EAGM,OACbN,O,8CACAE,I,8CACAE,K,gDACAC,I,gDACAO,aApDF,WACE1F,QAAQC,IACN,cACEgE,IAAMuB,SAASH,QAAQI,OAAO9D,IAAKhJ,+BAkDvCgN,mBA9CF,SAA4BC,GAC1B5F,QAAQC,IAAI,wBAA0B2F,GACtC3B,IAAMuB,SAASH,QAAQI,OAAO9D,IAAKhJ,6BAA+BiN,GA6ClEC,WA1CF,SAAoBC,GAClB7B,IAAMuB,SAASM,QAAU,UAAYA,EAAU,IAC/C9F,QAAQC,IAAI,gBAAkBgE,IAAMuB,SAASM,UAyC7CC,qBAtCF,SAA8BC,GAC5BhG,QAAQC,IAAI,0BAA4B+F,GACxC/B,IAAMuB,SAASH,QAAQI,OACrB9D,IAAK/I,+BACHoN,GAmCJC,mBAhCF,SAA4BC,GAC1BlG,QAAQC,IAAI,wBAA0BiG,GACtCjC,IAAMuB,SAASH,QAAQI,OAAO9D,IAAK9I,6BAA+BqN,IChGhEC,EAAkB,kB,4CAEtB,WAAoBC,GAApB,SAAAvB,EAAA,sDACE5E,EAAI,aAAc,OAAQ,QAE1BkG,EAAkBC,EAHpB,4C,kEAQA,WAAuBC,GAAvB,SAAAxB,EAAA,6DACE5E,EAAI,UAAW,OAAQ,QADzB,SAEeqG,EAAKpB,KAAK,WAAaiB,EAAkB,YAAaE,GAFrE,oF,kEAKA,WAA0BA,GAA1B,SAAAxB,EAAA,6DACE5E,EAAI,aAAc,OAAQ,QAD5B,SAEeqG,EAAKxB,OAAO,WAAaqB,EAAkB,aAF1D,oF,kEAKA,sBAAAtB,EAAA,6DACE5E,EAAI,UAAW,OAAQ,QADzB,SAEeqG,EAAKtB,IAAI,WAAamB,EAAkB,aAFvD,oF,kEAKA,WAA2BE,GAA3B,SAAAxB,EAAA,6DACE5E,EAAI,cAAe,OAAQ,QAD7B,SAEeqG,EAAKpB,KAChB,WAAaiB,EAAkB,wBAC/BE,GAJJ,oF,kEAQA,WAAqCA,GAArC,SAAAxB,EAAA,6DACE5E,EAAI,WAAY,OAAQ,QAD1B,SAEeqG,EAAKpB,KAChB,WAAaiB,EAAkB,qBAC/BE,GAJJ,oF,kEAQA,WAA0BA,GAA1B,SAAAxB,EAAA,6DACE5E,EAAI,aAAc,OAAQ,QAD5B,SAEeqG,EAAKnB,IAChB,WAAagB,EAAkB,iBAC/BE,GAJJ,oF,kEAQA,WAA0BE,GAA1B,SAAA1B,EAAA,6DACE5E,EAAI,aAAc,OAAQ,QAD5B,SAEeqG,EAAKnB,IAChB,WAAagB,EAAkB,mBAC/BI,GAJJ,oF,sBAQe,QACbC,K,4CACAC,MAnDF,aAoDEC,Q,4CACAC,W,4CACAC,Q,2CACAC,Y,4CACAC,sB,4CACAC,W,4CACAC,W,sDC9BaC,G,kDAlCb,WAAYpG,GAAQ,IAAD,6BACjB,cAAMA,GACNb,QAAQC,IAAI,4BACT,eAEH,EAAKe,MAAQ,CAAEC,MAAO,GALL,E,gEASjBjB,QAAQC,IAAI,kCACZ,IAAMgB,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,+BAMvB,OAFAjB,QAAQC,IAAI,uBAGV,6BACE,kBAAC,EAAD,MACA,yBAAKuB,UAAU,iBACb,yBAAKA,UAAU,sBAAsB0F,WAAW,UAC9C,6BACE,kBAACC,GAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAC/B,0BAAM7F,UAAU,WAAhB,uB,GAzBWS,IAAMC,W,mBC0BlBoF,GA9BD,SAAC,GAUR,IATL5E,EASI,EATJA,KACA6E,EAQI,EARJA,KACAzD,EAOI,EAPJA,MACA0D,EAMI,EANJA,MACAC,EAKI,EALJA,MACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,SAGM1E,EADF,EADJ2E,kBAEkC,MAAQ,QAC1C,OACE,yBAAKrG,UAAU,aAAaK,MAAO,CAAEqB,QAAOpB,WAAY,KACtD,2BAAOgG,QAASP,GAAOzD,GACvB,2BACEiE,UAAWL,EACXC,SAAUA,EACVH,MAAOA,GAAgB,GACvBI,SAAUA,EACVnG,GAAI8F,EACJA,KAAMA,EACN7E,KAAMA,EACNlB,UAAU,iBAEXiG,GAAS,yBAAKjG,UAAU,sBAAsBiG,KC8EtCO,G,kDA7Fb,WAAYnH,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CAAE2D,KAAM,IAErB3E,QAAQC,IAAI,+BAJK,E,sDAUjB,OAAOiB,KAAKF,MAAM2D,O,mCAGPlC,GACX,IAAM8E,EAAO9E,EAAGwF,OAAOV,KACjBC,EAAQ/E,EAAGwF,OAAOT,MAExBxH,QAAQC,IACN,wCACEsH,EACA,aACArG,KAAKF,MAAMuG,IAGfrG,KAAKC,SAAL,gBAAiBoG,EAAOC,M,iFAGF/E,G,iEACtBzC,QAAQC,IAAI,qCACZD,QAAQC,IAAI,QAAUiB,KAAKF,MAAM2D,MAEjCzD,KAAKL,MAAMwC,aACXnC,KAAKL,MAAMqH,SAAShH,KAAKF,MAAM2D,M,wLAGTlC,G,iEACtBzC,QAAQC,IAAI,qCAEZiB,KAAKL,MAAMwC,aACXnC,KAAKL,MAAMqH,SAAS,U,4IAKpB,OAAO,I,+BAGC,IAAD,OAGP,OAFAlI,QAAQC,IAAI,0BAGV,6BACE,kBAAC,EAAD,MACA,yBAAKuB,UAAU,SACb,yBAAKA,UAAU,eACb,yBAAKK,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAtB,0BAEF,kBAAC,GAAD,CACEU,KAAK,OACLgF,WAAW,EACXC,UAAU,EACVJ,KAAK,OACLC,MAAOtG,KAAKiH,UACZrE,MAAM,OACN8D,SAAU,SAACnF,GAAD,OAAQ,EAAK2F,aAAa3F,IACpCgF,MAAM,GACNI,mBAAmB,IAErB,4BAAK3G,KAAKL,MAAMwH,MAChB,yBAAKxG,MAAO,CAAEE,UAAW,WACvB,kBAACuG,GAAA,EAAD,CACE5F,KAAK,SACL6F,QAAQ,YACRZ,UAAWzG,KAAKsH,eAChB3G,MAAO,CACLqB,MAAO,QACPuF,MAAO,WAETV,WAAS,EACTrG,QAAS,SAACe,GAAD,OAAQ,EAAKc,kBAAkBd,KAT1C,WAcF,kBAAC,EAAD,CAAaf,QAAS,SAACe,GAAD,OAAQ,EAAKiG,kBAAkBjG,a,GAtFnCR,IAAMC,W,6BCgVrByG,G,kDA7Ub,WAAY9H,GAAQ,IAAD,6BACjB,cAAMA,GAENb,QAAQC,IAAI,wBAEZ,EAAKe,MAAQ,CACX4H,OAAQ,GACR3H,MAAO,GAIT,EAAKlB,KAAO,CACVwB,SAAU,KACVsH,aAAc,KACdC,cAAe,KACfC,SAAU,KACVC,UAAW,MAGV,eAEH,EAAKC,OAAS,CACZ1H,SAAU2H,KAAIC,SAASC,WAAWtF,MAAM,aAAauF,IAAI,GAAGC,IAAI,IAChET,aAAcK,KAAIC,SAASC,WAAWtF,MAAM,iBAAiByF,QAC7DT,cAAeI,KAAIC,SAChBC,WACAtF,MAAM,uBACN0F,MAAM,uBACN/B,OAAM,SAACmB,GACN,MAAO,CACL/E,QAAS,oDAGfkF,SAAUG,KAAIC,SAASC,WAAWtF,MAAM,YAAYuF,IAAI,GAAGC,IAAI,IAC/DN,UAAWE,KAAIC,SAASC,WAAWtF,MAAM,kBAAkBuF,IAAI,GAAGC,IAAI,KAlCvD,E,6DAsCF/B,EAAMC,GACrBxH,QAAQC,IACN,mCAAqCsH,EAAO,aAAeC,GAE7D,IAAMiC,EAAG,gBAAMlC,EAAOC,GAChByB,EAAM,gBAAM1B,EAAOrG,KAAK+H,OAAO1B,IAC7BE,EAAUyB,KAAIQ,SAASD,EAAKR,GAA5BxB,MAIR,OAFAzH,QAAQC,IAAI,2CAA6CwH,GAElDA,EAAQA,EAAMkC,QAAQ,GAAG9F,QAAU,O,iCAI1C,IACQ4D,EAAUyB,KAAIQ,SAASxI,KAAKnB,KAAMmB,KAAK+H,OAD/B,CAAEW,YAAY,IACtBnC,MACR,IAAKA,EAAO,OAAO,KAEnBzH,QAAQC,IAAI,iCAEZ,IAPS,EAOH2I,EAAS,GAPN,eAQQnB,EAAMkC,SARd,IAQT,gCAASE,EAAT,QAAgCjB,EAAOiB,EAAKC,KAAK,IAAMD,EAAKhG,SARnD,8BAST,OAAO+E,I,0CAIP5I,QAAQC,IAAI,8BAEZiB,KAAKnB,KAAOmB,KAAKL,MAAMkJ,cAEvB,IAAM9I,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,Y,6CAIhBjB,QAAQC,IAAI,iCAEZiB,KAAKL,MAAMmJ,YAAY9I,KAAKnB,MAEtB,O,wCAIN,OAA6B,MAAtBmB,KAAKnB,KAAKwB,UAAoBL,KAAKnB,KAAKwB,SAAS0I,OAAS,I,6CAIjE,OAC6B,MAA3B/I,KAAKnB,KAAK+I,eAAyB5H,KAAKnB,KAAK+I,cAAcmB,OAAS,I,4CAKtE,OAAiC,MAA1B/I,KAAKnB,KAAK8I,cAAwB3H,KAAKnB,KAAK8I,aAAaoB,OAAS,I,wCAIzE,OAA6B,MAAtB/I,KAAKnB,KAAKgJ,UAAoB7H,KAAKnB,KAAKgJ,SAASkB,OAAS,I,wCAIjE,OAAO/I,KAAKL,MAAMqJ,e,wCAIlB,OAAOhJ,KAAKL,MAAMsJ,e,qCAIlB,OACEjJ,KAAKL,MAAMuJ,qBACXlJ,KAAKmJ,mBACLnJ,KAAKoJ,wBACLpJ,KAAKqJ,uBACLrJ,KAAKsJ,mBACLtJ,KAAKnB,KAAKgJ,WAAa7H,KAAKnB,KAAKiJ,Y,mCAIxBvG,GACX,IAAM8E,EAAO9E,EAAGwF,OAAOV,KACjBC,EAAQ/E,EAAGwF,OAAOT,MAExBxH,QAAQC,IACN,iCAAmCsH,EAAO,aAAerG,KAAKnB,KAAKwH,IAGrE,IAAMqB,EAAS1H,KAAKF,MAAM4H,OACpB6B,EAAevJ,KAAKwJ,iBAAiBnD,EAAMC,GAC7CiD,EAAc7B,EAAOrB,GAAQkD,SACrB7B,EAAOrB,GAEnB,IAAMxH,EAAOmB,KAAKnB,KAClBA,EAAKwH,GAAQC,EAEbtG,KAAKC,SAAS,CAAEpB,OAAM6I,a,4CAGFnG,GACpB,IAAM8E,EAAO9E,EAAGwF,OAAOV,KACjBC,EAAQ/E,EAAGwF,OAAOT,MASxB,GAPAxH,QAAQC,IACN,wCACEsH,EACA,WACArG,KAAKnB,KAAKwH,IAGVrG,KAAKnB,KAAKgJ,WAAavB,EAAO,CAChC,IAAMoB,EAAS1H,KAAKF,MAAM4H,OAC1BA,EAAOrB,GAAQ,wBAEf,IAAMxH,EAAOmB,KAAKnB,KAKlB,OAJAA,EAAKwH,GAAQC,OAEbtG,KAAKC,SAAS,CAAEpB,OAAM6I,WAKxB,OAAO1H,KAAKkH,aAAa3F,K,wCAGTA,GAChBzC,QAAQC,IAAI,8BACZD,QAAQC,IAAI,YAAciB,KAAKnB,KAAKwB,UACpCvB,QAAQC,IAAI,iBAAmBiB,KAAKnB,KAAK+I,eACzC9I,QAAQC,IAAI,gBAAkBiB,KAAKnB,KAAK8I,cAExCpG,EAAGkI,iBAEH,IAAM/B,EAAS1H,KAAKwI,WAEhBd,GACF5I,QAAQC,IACN,wCAA0C2K,OAAOC,OAAOjC,IAG5D1H,KAAKC,SAAS,CAAEyH,OAAQA,GAAU,KAC9BA,IAEJ1H,KAAKL,MAAMiK,mBAAkB,GAC7B5J,KAAKL,MAAMkK,kBAAiB,GAE5B7J,KAAKL,MAAMqH,SAAShH,KAAKnB,S,yCAGR0C,GACjBvB,KAAKL,MAAMiK,mBAAkB,GAC7B5J,KAAKL,MAAMkK,kBAAiB,GAE5B7J,KAAKL,MAAMmK,UAAU9J,KAAKnB,Q,kCAI1BwH,EACAzD,GAKC,IAJDpB,EAIA,uDAJO,OACPgF,EAGA,wDAFAC,EAEA,wDADAC,EACA,uDADW,KAEHgB,EAAW1H,KAAKF,MAAhB4H,OACF7I,EAAOmB,KAAKnB,KAEAmB,KAAKkH,aAEvB,OACE,kBAAC,GAAD,CACE1F,KAAMA,EACN6E,KAAMA,EACNzD,MAAOA,EACP0D,MAAOzH,EAAKwH,GACZE,MAAOmB,EAAOrB,GACdG,UAAWA,EACXC,SAAUA,EACVC,SAAUA,M,+BAKN,IAAD,OACP5H,QAAQC,IAAI,mBAEZ,IAAMgL,EAAiB/J,KAAKL,MAAMuJ,oBAC5Bc,EAAgBhK,KAAKL,MAAMsK,mBAC3BC,EAAqBlK,KAAKL,MAAMmK,UAAY,GAAK,EAGjDK,EACJ,6BACE,kBAAC,EAAD,MACA,yBAAKxJ,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAWd,KAAKL,MAAMyC,QAE9C,8BACGpC,KAAKoK,YACJ,WACA,YACA,QACA,EACApK,KAAKL,MAAM0K,mBAAqBL,GAChC,SAACzI,GAAD,OAAQ,EAAK2F,aAAa3F,MAE3BvB,KAAKoK,YACJ,eACA,gBACA,QACA,GACCpK,KAAKmJ,oBAAsBa,GAC5B,SAACzI,GAAD,OAAQ,EAAK2F,aAAa3F,MAE3BvB,KAAKoK,YACJ,gBACA,sBACA,QACA,GACCpK,KAAKqJ,wBAA0BW,GAChC,SAACzI,GAAD,OAAQ,EAAK2F,aAAa3F,MAE3BvB,KAAKoK,YACJ,WACA,WACA,YACA,GACCpK,KAAKoJ,yBAA2BY,GACjC,SAACzI,GAAD,OAAQ,EAAK2F,aAAa3F,MAE3BvB,KAAKoK,YACJ,YACA,iBACA,YACA,GACCpK,KAAKsJ,oBAAsBU,GAC5B,SAACzI,GAAD,OAAQ,EAAK+I,sBAAsB/I,MAErC,qCACA,yBAAKZ,MAAO,CAAEC,WAAY,SACxB,2BAAO2J,MAAM,QACX,+BACE,4BACE,4BACE,yBACE5J,MAAO,CACLE,UAAW,SACX2J,YAAaN,IAGf,kBAAC9C,GAAA,EAAD,CACE5F,KAAK,SACL6F,QAAQ,YACRZ,UAAWzG,KAAKsH,eAChB3G,MAAO,CACLqB,MAAO,QACPuF,MAAO,WAGT/G,QAAS,SAACe,GAAD,OAAQ,EAAKkJ,kBAAkBlJ,KAEvCvB,KAAK0K,qBAIX1K,KAAKL,MAAMmK,WACV,4BACE,yBAAKnJ,MAAO,CAAEE,UAAW,SAAUD,WAAY,KAC7C,kBAACwG,GAAA,EAAD,CACE5F,KAAK,SACL6F,QAAQ,YACRZ,UAAWsD,EACXpJ,MAAO,CACLqB,MAAO,QACPuF,MAAO,WAGT/G,QAAS,SAACe,GAAD,OAAQ,EAAKoJ,mBAAmBpJ,KAExCvB,KAAK4K,2BAa5B,OADA9L,QAAQC,IAAI,sBACLoL,M,GA1UYpJ,IAAMC,WCHzBvB,GAAM,KAEJoL,G,kDACJ,WAAYlL,GAAQ,IAAD,6BACjB,cAAMA,GAENb,QAAQC,IAAI,6BAEZ,EAAKe,MAAQ,CAAEC,MAAO,GAEtBN,GAAG,eAPc,E,gEAWjBX,QAAQC,IAAI,mCACZiB,KAAKoB,a,6CAILtC,QAAQC,IAAI,sCACZU,GAAM,O,kDAINX,QAAQC,IAAI,6C,4CAGQ+L,EAAWC,GAE/B,OADAjM,QAAQC,IAAI,wCACL,I,oCAWP,MAPiB,CACfsB,SAAUwK,EAAcxK,SACxBsH,aAAckD,EAAclD,aAC5BC,cAAeiD,EAAcjD,cAC7BC,SAAUgD,EAAchD,SACxBC,UAAW+C,EAAc/C,a,kCAKjB3C,GACV0F,EAAcxK,SAAW8E,EAAS9E,SAClCwK,EAAclD,aAAexC,EAASwC,aACtCkD,EAAcjD,cAAgBzC,EAASyC,cACvCiD,EAAchD,SAAW1C,EAAS0C,SAClCgD,EAAc/C,UAAY3C,EAAS2C,Y,qCAGtB3C,GACbrG,QAAQC,IAAI,gCACZD,QAAQC,IAAI,cAAgBoG,EAAS9E,UACrCvB,QAAQC,IAAI,mBAAqBoG,EAASyC,eAC1C9I,QAAQC,IAAI,kBAAoBoG,EAASwC,cAGzCkD,EAAcxK,SAAW8E,EAAS9E,SAClCwK,EAAcjD,cAAgBzC,EAASyC,cACvCiD,EAAclD,aAAexC,EAASwC,aACtCkD,EAAchD,SAAW1C,EAAS0C,SAClCgD,EAAc/C,UAAY3C,EAAS0C,S,qCAEnCrC,CAAQL,K,uCAIR,OAAO0F,EAAcG,c,6CAIrBlM,QAAQC,IAAI,wC,sCAIZ8L,EAAcI,eAAgB,EAC9BJ,EAAcd,gBAAkBc,EAAcK,oBAC1CL,EAAcM,aAChBlK,EAAatC,KAAK8B,IAAKnK,mBAAoB,CACzC+J,SAAUwK,EAAcxK,WAE1BwK,EAAcM,YAAa,GAE7BnL,KAAKoB,a,iFAGiBgK,G,iEACtBtM,QAAQC,IAAI,wCAA0CqM,GAC7B,WAArBA,GACFtF,GAAW,CACTuF,OAAQR,EAAcQ,OACtBD,iBAAkBA,I,kJAKtBP,EAAcK,qBAAsB,EACpCL,EAAcd,gBAAiB,EAC/B/J,KAAKoB,a,0CAOL,OAHAtC,QAAQC,IACN,oCAAsC8L,EAAcd,gBAE/Cc,EAAcd,iB,wCAGLA,GAChBc,EAAcd,eAAiBA,EAC/BjL,QAAQC,IACN,oCAAsC8L,EAAcb,iB,yCAQtD,OAHAlL,QAAQC,IACN,mCAAqC8L,EAAcb,eAE9Ca,EAAcb,gB,uCAGNA,GACfa,EAAcb,cAAgBA,EAC9BlL,QAAQC,IACN,mCAAqC8L,EAAcb,iB,iCAKrDlL,QAAQC,IAAI,0BACZiB,KAAKC,SAAS,CAAEF,MAAOC,KAAKF,MAAMC,MAAQ,M,+BAGlC,IAAD,OACPjB,QAAQC,IAAI,wBAEZ,IAAMkM,EAAgBJ,EAAcI,cAC9BK,EAAcT,EAAcS,YAC5BJ,EAAsBL,EAAcK,oBAE1CpM,QAAQC,IAAI,yCAA2CkM,GACvDnM,QAAQC,IAAI,uCAAyCuM,GACrDxM,QAAQC,IACN,+CAAiDmM,GAGnD,IAAMf,EACJ,6BACGe,GACC,kBAAC,GAAD,CACElE,SAAU,SAACzF,GAAD,OAAQ,EAAKgK,kBAAkBhK,IACzCY,WAAYnC,KAAKwL,wBAAwBC,KAAKzL,QAGjDiL,GACC,kBAAC,EAAD,CACE7I,MAAO,gBACPF,eAAgB,kBAAM,EAAKA,kBAC3B8E,SAAU,SAACzF,GAAD,OAAQ,EAAKmK,qBAAqBnK,IAC5CY,WAAYnC,KAAK2L,cAAcF,KAAKzL,QAGvCsL,GAAe,kBAAC,GAAD,MAChB,kBAAC,GAAD,CACElJ,MAAO,4BACPyG,YAAa7I,KAAK6I,YAClBC,YAAa9I,KAAK8I,YAClBI,kBAAmBlJ,KAAKkJ,kBACxBU,kBAAmB5J,KAAK4J,kBACxBK,iBAAkBjK,KAAKiK,iBACvBJ,iBAAkB7J,KAAK6J,iBACvBQ,kBAAkB,EAClBrB,aAAc,WACdhC,SAAU,SAACzF,GAAD,OAAQ,EAAKqK,eAAerK,OAK5C,OADAzC,QAAQC,IAAI,2BACLoL,M,GAlLiB1C,I,8CA0M5B,WAAuBtC,GAAvB,iBAAAxB,EAAA,6DACE7E,QAAQC,IAAI,yBAEZ8L,GAAcS,aAAc,EACxB7L,IAAKA,GAAI2B,WAJf,SAMiCyK,GAAKrG,QAAQL,GAN9C,mBAMUtG,EANV,EAMUA,KANV,EAMgByE,QAEVzE,EAAKiN,aARX,wBASIhN,QAAQC,IACN,uDACEF,EAAKiN,aAAavC,aAClB,kBACA1K,EAAKiN,aAAaC,YAGtBlB,GAAcG,YAAcnM,EAAKiN,aAAavC,aAE9CsB,GAAcI,eAAgB,EAC9BJ,GAAcS,aAAc,EAC5BT,GAAcd,gBAAiB,EAC/Bc,GAAcb,eAAgB,EAE1BvK,IAAKA,GAAI2B,WAvBjB,2BA4BEyJ,GAAcQ,OAASxM,EAAKwM,OAC5BvM,QAAQC,IAAI,mCAAqC8L,GAAcQ,QAC/DR,GAAcS,aAAc,EAC5BT,GAAcK,qBAAsB,EACpCL,GAAcd,gBAAiB,EAC/Bc,GAAcb,eAAgB,EAE1BvK,IAAKA,GAAI2B,WAnCf,6C,+BAsCe0E,G,iFAAf,WAA0B/B,GAA1B,iBAAAJ,EAAA,6DACEkH,GAAcS,aAAc,EACxB7L,IAAKA,GAAI2B,WAFf,SAIiCyK,GAAK/F,WAAW/B,GAJjD,mBAIUlF,EAJV,EAIUA,KAJV,EAIgByE,QACVzE,EAAKiN,aALX,wBAMIhN,QAAQC,IACN,0DACEF,EAAKiN,aAAavC,aAClB,kBACA1K,EAAKiN,aAAaC,YAGtBlB,GAAcG,YAAcnM,EAAKiN,aAAavC,aAE9CsB,GAAcI,eAAgB,EAC9BJ,GAAcd,gBAAiB,EAC/Bc,GAAcS,aAAc,EAC5BT,GAAcK,qBAAsB,EAEhCzL,IAAKA,GAAI2B,WApBjB,2BAyBEtC,QAAQC,IACN,wDAA0DF,EAAKsM,YAGjEN,GAAcK,qBAAsB,EAEpCL,GAAcG,YAAcH,GAAcxK,SAAW,cACrDwK,GAAcI,eAAgB,EAC9BJ,GAAcd,gBAAiB,EAC/Bc,GAAcb,eAAgB,EAC9Ba,GAAcS,aAAc,EAC5BT,GAAcM,YAAa,EAEvB1L,IAAKA,GAAI2B,WAtCf,6C,sBA1DAyJ,GAAcxK,SAAW,GACzBwK,GAAclD,aAAe,GAC7BkD,GAAcjD,cAAgB,GAC9BiD,GAAchD,SAAW,GACzBgD,GAAc/C,UAAY,GAG1B+C,GAAcmB,kBAAmB,EAEjCnB,GAAcd,gBAAiB,EAC/Bc,GAAcb,eAAgB,EAE9Ba,GAAcI,eAAgB,EAC9BJ,GAAcG,YAAc,GAC5BH,GAAcS,aAAc,EAC5BT,GAAcK,qBAAsB,EAEpCL,GAAcQ,OAAS,EACvBR,GAAcM,YAAa,EAiFZN,UCxPAoB,G,kDApCb,WAAYtM,GAAQ,IAAD,6BACjB,cAAMA,GAENb,QAAQC,IAAI,oCAEZ,EAAKe,MAAQ,CAAEC,MAAO,GAEnB,eAPc,E,gEAWjBjB,QAAQC,IAAI,0CACZkC,EAAatC,KAAK8B,IAAKnL,cAAe,SACtC0K,KAAKoB,a,6CAILtC,QAAQC,IAAI,6CACN,O,iCAINiB,KAAKC,SAAS,CAAEF,MAAOC,KAAKF,MAAMC,MAAQ,M,+BAM1C,OAFAjB,QAAQC,IAAI,+BAGV,6BACE,kBAAC,EAAD,W,GA/B2BgC,IAAMC,WCmC1BkL,G,kDArCb,WAAYvM,GAAQ,IAAD,6BACjB,cAAMA,GAENb,QAAQC,IAAI,2BAEZ,EAAKe,MAAQ,CAAEC,MAAO,GAEnB,eAPc,E,gEAWjBjB,QAAQC,IAAI,iCACZ,IAAMgB,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,6CAIvBjB,QAAQC,IAAI,oCACN,O,iCAIN,IAAMgB,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,+BAMvB,OAFAjB,QAAQC,IAAI,sBAGV,6BACE,kBAAC,EAAD,W,GAhCkBgC,IAAMC,WCD5BiE,GAAkB,kB,8CAEtB,WAAoBC,GAApB,SAAAvB,EAAA,sDACE5E,EAAI,eAAgB,OAAQ,QAE5BkG,GAAkBC,EAHpB,4C,oEAQA,WAA0BiH,GAA1B,eAAAxI,EAAA,6DACE5E,EAAI,aAAc,OAAQ,QACtBc,EAAM,WAAaoF,GAAkB,cACrCkH,IAAatM,GAAO,IAAMsM,GAHhC,SAIe/G,EAAKtB,IAAIjE,GAJxB,oF,sBAOe,QACbyF,K,6CACAC,MAXF,aAYE6G,W,8CCfIC,G,kDACJ,WAAY1M,GAAQ,IAAD,6BACjB,cAAMA,GACNb,QAAQC,IAAI,4BAFK,E,qDAMjB,IAAMuN,EAActM,KAAKL,MAAM2M,YAC/BxN,QAAQC,IAAI,sCAAwCwN,KAAKC,UAAUF,EAAa,KAAM,IAEtF,IADA,IAAIG,EAA0B,IAAIC,IACzBC,EAAI,EAAGA,EAAIL,EAAYvD,OAAQ4D,IACtCF,EAAwBG,IAAIN,EAAYK,GAAGE,WAAYP,EAAYK,IAKrE,OAFA7N,QAAQC,IAAI,gDAAkDwN,KAAKC,UAAUC,EAAyB,KAAM,IAG1G,2BAAOlM,GAAG,iBACPkM,EAAwBK,KAAI,SAAAnE,GAAI,OAC/B,wBAAIoE,IAAKpE,EAAKkE,YACZ,4BACE,yBAAKlM,MAAO,CAAEE,UAAW,OAAQD,WAAY,KAC1C+H,EAAKkE,aAGV,gDACA,4BACGlE,EAAKqE,YAER,gDACA,4BACGrE,EAAKsE,SAER,gDACA,4BACGtE,EAAKuE,wB,GAnCOnM,IAAMC,WA4C3BmM,G,kDACJ,WAAYxN,GAAQ,IAAD,6BACjB,cAAMA,GACH,eAEH,EAAKG,MAAQ,CAAEC,MAAO,GAGtBoN,EAAYC,OAASb,KAAKc,MAAMd,KAAKC,UAAU,EAAK7M,MAAM2N,cAE1DxO,QAAQC,IACN,qCACEwN,KAAKC,UAAUW,EAAYC,OAAQ,KAAM,IAG7CD,EAAY/K,MAAQ,WAAa+K,EAAYC,OAAOtI,YAEjD,eAhBc,E,gEAoBjBhG,QAAQC,IAAI,mC,6CAIZD,QAAQC,IAAI,oCACN,O,uCAGSwC,GACfzC,QAAQC,IAAI,mCACZiB,KAAKL,MAAMwC,aACXnC,KAAKL,MAAM4N,QAAQhM,K,iCAInB,IAAMxB,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,uCAIvB,OAAOoN,EAAYnC,c,iDAGMzJ,GACzBzC,QAAQC,IAAI,6CACZyO,UAAUC,UACPC,UAAUP,EAAYC,OAAOtI,aAC7B6I,MAAK,eAGLC,OAAM,SAAAC,GACL/O,QAAQC,IAAI,uBAAwB8O,Q,+BAIhC,IAAD,OACP/O,QAAQC,IAAI,sBAEZ,IAAMqO,EAASD,EAAYC,OACrBU,EAAyC,cAAtBV,EAAOW,WAEhC,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKzN,UAAU,SACb,yBAAKA,UAAU,uBACb,6BACE,yBAAKK,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAWsM,EAAOY,aAE1C,2BAAOzD,MAAM,UACX,+BACE,4BACE,qCACA,4BAAK6C,EAAOY,aAEd,4BACE,6CACA,4BAAKZ,EAAOtI,aACZ,wCACA,4BACE,kBAACsC,GAAA,EAAD,CACE5F,KAAK,SACL6F,QAAQ,YACRZ,UAAU,EACVwH,KAAK,QACLtN,MAAO,CACLqB,MAAO,OACPD,OAAQ,OACRwF,MAAO,WAET/G,QAAS,SAAAe,GAAE,OAAI,EAAK2M,2BAA2B3M,KAVjD,UAgBH6L,EAAOW,WACN,4BACE,4CACA,4BAA2B,OAAtBX,EAAOW,WAAsB,KAAO,aAEzC,KACHX,EAAOe,gBACN,4BACE,+CACA,4BAAKf,EAAOe,gBAAgBC,UAAU,KAEtC,KACHhB,EAAOiB,eACN,4BACE,8CACA,4BAAKjB,EAAOiB,iBAEZ,KACHjB,EAAO/M,SACN,4BACE,0CACA,4BAAK+M,EAAO/M,WAEZ,KACH+M,EAAOkB,QACN,4BACE,oCACA,4BAAKlB,EAAOkB,UAEZ,KAOJ,4BACE,wCACA,4BAAKlB,EAAOmB,SAAW,MAAQ,OAEjC,4BACE,0CACA,4BAAKnB,EAAOoB,WAAa,MAAQ,OAEnC,4BACE,6CACA,4BAAKpB,EAAOqB,sBAGbX,GAAqB,yBACpBnN,MAAO,CACLC,WAAY,GAGZgB,OAAQ,iBACR8M,KAAM,mBACNC,WAAY,OAEZC,UAAW,WAGb,kBAAC,GAAD,CACEtC,YAAac,EAAOd,YACpB9L,QAAS,SAAAe,GAAE,OAAI,EAAKsN,uBAAuBtN,UAMrD,kBAAC,EAAD,CAAaf,QAAS,SAAAe,GAAE,OAAI,EAAKuN,iBAAiBvN,a,GAvKpCR,IAAMC,WA+KhCmM,GAAYC,OAAS,KACrBD,GAAY/K,MAAQ,SAEL+K,UC1MT4B,IAtBmBhO,IAAMC,U,kDAuB7B,WAAYrB,GAAQ,uCACZA,G,qDAGE,IAAD,OACDqP,EAAUhP,KAAKL,MAAMqP,QAI3B,OAHAlQ,QAAQC,IAAI,sBACZD,QAAQC,IAAIiQ,GAGV,2BAAOzO,GAAG,gBACPyO,GACCA,EAAQlC,KAAI,SAAAnE,GAAI,OACd,wBAAIoE,IAAKpE,EAAK7D,aACZ,wBACEnE,MAAO,CAAEsO,OAAQ,WACjBzO,QAAS,kBAAM,EAAKb,MAAMa,QAAQmI,EAAK7D,eAEvC,yBAAKnE,MAAO,CAAEE,UAAW,OAAQD,WAAY,KAC1C+H,EAAKqF,aAGV,gDACA,wBACErN,MAAO,CAAEsO,OAAQ,WACjBzO,QAAS,kBAAM,EAAKb,MAAMa,QAAQmI,EAAK7D,eAEtC6D,EAAKtI,UAER,gDACA,wBACEM,MAAO,CAAEsO,OAAQ,WACjBzO,QAAS,kBAAM,EAAKb,MAAMa,QAAQmI,EAAK7D,eAEtC6D,EAAKwF,gBAAgBC,UAAU,IAElC,gDACA,wBACEzN,MAAO,CAAEsO,OAAQ,WACjBzO,QAAS,kBAAM,EAAKb,MAAMa,QAAQmI,EAAK7D,eAEtC6D,EAAK0F,gBAER,gDACA,wBACE1N,MAAO,CAAEsO,OAAQtG,EAAK4F,SAAW,UAAY,WAC7C/N,QAAS,kBAAM,EAAKb,MAAMa,QAAQmI,EAAK7D,eAErC6D,EAAK4F,SAAwB,GAAb,YAEpB,gDACA,wBACE5N,MAAO,CAAEsO,OAAQtG,EAAK0C,OAAS,UAAY,WAC3C7K,QAAS,kBAAM,EAAKb,MAAMa,QAAQmI,EAAK7D,eAErC6D,EAAK0C,OAA4B,GAAnB,2B,GAxDNtK,IAAMC,YAiE5BvB,GAAM,KAEJyP,G,kDACJ,WAAYvP,GAAQ,IAAD,6BACjB,cAAMA,GACNb,QAAQC,IAAI,6BACZ,EAAKe,MAAQ,CAAEC,MAAO,GAEtBN,GAAG,eALc,E,0KASjBX,QAAQC,IAAI,mCACZoQ,GAAiB,I,8IAIjBrQ,QAAQC,IAAI,sCACZU,GAAM,O,iCAIN,IAAMM,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,6CAGF+E,GACrBhG,QAAQC,IAAI,oCAAsC+F,GAClDoK,EAAcpK,YAAcA,EAC5BoK,EAAcE,iBAAkB,EAChCpP,KAAKoB,a,+CAILtC,QAAQC,IAAI,0C,wCAIZmQ,EAAcE,iBAAkB,EAChCpP,KAAKoB,a,kCAKL,OADAtC,QAAQC,IAAI,2BACLmQ,EAAcG,oBAAoBvL,IAAIoL,EAAcpK,e,+BAGnD,IAAD,OACPhG,QAAQC,IAAI,wBAEZ,IAAMiQ,EAAUE,EAAcF,QACxBI,EAAkBF,EAAcE,gBAEtC,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKzO,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAtB,YAEDsO,EACC,kBAAC,GAAD,CACE9B,UAAW,kBAAM,EAAKA,aACtBC,QAAS,SAAAhM,GAAE,OAAI,EAAK+N,uBAAuB/N,IAC3CY,WAAYnC,KAAKuP,gBAAgB9D,KAAKzL,QAEtC,KACJ,yBACEW,MAAO,CACLC,WAAY,GAGZgB,OAAQ,iBACR8M,KAAM,mBACNC,WAAY,OAEZC,UAAW,WAGb,kBAAC,GAAD,CACEI,QAASA,EACTxO,QAAS,SAAAe,GAAE,OAAI,EAAKsN,uBAAuBtN,Y,GA9E3BR,IAAMC,W,SA4FnBmO,G,iFAAf,WAAgChD,GAAhC,uBAAAxI,EAAA,sEACiCqL,GAAQ5C,WAAWD,GADpD,mBACUtN,EADV,EACUA,KAAMyE,EADhB,EACgBA,OACdxE,QAAQC,IAAI,uDAAyDuE,IAEjEzE,EAAKiN,aAJX,wBAKIhN,QAAQC,IACN,kDACEF,EAAKiN,aAAavC,aAClB,kBACA1K,EAAKiN,aAAaC,YAGtBmD,GAAclE,YAAcnM,EAAKiN,aAAavC,aAE1C9J,IAAKA,GAAI2B,WAdjB,2BAqBE,IAFA8N,GAAcF,QAAUnQ,EACxBqQ,GAAcG,oBAAsB,IAAI3C,IAC/BC,EAAI,EAAGA,EAAIuC,GAAcF,QAAQjG,OAAQ4D,IAC1CS,EAAS8B,GAAcF,QAAQrC,GACrCuC,GAAcG,oBAAoBzC,IAAIQ,EAAOtI,YAAasI,GAGxD3N,IAAKA,GAAI2B,WA1Bf,6C,sBANA8N,GAAcF,QAAU,KACxBE,GAAcG,oBAAsB,IAAI3C,IACxCwC,GAAcpK,YAAc,GAC5BoK,GAAclE,YAAc,GAC5BkE,GAAcE,iBAAkB,EA+BjBF,UCtGAM,G,kDA7Gb,WAAY7P,GAAQ,IAAD,6BACjB,cAAMA,GAENb,QAAQC,IAAI,8BAEZ,EAAKe,MAAQ,CAAEC,MAAO,GAEnB,eAPc,E,gEAWjBjB,QAAQC,IAAI,oCACZ,IAAMgB,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,6CAIvBjB,QAAQC,IAAI,uCACN,O,iCAIN,IAAMgB,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,+BA8BvB,OAFAjB,QAAQC,IAAI,yBAGV,6BACE,kBAAC,EAAD,MACA,yBAAK4B,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAtB,8CAIF,yBAAKH,MAAO,CAAEC,WAAY,GAAIC,UAAW,OAAQ8N,WAAY,WAC3D,kIAE4C,6BAC1C,6BAHF,iCAGuC,IACrC,uBAAGc,KAAK,ioBAAR,QAGA,6BACA,6BARF,qDAQ2D,IACzD,uBAAGA,KAAK,oWAAR,QAGA,6BACA,6BAbF,uCAa6C,IAC3C,uBAAGA,KAAK,wOAAR,QAGA,6BACA,6BAlBF,yCAmByC,IACvC,uBAAGA,KAAK,6EAAR,QAGA,6BACA,6BAxBF,+FA2BE,6BA3BF,4BA4B4B,IAC1B,uBAAGA,KAAK,iCAAR,QACA,6BACA,6BA/BF,4ZAuCc,4CAvCd,iB,GA/DmB1O,IAAMC,WC6GpB0O,G,kDAvGb,WAAY/P,GAAQ,IAAD,6BACjB,cAAMA,GAENb,QAAQC,IAAI,6BAEZ,EAAKe,MAAQ,CAAE+H,SAAU,IAEtB,eAPc,E,0DAWjB,OAAO7H,KAAKF,MAAM+H,W,mCAGPtG,GACX,IAAM8E,EAAO9E,EAAGwF,OAAOV,KACjBC,EAAQ/E,EAAGwF,OAAOT,MAExBxH,QAAQC,IAAI,sBAAwBsH,EAAO,WAAarG,KAAKF,MAAMuG,IAWnErG,KAAKC,SAAL,gBAAiBoG,EAAOC,M,uCAGT/E,GACfzC,QAAQC,IAAI,kCAEZiB,KAAKL,MAAMqH,SAAS,IACpBhH,KAAKL,MAAMwC,aAEXnC,KAAKF,MAAM+H,SAAW,K,iFAGAtG,G,iEAGtBvB,KAAKL,MAAMqH,SAAShH,KAAKF,MAAM+H,UAC/B7H,KAAKL,MAAMwC,aAEXnC,KAAKF,MAAM+H,SAAW,G,4IAKtB,OAAO,I,+BAGC,IAAD,OAGP,OAFA/I,QAAQC,IAAI,wBAGV,6BACE,kBAAC,EAAD,MACA,yBAAKuB,UAAU,SACb,yBAAKA,UAAU,eACb,yBAAKK,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAtB,mBAEF,8BACE,kBAAC,GAAD,CACEU,KAAK,WACLgF,WAAW,EACXC,UAAU,EACVJ,KAAK,WACLC,MAAOtG,KAAK2P,cACZ/M,MAAM,WACN8D,SAAU,SAACnF,GAAD,OAAQ,EAAK2F,aAAa3F,IACpCgF,MAAM,GACNI,mBAAmB,IAErB,4BAAK3G,KAAKL,MAAMwH,MAChB,yBAAKxG,MAAO,CAAEE,UAAW,WACvB,kBAACuG,GAAA,EAAD,CACE5F,KAAK,SACL6F,QAAQ,YACRZ,UAAWzG,KAAKsH,eAChB3G,MAAO,CACLqB,MAAO,QACPuF,MAAO,WAGT/G,QAAS,SAACe,GAAD,OAAQ,EAAKc,kBAAkBd,KAT1C,WAcF,kBAAC,EAAD,CAAaf,QAAS,SAACe,GAAD,OAAQ,EAAKuN,iBAAiBvN,c,GA/FtCR,IAAMC,WCE9BvB,GAAM,KAEJmQ,G,kDACJ,WAAYjQ,GAAQ,IAAD,6BACjB,cAAMA,GAENb,QAAQC,IAAI,8BAEZ,EAAK8Q,YAAc,0BAEnB,EAAKxE,OAAS,EAEd5L,GAAG,eATc,E,gEAajBX,QAAQC,IAAI,oCACZ6Q,EAAe7F,gBAAiB,EAChC6F,EAAe5F,eAAgB,EAC/B4F,EAAeE,mBAAoB,EACnCF,EAAeG,mBAAoB,EACnC,IAAMhQ,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,6CAIvBjB,QAAQC,IAAI,uCACZU,GAAM,O,oCAIN,IAAM0F,EAAW,CACf9E,SAAUuP,EAAevP,SACzBsH,aAAciI,EAAejI,aAC7BC,cAAegI,EAAehI,cAC9BC,SAAU+H,EAAe/H,SACzBC,UAAW8H,EAAe9H,WAM5B,OAJAhJ,QAAQC,IAAI,+BAAiCwN,KAAKC,UAAUrH,IAC5DrG,QAAQC,IACN,8CAAgDoG,EAASwC,cAEpDxC,I,kCAGGA,GACVrG,QAAQC,IACN,8CAAgDoG,EAASwC,cAE3DiI,EAAevP,SAAW8E,EAAS9E,SACnCuP,EAAejI,aAAexC,EAASwC,aACvCiI,EAAehI,cAAgBzC,EAASyC,cACxCgI,EAAe/H,SAAW1C,EAAS0C,SACnC+H,EAAe9H,UAAY3C,EAAS2C,Y,0CAOpC,OAHAhJ,QAAQC,IACN,qCAAuC6Q,EAAe7F,gBAEjD6F,EAAe7F,iB,wCAGNA,GAChB6F,EAAe7F,eAAiBA,EAChCjL,QAAQC,IACN,qCAAuC6Q,EAAe7F,kB,yCAQxD,OAHAjL,QAAQC,IACN,oCAAsC6Q,EAAe5F,eAEhD4F,EAAe5F,gB,uCAGPA,GACf4F,EAAe5F,cAAgBA,EAC/BlL,QAAQC,IACN,oCAAsC6Q,EAAe5F,iB,iCAKvD,IAAMjK,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,iFAGDoF,G,iEACtBrG,QAAQC,IAAI,oCACZD,QAAQC,IAAI,YAAcoG,EAAS9E,UACnCvB,QAAQC,IAAI,iBAAmBoG,EAASyC,eACxC9I,QAAQC,IAAI,gBAAkBoG,EAASwC,cAEvC9B,GAAWV,G,mLAGWA,G,iEACtBrG,QAAQC,IAAI,oCACZ0G,GAAWN,G,yIAGI5D,GACfzC,QAAQC,IAAI,uBACZkC,EAAatC,KAAK8B,IAAKnN,UAAWmN,IAAKzP,Y,uCAIvC,OAAO4e,EAAe5E,c,6CAItBlM,QAAQC,IAAI,2C,sCAIZ6Q,EAAe3E,eAAgB,EAC/B2E,EAAe7F,gBAAiB,EAChC6F,EAAe5F,eAAgB,EAC/BhK,KAAKoB,a,+CAGkByG,GACnBA,IAAa+H,EAAe/H,UAC9B/I,QAAQC,IAAI,+CACZ6Q,EAAeG,mBAAoB,EACnCH,EAAeI,kBAAmB,GACxBnI,IACV/I,QAAQC,IAAI,+CACZ6Q,EAAeG,mBAAoB,EACnCH,EAAeI,kBAAmB,K,0CAKpClR,QAAQC,IAAI,wBACR6Q,EAAeG,mBACjBH,EAAeE,mBAAoB,EACnCF,EAAe7F,gBAAiB,GACtB6F,EAAeI,mBACzBJ,EAAeE,mBAAoB,EACnCF,EAAe7F,gBAAiB,GAElC6F,EAAe5F,eAAgB,EAC/BhK,KAAKoB,a,+BAGG,IAAD,OACDoN,EAAaoB,EAAepB,WAClC1P,QAAQC,IAAI,uCAAyCyP,GAErD,IAAMwB,EAAmBJ,EAAeI,iBAClC/E,EAAgB2E,EAAe3E,cAC/B6E,EAAoBF,EAAeE,kBACnCxE,EAAcsE,EAAetE,YAEnC,OACE,6BACGkD,GAAcsB,GACb,kBAAC,GAAD,CACE9I,SAAU,SAACzF,GAAD,OAAQ,EAAK0O,yBAAyB1O,IAChDY,WAAYnC,KAAKkQ,kBAAkBzE,KAAKzL,QAG3CiL,GACC,kBAAC,EAAD,CACE7I,MAAO,YACPF,eAAgB,kBAAM,EAAKA,kBAC3B8E,SAAU,SAACzF,GAAD,OAAQ,EAAKmK,qBAAqBnK,IAC5CY,WAAYnC,KAAK2L,cAAcF,KAAKzL,QAGvCsL,GAAe,kBAAC,GAAD,OACdkD,IAAevD,GACf,6BACE,kBAAC,EAAD,MACA,yBAAKtK,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAWd,KAAK6P,cAExC,yBAAKlP,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAtB,oDAGA,kBAACsG,GAAA,EAAD,CACE5F,KAAK,SACL6F,QAAQ,YACR1G,MAAO,CACLqB,MAAO,QACPuF,MAAO,WAETV,WAAS,EACTrG,QAAS,SAACe,GAAD,OAAQ,EAAK4O,iBAAiB5O,KARzC,WAeLiN,IAAesB,GAAqBE,GACnC,kBAAC,GAAD,CACE5N,MAAOpC,KAAK6P,YACZhH,YAAa7I,KAAK6I,YAClBC,YAAa9I,KAAK8I,YAClBI,kBAAmBlJ,KAAKkJ,kBACxBU,kBAAmB5J,KAAK4J,kBACxBK,iBAAkBjK,KAAKiK,iBACvBJ,iBAAkB7J,KAAK6J,iBACvBQ,kBAAkB,EAClBrB,aAAc,SACdhC,SAAU,SAACzF,GAAD,OAAQ,EAAK6O,kBAAkB7O,IACzC0H,aAAc,SACda,UAAW,SAACvI,GAAD,OAAQ,EAAK8O,kBAAkB9O,W,GAlNzBkG,I,SA+OdhC,G,iFAAf,WAA0BN,GAA1B,iBAAAxB,EAAA,6DACEiM,GAAetE,aAAc,EACzB7L,IAAKA,GAAI2B,WAFf,SAIiCyK,GAAKpG,WAAWN,GAJjD,mBAIUtG,EAJV,EAIUA,KAJV,EAIgByE,QACVzE,EAAKiN,aALX,wBAMIhN,QAAQC,IACN,6CACEF,EAAKiN,aAAavC,aAClB,kBACA1K,EAAKiN,aAAaC,YAGtB6D,GAAe7F,gBAAiB,EAChC6F,GAAe5F,eAAgB,EAC/B4F,GAAe5E,YAAcnM,EAAKiN,aAAavC,aAC/CqG,GAAe3E,eAAgB,EAC/B2E,GAAetE,aAAc,EAEzB7L,IAAKA,GAAI2B,WAnBjB,2BAwBEH,EAAatC,KAAK8B,IAAK6P,gBAAiB,CACtCjQ,SAAUuP,GAAevP,SACzBqE,UAAWkL,GAAelL,YAG5BkL,GAAe7F,gBAAiB,EAChC6F,GAAe5F,eAAgB,EAC/B4F,GAAe5E,YAAc4E,GAAevP,SAAW,WACvDuP,GAAe3E,eAAgB,EAC/B2E,GAAetE,aAAc,EAE7BsE,GAAevE,OAAS,EACxBuE,GAAevP,SAAW,GAC1BuP,GAAejI,aAAe,GAC9BiI,GAAehI,cAAgB,GAC/BgI,GAAe/H,SAAW,GAC1B+H,GAAe9H,UAAY,GAC3B8H,GAAe1P,SAAU,EACzB0P,GAAepB,YAAa,EAC5BoB,GAAelL,UAAY,GAEvBjF,IAAKA,GAAI2B,WA7Cf,6C,+BAgDeyE,G,iFAAf,WAA0BV,GAA1B,iBAAAxB,EAAA,6DACEiM,GAAetE,aAAc,EACzB7L,IAAKA,GAAI2B,WAFf,SAIiCyK,GAAKhG,WAAWV,GAJjD,mBAIUtG,EAJV,EAIUA,KAJV,EAIgByE,QACVzE,EAAKiN,aALX,wBAMIhN,QAAQC,IACN,6CACEF,EAAKiN,aAAavC,aAClB,kBACA1K,EAAKiN,aAAaC,YAGtB6D,GAAe7F,gBAAiB,EAChC6F,GAAe5F,eAAgB,EAC/B4F,GAAe5E,YAAcnM,EAAKiN,aAAavC,aAC/CqG,GAAe3E,eAAgB,EAC/B2E,GAAetE,aAAc,EAEzB7L,IAAKA,GAAI2B,WAnBjB,2BAwBEwO,GAAehI,cAAgBzC,EAASyC,cACxCgI,GAAejI,aAAexC,EAASwC,aACvCiI,GAAe/H,SAAW1C,EAAS0C,SAEnC+H,GAAe7F,gBAAiB,EAChC6F,GAAe5F,eAAgB,EAC/B4F,GAAe5E,YAAc4E,GAAevP,SAAW,WACvDuP,GAAe3E,eAAgB,EAC/B2E,GAAetE,aAAc,EAEzB7L,IAAKA,GAAI2B,WAlCf,6C,sBArEAwO,GAAevP,SAAW,GAC1BuP,GAAejI,aAAe,GAC9BiI,GAAehI,cAAgB,GAC/BgI,GAAe/H,SAAW,GAC1B+H,GAAe9H,UAAY,GAE3B8H,GAAevE,OAAS,EACxBuE,GAAe1P,SAAU,EACzB0P,GAAepB,YAAa,EAC5BoB,GAAelL,UAAY,GAE3BkL,GAAe5E,YAAc,GAC7B4E,GAAe3E,eAAgB,EAC/B2E,GAAeE,mBAAoB,EACnCF,GAAetE,aAAc,EAE7BsE,GAAeI,kBAAmB,EAClCJ,GAAeG,mBAAoB,EACnCH,GAAe7F,gBAAiB,EAChC6F,GAAe5F,eAAgB,EAuF/B,IAAMuG,GAAiB,uCAAG,WAAOrP,EAAOrC,GAAd,qBAAA8E,EAAA,yDAChBtD,EAA+CxB,EAA/CwB,SAAUqE,EAAqC7F,EAArC6F,UAAWmD,EAA0BhJ,EAA1BgJ,SAAU1G,EAAgBtC,EAAhBsC,YACvCrC,QAAQC,IACN,gDACEsB,EACA,mBACAc,GAEJyO,GAAevP,SAAWA,EAE1BuP,GAAe/H,SAAWA,EAC1B+H,GAAe9H,UAAYD,EAC3B+H,GAAepB,WAAarN,IAAgBV,IAAK9J,oBACjDiZ,GAAelL,UAAYA,GACvBkL,GAAepB,YAAeoB,GAAejI,aAdzB,kCAehBjC,KAfgB,4CAAH,wD,SAmBRA,K,8EAAf,8BAAA/B,EAAA,sEACiCkI,GAAKnG,UADtC,gBACU7G,EADV,EACUA,KADV,EACgByE,OACdxE,QAAQC,IACN,wDACEF,EAAK8I,aACL,WACA9I,EAAK+I,eAGTgI,GAAevE,OAASxM,EAAKwM,OAC7BuE,GAAejI,aAAe9I,EAAK8I,aACnCiI,GAAehI,cAAgB/I,EAAK+I,cACpCgI,GAAe1P,QAAUrB,EAAKqB,QAC1BT,IAAKA,GAAI2B,WAbf,6C,sBAgBAH,EAAa3B,GAAGmB,IAAKlN,eAAgBgd,IAEtBX,UC1WXnQ,GAAM,KAEJ+Q,G,kDACJ,WAAY7Q,GAAQ,IAAD,6BACjB,cAAMA,GAENb,QAAQC,IAAI,oCAEZ,EAAKe,MAAQ,CACX2Q,QAAQ,EACR/I,OAAQ,GACR3H,MAAO,GAGT,EAAKlB,KAAO,CACVwB,SAAU,KACVqQ,kBAAmB,KACnB7I,SAAU,KACVC,UAAW,MAGbrI,GAAG,eAEH,EAAKsI,OAAS,CACZ1H,SAAU2H,KAAIC,SAASC,WAAWtF,MAAM,aAAauF,IAAI,GAAGC,IAAI,IAChEsI,kBAAmB1I,KAAIC,SACpBC,WACAtF,MAAM,uBACNuF,IAAI,GACJC,IAAI,GACPP,SAAUG,KAAIC,SAASC,WAAWtF,MAAM,YAAYuF,IAAI,GAAGC,IAAI,IAC/DN,UAAWE,KAAIC,SAASC,WAAWtF,MAAM,kBAAkBuF,IAAI,GAAGC,IAAI,KA5BvD,E,gEAiCjBtJ,QAAQC,IAAI,0CACZiB,KAAKnB,KAAKwB,SAAWmQ,EAAqBnQ,SAC1CL,KAAKnB,KAAK6R,kBAAoBF,EAAqBE,kBACnD1Q,KAAKnB,KAAKgJ,SAAW2I,EAAqB3I,SAC1C7H,KAAKnB,KAAKiJ,UAAY0I,EAAqB1I,UAE3C9H,KAAKoB,a,6CAILtC,QAAQC,IAAI,6CACZyR,EAAqBnQ,SAAWL,KAAKnB,KAAKwB,SAC1CmQ,EAAqBE,kBAAoB1Q,KAAKnB,KAAK6R,kBACnDF,EAAqB3I,SAAW7H,KAAKnB,KAAKgJ,SAC1C2I,EAAqB1I,UAAY9H,KAAKnB,KAAKiJ,UAE3CrI,GAAM,O,uCAGS4G,EAAMC,GACrBxH,QAAQC,IAAI,6BAA+BsH,EAAO,aAAeC,GACjE,IAAMiC,EAAG,gBAAMlC,EAAOC,GAChByB,EAAM,gBAAM1B,EAAOrG,KAAK+H,OAAO1B,IAC7BE,EAAUyB,KAAIQ,SAASD,EAAKR,GAA5BxB,MAIR,OAFAzH,QAAQC,IAAI,qCAAuCwH,GAE5CA,EAAQA,EAAMkC,QAAQ,GAAG9F,QAAU,O,iCAI1C,IACQ4D,EAAUyB,KAAIQ,SAASxI,KAAKnB,KAAMmB,KAAK+H,OAD/B,CAAEW,YAAY,IACtBnC,MACR,IAAKA,EAAO,OAAO,KAEnBzH,QAAQC,IAAI,2BAEZ,IAPS,EAOH2I,EAAS,GAPN,eAQQnB,EAAMkC,SARd,IAQT,gCAASE,EAAT,QAAgCjB,EAAOiB,EAAKC,KAAK,IAAMD,EAAKhG,SARnD,8BAST,OAAO+E,I,mCAGInG,GACX,IAAM8E,EAAO9E,EAAGwF,OAAOV,KACjBC,EAAQ/E,EAAGwF,OAAOT,MACxBxH,QAAQC,IAAI,QAAUsH,EAAO,WAAarG,KAAKnB,KAAKwH,IACpD,IAAMqB,EAAS1H,KAAKF,MAAM4H,OACpB6B,EAAevJ,KAAKwJ,iBAAiBnD,EAAMC,GAC7CiD,EAAc7B,EAAOrB,GAAQkD,SACrB7B,EAAOrB,GACnB,IAAMxH,EAAOmB,KAAKnB,KAClBA,EAAKwH,GAAQC,EACbtG,KAAKC,SAAS,CAAEpB,OAAM6I,a,sCAGRnG,GACdiP,EAAqBnQ,SAAW,GAChCmQ,EAAqBE,kBAAoB,GACzCF,EAAqB3I,SAAW,GAChC2I,EAAqB1I,UAAY,GAEjC0I,EAAqBG,0BAA2B,EAChDH,EAAqBI,uBAAyB,GAE9CJ,EAAqBK,yBAA0B,EAC/CL,EAAqBM,yBAA2B,GAEhDN,EAAqBO,eAAgB,EACrCP,EAAqBzG,gBAAiB,EACtCyG,EAAqBQ,qBAAsB,EAE3CR,EAAqBS,UAAW,EAEhCjR,KAAKkR,sB,yCAGY3P,GACjBzC,QAAQC,IAAI,8CACZD,QAAQC,IAAI,YAAciB,KAAKnB,KAAKwB,U,qCASpCuF,CAAsB,CAAEvF,SAAUL,KAAKnB,KAAKwB,a,4CAGxBkB,GACpB,IAAM8E,EAAO9E,EAAGwF,OAAOV,KACjBC,EAAQ/E,EAAGwF,OAAOT,MAIxB,GAFAxH,QAAQC,IAAI,QAAUsH,EAAO,WAAarG,KAAKnB,KAAKwH,IAEhDrG,KAAKnB,KAAKgJ,WAAavB,EAAO,CAChC,IAAMoB,EAAS1H,KAAKF,MAAM4H,OAC1BA,EAAOrB,GAAQ,wBAEf,IAAMxH,EAAOmB,KAAKnB,KAKlB,OAJAA,EAAKwH,GAAQC,OAEbtG,KAAKC,SAAS,CAAEpB,OAAM6I,WAKxB,OAAO1H,KAAKkH,aAAa3F,K,wCAGTA,GAChBzC,QAAQC,IAAI,6CACZD,QAAQC,IAAI,YAAciB,KAAKnB,KAAKwB,UACpCvB,QAAQC,IAAI,qBAAuBiB,KAAKnB,KAAK6R,mBAE7CnP,EAAGkI,iBACH,IAAM/B,EAAS1H,KAAKwI,WAChBd,GACF5I,QAAQC,IAAI,kCAAoC2K,OAAOC,OAAOjC,IAChE1H,KAAKC,SAAS,CAAEyH,OAAQA,GAAU,KAC9BA,G,qCAEJyJ,CAAe,CACb9Q,SAAUL,KAAKnB,KAAKwB,SACpBqQ,kBAAmB1Q,KAAKnB,KAAK6R,kBAC7B7I,SAAU7H,KAAKnB,KAAKgJ,a,qCAKtB,OACE7H,KAAKmJ,mBACLnJ,KAAKoR,4BACLpR,KAAKsJ,mBACLtJ,KAAKnB,KAAKgJ,WAAa7H,KAAKnB,KAAKiJ,Y,wCAKnC,OAA6B,MAAtB9H,KAAKnB,KAAKwB,UAAoBL,KAAKnB,KAAKwB,SAAS0I,OAAS,I,iCAIjE,OAAOyH,EAAqBS,W,iDAI5B,OACiC,MAA/BjR,KAAKnB,KAAK6R,mBAC6B,IAAvC1Q,KAAKnB,KAAK6R,kBAAkB3H,S,wCAK9B,OAA6B,MAAtB/I,KAAKnB,KAAKgJ,UAAoB7H,KAAKnB,KAAKgJ,SAASkB,OAAS,I,kCAIjE1C,EACAzD,GAKC,IAJDpB,EAIA,uDAJO,OACPgF,EAGA,wDAFAC,EAEA,wDADAC,EACA,uDADW,KAEHgB,EAAW1H,KAAKF,MAAhB4H,OACF7I,EAAOmB,KAAKnB,KAElBC,QAAQC,IACN,0CAA4CsH,EAAO,WAAaxH,EAAKwH,IAGrDrG,KAAKkH,aAEvB,OACE,kBAAC,GAAD,CACE1F,KAAMA,EACN6E,KAAMA,EACNzD,MAAOA,EACP0D,MAAOzH,EAAKwH,GACZE,MAAOmB,EAAOrB,GACdG,UAAWA,EACXC,SAAUA,EACVC,SAAUA,M,2CAMd,OAAO8J,EAAqBa,kB,iDAI5BvS,QAAQC,IAAI,iD,0CAIZyR,EAAqBc,mBAAoB,EACzCd,EAAqBzG,gBAAiB,EACtC/J,KAAKoB,a,+BAGEiF,EAAMC,GACTD,GAAQC,IAAOtG,KAAKnB,KAAKwH,GAAQC,GAErCtG,KAAKC,SAAS,CAAEF,MAAOC,KAAKF,MAAMC,MAAQ,M,+BAGlC,IAAD,OACPjB,QAAQC,IAAI,+BAEZ,IAAMgS,EAAgBP,EAAqBO,cACrChH,EAAiByG,EAAqBzG,eACtCuH,EAAoBd,EAAqBc,kBACzChG,EAAckF,EAAqBlF,YACnC0F,EAAsBR,EAAqBQ,oBAEjD,OACE,6BACE,kBAAC,EAAD,MACC1F,GAAe,kBAAC,GAAD,MACfgG,GACC,kBAAC,EAAD,CACElP,MAAO,kBACPF,eAAgB,kBAAM,EAAKqP,sBAC3BvK,SAAU,SAACzF,GAAD,OAAQ,EAAKiQ,yBAAyBjQ,IAChDY,WAAYnC,KAAKyR,kBAAkBhG,KAAKzL,QAG5C,yBAAKW,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAtB,oBAEF,yBAAKH,MAAO,CAAEE,UAAW,OAAQ8N,WAAY,WAC3C,6HAGE,6BAHF,sGAKE,6BALF,oHAUF,8BACG3O,KAAKoK,YACJ,WACA,YACA,QACA,GACC2G,GAAiB/Q,KAAKiR,YACvB,SAAC1P,GAAD,OAAQ,EAAK2F,aAAa3F,MAE3BvB,KAAKoK,YACJ,oBACA,sBACA,QACA,GACC2G,IAAkB/Q,KAAKmJ,oBAAsBnJ,KAAKiR,YACnD,SAAC1P,GAAD,OAAQ,EAAK2F,aAAa3F,MAE3BvB,KAAKoK,YACJ,WACA,WACA,YACA,GACC2G,IAAkB/Q,KAAKoR,4BACxB,SAAC7P,GAAD,OAAQ,EAAK2F,aAAa3F,MAE3BvB,KAAKoK,YACJ,YACA,iBACA,YACA,GACC2G,IAAkB/Q,KAAKsJ,mBACxB,SAAC/H,GAAD,OAAQ,EAAK+I,sBAAsB/I,MAErC,qCACA,yBAAKZ,MAAO,CAAEC,WAAY,SACxB,2BAAO2J,MAAM,QACX,+BACE,4BACE,4BACE,yBAAK5J,MAAO,CAAEE,UAAW,WACvB,kBAACuG,GAAA,EAAD,CACE5F,KAAK,SACL6F,QAAQ,YACRZ,UACGsD,IACA/J,KAAKmJ,mBACNnJ,KAAKoR,2BAEPzQ,MAAO,CACLqB,MAAO,QACPuF,MAAO,WAGT/G,QAAS,SAACe,GAAD,OAAQ,EAAKmQ,mBAAmBnQ,KAb3C,cAmBJ,4BACE,yBACEZ,MAAO,CACLE,UAAW,SACXD,WAAY,GACZ4J,YAAa,KAGf,kBAACpD,GAAA,EAAD,CACE5F,KAAK,SACL6F,QAAQ,YACRZ,UACGsD,IACA/J,KAAKsH,iBACL0J,EAEHrQ,MAAO,CACLqB,MAAO,QACPuF,MAAO,WAGT/G,QAAS,SAACe,GAAD,OAAQ,EAAKc,kBAAkBd,KAb1C,YAmBJ,4BACE,yBAAKZ,MAAO,CAAEE,UAAW,WACvB,kBAACuG,GAAA,EAAD,CACE5F,KAAK,SACL6F,QAAQ,YACRZ,UAAWsD,EACXpJ,MAAO,CACLqB,MAAO,QACPuF,MAAO,WAGT/G,QAAS,SAACe,GAAD,OAAQ,EAAKoQ,gBAAgBpQ,KATxC,qB,GA9WaR,IAAMC,W,8CAsZzC,WAAqC+C,GAArC,iBAAAJ,EAAA,6DACE6M,GAAqBzG,gBAAiB,EACtCyG,GAAqBlF,aAAc,EAC/B7L,IAAKA,GAAI2B,WAHf,SAKiCyK,GAAKjG,sBAAsB7B,GAL5D,gBAKUlF,EALV,EAKUA,KALV,EAKgByE,OACVzE,EAAKiN,cACPhN,QAAQC,IACN,qDACEF,EAAKiN,aAAavC,aAClB,kBACA1K,EAAKiN,aAAaC,YAGtByE,GAAqBa,gBAAkBxS,EAAKiN,aAAavC,eAEzDiH,GAAqBa,gBACnB,6CACAb,GAAqBnQ,SACvBmQ,GAAqBS,UAAW,EAChCT,GAAqBQ,qBAAsB,GAG7CR,GAAqBzG,gBAAiB,EACtCyG,GAAqBc,mBAAoB,EACzCd,GAAqBlF,aAAc,EAE/B7L,IAAKA,GAAI2B,WA3Bf,6C,oEA8BA,WAA8B2C,GAA9B,iBAAAJ,EAAA,6DACE6M,GAAqBzG,gBAAiB,EACtCyG,GAAqBlF,aAAc,EAC/B7L,IAAKA,GAAI2B,WAHf,SAKiCyK,GAAKlG,YAAY5B,GALlD,gBAKUlF,EALV,EAKUA,KALV,EAKgByE,OACVzE,EAAKiN,cACPhN,QAAQC,IACN,uDACEF,EAAKiN,aAAavC,aAClB,kBACA1K,EAAKiN,aAAaC,YAGtByE,GAAqBa,gBAAkBxS,EAAKiN,aAAavC,eAEzDiH,GAAqBa,gBACnB,sCAAwCb,GAAqBnQ,SAC/DmQ,GAAqBO,eAAgB,EACrCP,GAAqBQ,qBAAsB,GAG7CR,GAAqBzG,gBAAiB,EACtCyG,GAAqBc,mBAAoB,EACzCd,GAAqBlF,aAAc,EAE/B7L,IAAKA,GAAI2B,WA1Bf,6C,sBA7CAoP,GAAqBnQ,SAAW,GAChCmQ,GAAqBE,kBAAoB,GACzCF,GAAqB3I,SAAW,GAChC2I,GAAqB1I,UAAY,GAEjC0I,GAAqBc,mBAAoB,EACzCd,GAAqBa,gBAAkB,GAEvCb,GAAqBzG,gBAAiB,EACtCyG,GAAqBO,eAAgB,EACrCP,GAAqBQ,qBAAsB,EAC3CR,GAAqBlF,aAAc,EAEnCkF,GAAqBS,UAAW,EAuEhChQ,EAAa3B,GAAGmB,IAAKlN,gBAVK,SAAC2N,EAAOrC,GAAU,IAClCwB,EAAaxB,EAAbwB,SAERvB,QAAQC,IAAI,oDAAsDsB,GAElEmQ,GAAqBnQ,SAAWA,EAErB,MAAPZ,IAAaA,GAAI2B,SAAS,WAAYf,MAK7BmQ,UC5bAoB,G,kDAvCb,WAAYjS,GAAQ,IAAD,6BACjB,cAAMA,GAENb,QAAQC,IAAI,mCAEZ,EAAKe,MAAQ,CAAEC,MAAO,GAEnB,eAPc,E,gEAWjBjB,QAAQC,IAAI,yCAEZkC,EAAatC,KAAK8B,IAAKnL,cAAe,QACtC2L,EAAatC,KAAK8B,IAAKnN,UAAWmN,IAAK1P,UACvCiP,KAAKoB,a,6CAILtC,QAAQC,IAAI,4CACN,O,iCAIQiB,KAAKF,MAAMC,MACzBC,KAAKC,SAAS,CAAEF,MAAOC,KAAKF,MAAMC,MAAQ,M,+BAM1C,OAFAjB,QAAQC,IAAI,8BAGV,6BACE,kBAAC,EAAD,W,GAlC0BgC,IAAMC,WCiEzB6Q,G,kDA/Db,WAAYlS,GAAQ,IAAD,6BACjB,cAAMA,GAENb,QAAQC,IAAI,2BAEZ,EAAKe,MAAQ,CAAEC,MAAO,GAEnB,eAPc,E,gEAWjBjB,QAAQC,IAAI,iCACZ,IAAMgB,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,6CAIvBjB,QAAQC,IAAI,oCACN,O,4CAIND,QAAQC,IAAI,mCACZkC,EAAatC,KAAK8B,IAAKnN,UAAWmN,IAAK/O,gB,iCAIvC,IAAMqO,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,+BAGf,IAAD,OAGP,OAFAjB,QAAQC,IAAI,sBAGV,6BACE,kBAAC,EAAD,MACA,yBAAK4B,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAtB,iCAEF,yBACEH,MAAO,CAAEC,WAAY,GAAIC,UAAW,OAAQ8N,WAAY,WAExD,sCACW,IACT,4BACEmD,MAAM,mBACNtR,QAAS,SAAAe,GAAE,OAAI,EAAKwQ,oBAAoBxQ,KAExC,6CACQ,IAPZ,kDASE,6BACA,6BAVF,6I,GA5CgBR,IAAMC,W,6BCOjB,QAAE8C,IAXjB,SAAaiJ,GACX,IAAMiF,EAAMC,KAAQnO,IAAIiJ,GAExB,OADAhO,EAAI,qBAAuBgO,EAAM,WAAaiF,EAAK,OAAQ,QACpDA,GAQapF,IALtB,SAAaG,EAAKiF,GAEhB,OADAjT,EAAI,qBAAuBgO,EAAM,WAAaiF,EAAK,OAAQ,QACpDC,KAAQrF,IAAIG,EAAKiF,KCNtB/M,GAAkB,kB,8CAEtB,WAAoBC,GAApB,eAAAvB,EAAA,yDACE5E,EAAI,YAAa,OAAQ,QAEzBkG,GAAkBC,EAGlBnG,EAAI,wBADEsB,EAAW6R,GAAOpO,IAAI,aACW,OAAQ,QAC/B,MAAZzD,EAPN,oBAQ8B6R,GAAOpO,IAAI,YARzC,0CAUa,GAVb,iCAaS,GAbT,4C,+BAgBeqO,G,iFAAf,WAAyBC,GAAzB,SAAAzO,EAAA,6DACE5E,EAAI,YAAa,OAAQ,QAD3B,SAEeqG,EAAKpB,KAChB,WAAaiB,GAAkB,kBAC/BmN,GAJJ,oF,+BAQeC,K,8EAAf,sBAAA1O,EAAA,6DACE5E,EAAI,aAAc,OAAQ,QAD5B,SAEeqG,EAAKpB,KAAK,WAAaiB,GAAkB,oBAFxD,oF,oEAKA,gCAAAtB,EAAA,yDACE5E,EAAI,aAAc,OAAQ,QAG1BA,EAAI,aADEsB,EAAW6R,GAAOpO,IAAI,aACA,OAAQ,QACpB,MAAZzD,EALN,oBAO6B,OADnBiS,EAAoBJ,GAAOpO,IAAI,aANzC,wBAQYyO,EAAoBC,aAAQF,GARxC,SASmBG,GAAWpS,EAAUkS,GATxC,0EAYS,GAZT,6C,oEAeA,WAA4BxO,GAA5B,iBAAAJ,EAAA,6DACE5E,EAAI,qBAAsB,OAAQ,QAC1BsB,EAAuB0D,EAAvB1D,SAAUwH,EAAa9D,EAAb8D,SAFpB,SAGe4K,GAAWpS,EAAUwH,GAHpC,oF,oEAMA,WAA6B9D,GAA7B,eAAAJ,EAAA,6DACE5E,EAAI,sBAAuB,OAAQ,QAC3BsB,EAAa0D,EAAb1D,SAFV,SAGeqS,GAAYrS,GAH3B,oF,+BAMeoS,G,mFAAf,WAA0BpS,EAAUkS,GAApC,mBAAA5O,EAAA,6DACE5E,EAAI,gBAAiB,OAAQ,QAD/B,SAGiCoT,GAAU,CACvC9R,SAAUA,EACVwH,SAAU0K,IALd,mBAGU1T,EAHV,EAGUA,KAKRE,EAAI,yBALUuE,EAHhB,EAGgBA,QAKwB,OAAQ,QAC1CA,IAAW7C,IAAK3I,aATtB,wBAUIiH,EAAI,wBAAyB,OAAQ,QAVzC,UAWU4T,GACJtS,EACAkS,EACA1T,EAAK6F,UACL7F,EAAK2P,WAAa/N,IAAK9J,oBAAsB8J,IAAK7J,uBAClDiI,EAAKqB,SAhBX,uCAoBInB,EAAI,qBAAsB,OAAQ,QApBtC,UAqBU4T,GACJtS,EACA,GACA,GACAI,IAAK7J,wBACL,GA1BN,eA8BEmI,EAAI,gBAAiB,OAAQ,QA9B/B,kBAgCS,CAAEF,OAAMyE,WAhCjB,6C,+BAmCeoP,G,iFAAf,WAA2BrS,GAA3B,mBAAAsD,EAAA,6DACE5E,EAAI,iBAAkB,OAAQ,QADhC,SAGiCsT,KAHjC,mBAGUxT,EAHV,EAGUA,KACRE,EAAI,0BADUuE,EAHhB,EAGgBA,QACyB,OAAQ,QAC3CA,IAAW7C,IAAK3I,aALtB,wBAOIiH,EAAI,yBAA0B,OAAQ,QAP1C,UAQU4T,GAAiBtS,EAAU,GAAI,GAAII,IAAK/J,sBAAsB,GARxE,uCAWIqI,EAAI,sBAAuB,OAAQ,QAXvC,UAYU4T,GAAiBtS,EAAU,GAAI,GAAII,IAAK/J,sBAAsB,GAZxE,eAeEqI,EAAI,iBAAkB,OAAQ,QAfhC,kBAiBS,CAAEF,OAAMyE,WAjBjB,6C,+BAoBeqP,G,2FAAf,WACEtS,EACAkS,EACA7N,EACAvD,EACAjB,EACA0S,GANF,eAAAjP,EAAA,sDAQQkP,OAAmCC,IAAnBF,GAAsCA,EAC5D7T,EACE,iCACEsB,EACA,iBACAqE,EACA,mBACAvD,EACA,eACAjB,EACF,QAIFkF,EAAKX,mBAAmBC,GAExBzD,EAAatC,KAAK8B,IAAKlN,eAAgB,CACrC8M,SAAUA,EACVwH,SAAU0K,EACV7N,UAAWA,EACXvD,YAAaA,EACbjB,QAASA,EACT2S,kBAGF9T,EAAI,6CAA8C,OAAQ,WAG1DmT,GAAOtF,IAAI,WAAYvM,GAErBc,IAAgBV,IAAK9J,qBACrB+N,GACc,KAAdA,EAEAwN,GAAOtF,IAAI,WAAYmG,aAAQR,IAE/BL,GAAOtF,IAAI,WAAY,IAGzB7N,EAAI,sBAAuB,OAAQ,QA/CrC,4C,oEAkDA,kCAAA4E,EAAA,yDACE5E,EAAI,kBAAmB,OAAQ,QAG/BA,EAAI,2BADEsB,EAAW6R,GAAOpO,IAAI,aACc,OAAQ,QAC9CkP,GAAgB,EACJ,MAAZ3S,EANN,oBAQ6B,OADnBiS,EAAoBJ,GAAOpO,IAAI,aAPzC,wBASYyO,EAAoBC,aAAQF,GAClCU,GAAgB,EAVtB,UAWYP,GAAWpS,EAAUkS,GAXjC,WAcOS,EAdP,kCAeUL,GACJtS,EACA,GACA,GACAI,IAAK7J,wBACL,GACA,GArBN,QAwBEmI,EAAI,kBAAmB,OAAQ,QAxBjC,6C,sBA6Be,QACbuG,K,6CACAC,MAJF,aAKE0N,M,4CACAC,a,6CACAC,c,6CACAC,a,6CCjME3T,GAAM,KAEJ4T,G,kDACJ,WAAY1T,GAAQ,IAAD,8BACjB,cAAMA,IAyER2T,eAAiB,SAAC/R,EAAIa,GACpBtD,QAAQC,IAAI,4BAA8BwC,EAAGwL,IAAM,aAAe3K,IAxElEtD,QAAQC,IAAI,2BAEZ,EAAKe,MAAQ,CAAEC,MAAO,GAEtBN,GAAG,eAPc,E,gEAWjBX,QAAQC,IAAI,iCACZiB,KAAKoB,a,6CAILtC,QAAQC,IAAI,oCACZU,GAAM,O,iCAIN,IAAMM,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,oCAIvB,OAAOsT,EAAYhT,W,oCAInB,OAAOgT,EAAYxL,W,uCAInB,OAAOwL,EAAYrI,c,+CAInB,OACEqI,EAAYtJ,iBACXsJ,EAAY7E,YACV6E,EAAYhT,SAAS0I,QAAU,GAAKsK,EAAYxL,SAASkB,QAAU,K,6CAKxEjK,QAAQC,IAAI,sC,sCAIZsU,EAAYpI,eAAgB,EAC5BoI,EAAYtJ,gBAAiB,EAC7B/J,KAAKoB,a,mCAIMG,GACX,IAAM8E,EAAO9E,EAAGwF,OAAOV,KACjBC,EAAQ/E,EAAGwF,OAAOT,MAExB,OADAxH,QAAQC,IAAI,6BAA+BsH,EAAO,MAAQC,GAClDD,GACN,IAAK,WACHgN,EAAYhT,SAAWiG,EACvB,MAEF,IAAK,WACH+M,EAAYxL,SAAWvB,EAK3BtG,KAAKoB,a,wCAeWG,EAAIa,GACpBtD,QAAQC,IAAI,0CAA4CqD,GAExDiR,EAAYtJ,gBAAiB,EAC7BsJ,EAAYjR,MAAQA,EACpBpC,KAAKoB,WACAiS,EAAY7E,W,qCAMf2E,CAAc,CACZ9S,SAAUgT,EAAYhT,SACtBqE,UAAW2O,EAAY3O,Y,qCAPzBwO,CAAa,CACX7S,SAAUgT,EAAYhT,SACtBwH,SAAUwL,EAAYxL,a,+BAUlB,IAAD,OACP/I,QAAQC,IAAI,sBAEZ,IAAMyP,EAAa6E,EAAY7E,WACzBvD,EAAgBoI,EAAYpI,cAC5BK,EAAc+H,EAAY/H,YAC1BiI,EAASF,EAAYjR,MAE3B,OACE,6BACE,kBAAC,EAAD,MACC6I,GACC,kBAAC,EAAD,CACE7I,MAAOmR,EACPrR,eAAgB,kBAAM,EAAKA,kBAC3B8E,SAAU,SAACzF,GAAD,OAAQ,EAAKmK,qBAAqBnK,IAC5CY,WAAYnC,KAAK2L,cAAcF,KAAKzL,SAGtCwO,GACA,yBAAK7N,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAtB,uBAGH0N,GACC,yBAAK7N,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAtB,wBAGHwK,GAAe,kBAAC,GAAD,OACdL,IAAkBuD,GAClB,8BACE,kBAAC,GAAD,CACEhN,KAAK,OACLgF,WAAW,EACXC,SAAU+H,EACVnI,KAAK,WACLC,MAAOtG,KAAKwT,cACZ5Q,MAAM,YACN8D,SAAU,SAACnF,GAAD,OAAQ,EAAK2F,aAAa3F,IACpCgF,MAAM,KAER,kBAAC,GAAD,CACE/E,KAAK,WACLgF,WAAW,EACXiN,OAAQjF,EACR/H,SAAU+H,EACVnI,KAAK,WACLC,MAAOtG,KAAK2P,cACZ/M,MAAM,WACN8D,SAAU,SAACnF,GAAD,OAAQ,EAAK2F,aAAa3F,IACpCgF,MAAM,KAER,qCACA,yBAAK5F,MAAO,CAAEC,WAAY,SACxB,kBAACwG,GAAA,EAAD,CACE5F,KAAK,SACL6F,QAAQ,YACRZ,UAAWzG,KAAK0T,yBAChB/S,MAAO,CACLqB,MAAO,QACPuF,MAAO,WAET/G,QAAS,SAACe,GAAD,OAAQ,EAAKc,kBAAkBd,EAAI,YAR9C,YAeJ0J,GAAiBuD,GACjB,8BACE,kBAAC,GAAD,CACEhN,KAAK,OACLgF,WAAW,EACXC,SAAU+H,EACVnI,KAAK,WACLC,MAAOtG,KAAKwT,cACZ5Q,MAAM,YACN8D,SAAU,SAACnF,GAAD,OAAQ,EAAK2F,aAAa3F,IACpCgF,MAAM,KAER,qCACA,yBAAK5F,MAAO,CAAEC,WAAY,SACxB,kBAACwG,GAAA,EAAD,CACE5F,KAAK,SACL6F,QAAQ,YACRZ,UAAWzG,KAAK0T,yBAChB/S,MAAO,CACLqB,MAAO,QACPuF,MAAO,WAET/G,QAAS,SAACe,GAAD,OAAQ,EAAKc,kBAAkBd,EAAI,aAR9C,iB,GA9LYR,IAAMC,W,8CA4NhC,WAA4B+C,GAA5B,iBAAAJ,EAAA,6DACE0P,GAAY/H,aAAc,EACtB7L,IAAKA,GAAI2B,WAFf,SAIyBuS,GAAKT,aAAanP,GAJ3C,gBAIUlF,EAJV,EAIUA,KACRC,QAAQC,IACN,+CACEwN,KAAKC,UAAU3N,EAAM,KAAM,IAE3BA,EAAKiN,cACPuH,GAAYrI,YAAcnM,EAAKiN,aAAavC,aAC5C8J,GAAYpI,eAAgB,IAE5BoI,GAAYrI,YAAc,yBAC1BqI,GAAYpI,eAAgB,GAE9BoI,GAAYtJ,gBAAiB,EAC7BsJ,GAAY/H,aAAc,EACtB7L,IAAKA,GAAI2B,WAlBf,6C,oEAqBA,WAA6B2C,GAA7B,iBAAAJ,EAAA,6DACE0P,GAAY/H,aAAc,EACtB7L,IAAKA,GAAI2B,WAFf,SAIyBuS,GAAKR,cAAcpP,GAJ5C,gBAIUlF,EAJV,EAIUA,KACRC,QAAQC,IACN,gDACEwN,KAAKC,UAAU3N,EAAM,KAAM,IAE3BA,EAAKiN,aACPuH,GAAYrI,YAAcnM,EAAKiN,aAAavC,aAE5C8J,GAAYrI,YAAc,0BAE5BqI,GAAYxL,SAAW,GACvBwL,GAAYpI,eAAgB,EAC5BoI,GAAY/H,aAAc,EACtB7L,IAAKA,GAAI2B,WAjBf,6C,sBA/BAiS,GAAY3O,UAAY,GACxB2O,GAAYtJ,gBAAiB,EAC7BsJ,GAAYrI,YAAc,GAC1BqI,GAAY7E,YAAa,EACzB6E,GAAYxL,SAAW,GACvBwL,GAAYpI,eAAgB,EAC5BoI,GAAY/H,aAAc,EAC1B+H,GAAYjR,MAAQ,GACpBiR,GAAYhT,SAAW,GAkEvBY,EAAa3B,GAAGmB,IAAKlN,gBAvBK,SAAC2N,EAAOrC,GAAU,IAClCwB,EAAqCxB,EAArCwB,SAAUqE,EAA2B7F,EAA3B6F,UAAWvD,EAAgBtC,EAAhBsC,YAE7BrC,QAAQC,IACN,2CACEsB,EACA,mBACAc,EACA,iBACAuD,GAEJ2O,GAAYhT,SAAYA,GAAW,GACnCgT,GAAY3O,UAAYA,EACxB2O,GAAY7E,WAAarN,IAAgBV,IAAK9J,oBAE1C8I,IAAKA,GAAI2B,cASfH,EAAa3B,GAAGmB,IAAKnK,oBANS,SAAC4K,EAAOrC,GACpCwU,GAAYhT,SAAWxB,EAAKwB,SACjB,MAAPZ,IAAaA,GAAI2B,cAMRiS,U,yCCrSX5T,I,OAAM,MAEJmU,G,kDACJ,WAAYjU,GAAQ,IAAD,6BACjB,cAAMA,GAENb,QAAQC,IAAI,4BAEZU,GAAG,eAEH,EAAKK,MAAQ,CAAEC,MAAO,GAPL,E,0KAWjBjB,QAAQC,IAAI,kCACZoQ,GAAiB,mB,8IAIjBrQ,QAAQC,IAAI,qCACZU,GAAM,O,mCAKN,OADAX,QAAQC,IAAI,2BACL6U,EAAaC,kB,oCAIpB,OAAO7T,KAAKL,MAAMmU,gB,0CAOlB,OAHAhV,QAAQC,IACN,mCAAqC6U,EAAaG,gBAE7CH,EAAaG,iB,mCAGTxS,GACXqS,EAAaG,eAAiBxS,EAAG+E,MACjCxH,QAAQC,IAAI,8BAAgC6U,EAAaG,gBACzD/T,KAAKL,MAAMqU,OACTJ,EAAaK,yBAAyBnQ,IAAI8P,EAAaG,mB,iCAKzD,IAAMhU,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,+BAGf,IAAD,OAGP,OAFAjB,QAAQC,IAAI,uBAGV,6BACE,kBAAC,KAAD,CACE0H,SAAUzG,KAAK8T,cACfI,QAASlU,KAAKoM,aACd1F,SAAU,SAAAnF,GAAE,OAAI,EAAK4S,aAAa5S,IAClC+E,MAAOtG,KAAKoU,oBACZC,YAAY,oE,GA5DKtT,IAAMC,W,SAyElBmO,G,iFAAf,WAAgChD,GAAhC,qCAAAxI,EAAA,sEACiCqL,GAAQ5C,WAAWD,GADpD,mBACUtN,EADV,EACUA,KAAMyE,EADhB,EACgBA,OACdxE,QAAQC,IAAI,sDAAwDuE,IAEhEzE,EAAKiN,aAJX,uBAKIhN,QAAQC,IACN,yDACEF,EAAKiN,aAAavC,aAClB,kBACA1K,EAAKiN,aAAaC,YAT1B,0BAmBE,GAAIlN,EAAM,CAKR,IAJA+U,GAAaC,gBAAkB,GAC/BD,GAAaK,yBAA2B,IAAIvH,IAC5CkH,GAAaU,yBAA2B,IAAI5H,IAEnCC,EAAI,EAAGA,EAAI9N,EAAKkK,OAAQ4D,IAAM,EAQjC9N,EAAK8N,GANPqB,EAFkC,EAElCA,WACAD,EAHkC,EAGlCA,WACAjJ,EAJkC,EAIlCA,YACAqJ,EALkC,EAKlCA,gBACAE,EANkC,EAMlCA,eACAE,EAPkC,EAOlCA,SAEiB,cAAfR,IACIwG,EACJvG,EACA,KACAG,EACA,KACAE,GACCE,EAAW,GAAK,eACnBqF,GAAaC,gBAAgBW,KAAKD,GAClCX,GAAaK,yBAAyBrH,IAAI2H,EAAazP,GACvD8O,GAAaU,yBAAyB1H,IAAI9H,EAAayP,IAIvDX,GAAaa,sBACfb,GAAaG,eAAiBH,GAAaU,yBAAyBxQ,IAClE8P,GAAaa,sBAKfhV,KACFmU,GAAaa,oBAAsBhV,GAAIE,MAAM+U,0BAE3CjV,IAAKA,GAAI2B,WAzDf,6C,sBANAwS,GAAaC,gBAAkB,GAC/BD,GAAaK,yBAA2B,IAAIvH,IAC5CkH,GAAaU,yBAA2B,IAAI5H,IAC5CkH,GAAaG,eAAiB,GAC9BH,GAAaa,oBAAsB,GA8DpBb,UCzIX3O,GAAkB,kB,8CAEtB,WAAoBC,GAApB,SAAAvB,EAAA,sDACE5E,EAAI,qBAAsB,OAAQ,QAElCkG,GAAkBC,EAHpB,4C,oEAyGA,WAAsCyP,GAAtC,SAAAhR,EAAA,yDACE5E,EAAI,uCAAwC,OAAQ,YAChD4V,EAFN,gCAGiBvP,EAAKtB,IAChB,WACEmB,GACA,4CACA0P,GAPR,wEAWS,IAXT,4C,oEAcA,WAAiC5Q,GAAjC,eAAAJ,EAAA,6DACE5E,EAAI,4BAA6B,OAAQ,eACnC6V,EAAuBrI,KAAKc,MAAMd,KAAKC,UAAUzI,KAC3B8Q,WAH9B,SAIezP,EAAKpB,KAChB,WAAaiB,GAAkB,4BAC/B2P,GANJ,oF,sBAqBe,QACbtP,K,6CACAC,MAxIF,aAyIEuP,uB,6CACAC,kB,8CC3IEtV,GAAM,KAEJuV,G,kDACJ,WAAYrV,GAAQ,IAAD,6BACjB,cAAMA,GAENF,GAAG,eAEH,EAAKK,MAAQ,CAAEC,MAAO,GALL,E,gEAQE,IAAD,OAClBjB,QAAQC,IAAI,yCACZiB,KAAKiV,2BACL,IACED,EAAoBE,eAAiBC,YAAW,sBAAC,sBAAAxR,EAAA,yDAC1C,EAAKyR,oCADqC,uBAE7C,EAAKA,qCAAsC,EAFE,SAGvCN,KAHuC,OAI7C,EAAKM,qCAAsC,EAJE,2CAM9C,KACH,MAAO5R,GACP1E,QAAQC,IAAI,eAAiByE,M,6CAK/B1E,QAAQC,IAAI,4CACZsW,cAAcL,EAAoBE,gBAClCF,EAAoBE,eAAiB,KACrCzV,GAAM,O,iDAIN,IAAM6V,EAAWpD,GAAOpO,IAAI,yBAC5B,GAAIwR,EAAU,CAAC,IACLX,EAA2BW,EAA3BX,eAAgBY,EAAWD,EAAXC,OACpBZ,IAAgBK,EAAoBL,eAAiBA,GACrDY,IAAQP,EAAoBO,OAASA,M,sCAI7BhU,GACdzC,QAAQC,IAAI,0CACZmT,GAAOtF,IAAI,wBAAyB,CAClC+H,eAAgBK,EAAoBL,eACpCY,OAAQP,EAAoBO,W,wCAIdhU,GAAK,IAAD,OACpBzC,QAAQC,IAAI,4CAEZiW,EAAoBQ,cAAgBC,YAAW,WACzCT,EAAoBQ,gBACtBR,EAAoBU,mBAAoB,EACxCV,EAAoB1R,OAAS,YAC7B,EAAKlC,cAEN,KAEH4T,EAAoBU,mBAAoB,EACxCV,EAAoB1R,OAAS,uBAC7BtD,KAAKoB,W,qCAEL2T,CAAkB,CAChBJ,eAAgBK,EAAoBL,eACpCY,OAAQP,EAAoBO,OAC5BV,WAAYc,W,yCAIGpU,GACjBzC,QAAQC,IACN,8CAAgDwC,EAAGwF,OAAOT,OAE5D0O,EAAoBO,OAAShU,EAAGwF,OAAOT,MACvCtG,KAAKoB,a,iCAIL,IAAMrB,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,uCAIvB,OAAOiV,EAAoBL,iB,oCAI3B,OACEK,EAAoBU,mBAAqBV,EAAoBY,a,sCAK/D,OAAO,I,wCAIP,QAAIZ,EAAoBL,eAAe5L,OAAS,MAE5CiM,EAAoBY,aACtBZ,EAAoBU,mBAAoB,EACpCV,EAAoBQ,gBACtBK,aAAab,EAAoBQ,eACjCR,EAAoBQ,cAAgB,QAIrCR,EAAoBU,oBAAsBV,EAAoBY,c,uCAKjE,OAAOZ,EAAoBhK,c,uCAGZzJ,GACfzC,QAAQC,IAAI,yCAA2CwC,GACvDyT,EAAoBL,eAAiBpT,I,6CAIrCzC,QAAQC,IAAI,8C,sCAIZiW,EAAoB/J,eAAgB,EACpCjL,KAAKoB,a,+BAGG,IAAD,OACPtC,QAAQC,IAAI,8BAGZ,IAAMwW,EAASP,EAAoBO,OAC7BO,EACJd,EAAoBU,mBAAqBV,EAAoBY,WACzDG,EAAiBf,EAAoB1R,OACrCgI,EAAcwK,EAEd7K,EAAgB+J,EAAoB/J,cAE1C,OACE,6BACE,kBAAC,EAAD,MACCK,GAAe,kBAAC,GAAD,MACfL,GACC,kBAAC,EAAD,CACE7I,MAAO,iBACPF,eAAgB,kBAAM,EAAKA,kBAC3B8E,SAAU,SAACzF,GAAD,OAAQ,EAAKmK,qBAAqBnK,IAC5CY,WAAYnC,KAAK2L,cAAcF,KAAKzL,SAGtCiL,GACA,6BACE,yBAAKtK,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAtB,4BAEF,yBAAKH,MAAO,CAAEC,WAAY,SACxB,2BAAO2J,MAAM,QACX,+BACE,4BACE,qCAEF,4BACE,uCACA,4BACE,kBAAC,GAAD,CACEyJ,OAAQ,SAACzS,GAAD,OAAQ,EAAKyU,iBAAiBzU,IACtCuS,YAAa9T,KAAK8T,YAClBY,uBAAwB1U,KAAKiW,mBAInC,4BACE,qCAEF,4BACE,+DACA,2BAAO1L,MAAM,QACX,+BACE,4BACE,2BACE/I,KAAK,QACL6E,KAAK,SACLC,MAAO7F,IAAKnD,kCACZ4Y,QACEX,IAAW9U,IAAKnD,kCAElBmJ,SAAUqP,EACVpP,SAAU,SAACnF,GAAD,OAAQ,EAAK4U,mBAAmB5U,MAT9C,4BAaA,4BACE,2BACEC,KAAK,QACL6E,KAAK,SACLC,MAAO7F,IAAKlD,uCACZ2Y,QACEX,IACA9U,IAAKlD,uCAEPkJ,SAAUqP,EACVpP,SAAU,SAACnF,GAAD,OAAQ,EAAK4U,mBAAmB5U,MAV9C,kCAcA,4BACE,2BACEC,KAAK,QACL6E,KAAK,SACLC,MAAO7F,IAAKjD,qCACZ0Y,QACEX,IACA9U,IAAKjD,qCAEPiJ,SAAUqP,EACVpP,SAAU,SAACnF,GAAD,OAAQ,EAAK4U,mBAAmB5U,MAV9C,gCAcA,4BACE,2BACEC,KAAK,QACL6E,KAAK,SACLC,MAAO7F,IAAKhD,iCACZyY,QACEX,IAAW9U,IAAKhD,iCAElBgJ,SAAUqP,EACVpP,SAAU,SAACnF,GAAD,OAAQ,EAAK4U,mBAAmB5U,MAT9C,2BAaA,4BACE,2BACEC,KAAK,QACL6E,KAAK,SACLC,MAAO7F,IAAKrD,yBACZ8Y,QAASX,IAAW9U,IAAKrD,yBACzBqJ,SAAUqP,EACVpP,SAAU,SAACnF,GAAD,OAAQ,EAAK4U,mBAAmB5U,MAP9C,kBAWA,4BACE,2BACEC,KAAK,QACL6E,KAAK,SACLC,MAAO7F,IAAK/C,2BACZwY,QAASX,IAAW9U,IAAK/C,2BACzB+I,SAAUqP,EACVpP,SAAU,SAACnF,GAAD,OAAQ,EAAK4U,mBAAmB5U,MAP9C,iBAWA,4BACE,2BACEC,KAAK,QACL6E,KAAK,SACLC,MAAO7F,IAAK9C,sCACZuY,QACEX,IACA9U,IAAK9C,sCAEP8I,SAAUqP,EACVpP,SAAU,SAACnF,GAAD,OAAQ,EAAK4U,mBAAmB5U,MAV9C,gCAcA,4BACE,2BACEC,KAAK,QACL6E,KAAK,SACLC,MAAO7F,IAAK7C,oCACZsY,QACEX,IACA9U,IAAK7C,oCAEP6I,SAAUqP,EACVpP,SAAU,SAACnF,GAAD,OAAQ,EAAK4U,mBAAmB5U,MAV9C,iCAiBN,4BACE,qCAEF,4BACE,oCACA,4BACE,kBAAC6F,GAAA,EAAD,CACE5F,KAAK,SACL6F,QAAQ,YACRZ,UAAWzG,KAAKoW,gBAChBzV,MAAO,CACLC,WAAY,QACZoB,MAAO,QACPuF,MAAO,WAGT/G,QAAS,SAACe,GAAD,OAAQ,EAAK8U,gBAAgB9U,KAVxC,QAcA,kBAAC6F,GAAA,EAAD,CACE5F,KAAK,SACL6F,QAAQ,YACRZ,UAAWzG,KAAKsW,kBAChB3V,MAAO,CACLC,WAAY,OACZoB,MAAO,QACPuF,MAAO,WAGT/G,QAAS,SAACe,GAAD,OAAQ,EAAKc,kBAAkBd,KAV1C,YAgBJ,4BACE,qCAEF,4BACE,4BACE,wBAAIS,MAAM,QAAQD,OAAO,KAAKH,OAAO,WAGzC,4BACE,qCAEF,4BACE,uCACA,4BACE,2BACEJ,KAAK,OACL6E,KAAK,uBACL4H,KAAK,KACL3H,MAAOyP,EACPQ,UAAU,e,GAzVAxV,IAAMC,W,SAiXzB8T,K,8EAAf,kCAAAnR,EAAA,sEACiC6S,GAAc1B,uBAC3CE,GAAoBL,gBAFxB,gBACU9V,EADV,EACUA,MAAMyE,EADhB,EACgBA,SAIAA,IAAW7C,IAAK3I,eACtB2e,EAAc5X,EAAK4X,YAEzB3X,QAAQC,IACN,wDACEwN,KAAKC,UAAUiK,EAAa,KAAM,IAGtCzB,GAAoBY,WAAaa,EAAYb,WACxCZ,GAAoBU,oBACvBV,GAAoB1R,OAASmT,EAAYC,MAEvCD,EAAYE,SACd3B,GAAoB1R,OAAS,SAC7B0R,GAAoBU,mBAAoB,EACpCV,GAAoBQ,gBACtBK,aAAab,GAAoBQ,eACjCR,GAAoBQ,cAAgB,QAKtC/V,IAAKA,GAAI2B,WA3Bf,4C,oEA8BA,WAAiC2C,GAAjC,iBAAAJ,EAAA,sEACiC6S,GAAczB,kBAAkBhR,GADjE,gBACUlF,EADV,EACUA,KADV,EACgByE,OACdxE,QAAQC,IACN,qDACEwN,KAAKC,UAAU3N,EAAM,KAAM,IAG3BA,EAAKiN,eACPhN,QAAQC,IACN,yDACEF,EAAKiN,aAAavC,aAClB,kBACA1K,EAAKiN,aAAaC,YAGtBiJ,GAAoBhK,YAAcnM,EAAKiN,aAAavC,aACpDyL,GAAoB/J,eAAgB,EACpC+J,GAAoBjL,gBAAiB,EACrCiL,GAAoB1R,OAAS,SAE7B0R,GAAoBU,mBAAoB,EACxCV,GAAoBY,YAAa,EAC7BZ,GAAoBQ,gBACtBK,aAAab,GAAoBQ,eACjCR,GAAoBQ,cAAgB,OAIpC/V,IAAKA,GAAI2B,WA5Bf,4C,sBAxCA4T,GAAoBO,OAAS9U,IAAKtD,uBAClC6X,GAAoBhK,YAAc,GAClCgK,GAAoBY,YAAa,EACjCZ,GAAoB/J,eAAgB,EACpC+J,GAAoB1R,OAAS,OAC7B0R,GAAoBE,eAAiB,KACrCF,GAAoBQ,cAAgB,KACpCR,GAAoBL,eAAiB,GACrCK,GAAoBU,mBAAoB,EA+DzBV,UClbT4B,G,kDACJ,WAAYjX,GAAQ,uCACZA,G,qDAGE,IAAD,OACDqP,EAAUhP,KAAKL,MAAMqP,QAI3B,OAHAlQ,QAAQC,IAAI,wBACZD,QAAQC,IAAIiQ,GAGV,2BAAOzO,GAAG,kBACPyO,GACCA,EAAQlC,KAAI,SAAAnE,GAAI,OACd,wBAAIoE,IAAKpE,EAAK7D,aACZ,wBACEnE,MAAO,CAAEsO,OAAQtG,EAAK4F,SAAW,UAAY,WAC7C/N,QAAS,kBAAM,EAAKb,MAAMa,QAAQmI,KAElC,yBAAKhI,MAAO,CAAEE,UAAW,OAAQD,WAAY,KAC1C+H,EAAKqF,aAGV,gDACA,wBACErN,MAAO,CAAEsO,OAAQtG,EAAK4F,SAAW,UAAY,WAC7C/N,QAAS,kBAAM,EAAKb,MAAMa,QAAQmI,KAEjCA,EAAK0F,gBAER,gDACA,wBACE1N,MAAO,CAAEsO,OAAQtG,EAAK4F,SAAW,UAAY,WAC7C/N,QAAS,kBAAM,EAAKb,MAAMa,QAAQmI,KAEhCA,EAAK4F,SAAwB,GAAb,YAEpB,gDACA,wBACE5N,MAAO,CAAEsO,OAAQtG,EAAK0C,OAAS,UAAY,WAC3C7K,QAAS,kBAAM,EAAKb,MAAMa,QAAQmI,KAEhCA,EAAK0C,OAA4B,GAAnB,kBAElB,gDACA,wBACE1K,MAAO,CAAEsO,OAAQtG,EAAK4F,SAAW,UAAY,WAC7C/N,QAAS,kBAAM,EAAKb,MAAMa,QAAQmI,KAEjCA,EAAKkO,OAAS,OAAS,a,GAjDZ9V,IAAMC,WA0D9BvB,GAAM,KAEJqX,G,kDACJ,WAAYnX,GAAQ,IAAD,6BACjB,cAAMA,GACNb,QAAQC,IAAI,+BACZ,EAAKe,MAAQ,CAAEC,MAAO,GAEtBN,GAAG,eALc,E,gEASjBX,QAAQC,IAAI,qC,qCACZoQ,CAAiB,0B,6CAIjBrQ,QAAQC,IAAI,wCACZU,GAAM,O,iCAIN,IAAMM,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,gDAGC4I,GAUxB,GATA7J,QAAQC,IACN,sCACE4J,EAAK0F,eACL,gBAAwB1F,EAAK4F,SAC7B,qBAAwB5F,EAAKoO,cAC7B,mBAAwBpO,EAAK7D,YAC7B,kBAAwB6D,EAAKqF,YAG5BrF,EAAK4F,SAAV,CAEA,IAAMxK,EAAS,CACb1D,SAAU6R,GAAOpO,IAAI,YACrB+D,SAAUqK,GAAOpO,IAAI,YACrBkK,WAAYrF,EAAKqF,WACjBgJ,KAAMC,OAAOC,SAASC,QAGlBC,EAAkBC,KAAOtE,QAAQxG,KAAKC,UAAUzI,IAElD4E,EAAKoO,cACPE,OAAOC,SAASI,QACd,UACE3O,EAAK0F,eACL,IAAM5N,IAAK9Q,kBAAoB,WAAa4nB,UAAUH,GACrD,gBAAkBzO,EAAK7D,YACvB,uBAGJmS,OAAOC,SAASI,QACf,qBAEQ7W,IAAK9Q,kBAAoB,WAAa4nB,UAAUH,GACtD,gBAAkBzO,EAAK7D,YACvB,2B,uCAKSvD,GACfzC,QAAQC,IAAI,oCACZkC,EAAatC,KAAK8B,IAAKnN,UAAWmN,IAAKzP,Y,+BAG/B,IAAD,OACP8N,QAAQC,IAAI,0BAEZ,IAAMiQ,EAAU8H,EAAgB9H,QAC1BR,EAAasI,EAAgBtI,WAC7BgJ,EAAexI,EAAUA,EAAQjG,OAAS,EAEhD,OAAKiG,GAAWR,GAEK,IAAjBgJ,EAF+B,8BAKjC,6BACE,kBAAC,EAAD,MACA,yBAAK7W,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAtB,cAEA0N,GACA,6BACE,yBAAK7N,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAtB,2DAGA,kBAACsG,GAAA,EAAD,CACE5F,KAAK,SACL6F,QAAQ,YACR1G,MAAO,CACLqB,MAAO,QACPuF,MAAO,WAGT/G,QAAS,SAAAe,GAAE,OAAI,EAAK4O,iBAAiB5O,KARvC,WAeLiN,GAAcgJ,EAAe,GAC5B,yBACEjN,MAAM,SACN5J,MAAO,CAELqB,MAAO,QACPD,OAAQ,QACR2M,KAAM,mBACNC,WAAY,SAGd,kBAAC,GAAD,CACEK,QAASA,EACTxO,QAAS,SAAAe,GAAE,OAAI,EAAKkW,0BAA0BlW,OAKnDiN,GAA+B,IAAjBgJ,GACb,6BACE,yBAAK7W,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAtB,uD,GAhIgBC,IAAMC,W,8CAiJpC,WAAgCmL,GAAhC,yBAAAxI,EAAA,sEACiCqL,GAAQ5C,WAAWD,GADpD,mBACUtN,EADV,EACUA,KAAMyE,EADhB,EACgBA,OACdxE,QAAQC,IACN,yDAA2DuE,IAGzDzE,EAAKiN,aANX,wBAOIhN,QAAQC,IACN,oDACEF,EAAKiN,aAAavC,aAClB,kBACA1K,EAAKiN,aAAaC,YAGtB+K,GAAgB9L,YAAcnM,EAAKiN,aAAavC,aAE5C9J,IAAKA,GAAI2B,WAhBjB,2BAsBE,GADA0V,GAAgB9H,QAAUnQ,EACa,IAAnCiY,GAAgB9H,QAAQjG,OAEf,MAAPtJ,KACIkJ,EAAO,CACXqF,WAAY8I,GAAgB9H,QAAQ,GAAGhB,WACvClJ,YAAagS,GAAgB9H,QAAQ,GAAGlK,YACxCyJ,SAAUuI,GAAgB9H,QAAQ,GAAGT,SACrCwI,cAAeD,GAAgB9H,QAAQ,GAAG+H,cAC1C1I,eAAgByI,GAAgB9H,QAAQ,GAAGX,gBAE7C5O,GAAIgY,0BAA0B9O,QAE3B,CAGL,IADAmO,GAAgBzH,oBAAsB,IAAI3C,IACjCC,EAAI,EAAGA,EAAImK,GAAgB9H,QAAQjG,OAAQ4D,IAC5CS,EAAS0J,GAAgB9H,QAAQrC,GACvCmK,GAAgBzH,oBAAoBzC,IAAIQ,EAAOtI,YAAasI,GAE1D3N,IAAKA,GAAI2B,WAzCjB,6C,sBANA0V,GAAgB9H,QAAU,KAC1B8H,GAAgBzH,oBAAsB,IAAI3C,IAC1CoK,GAAgBhS,YAAc,GAC9BgS,GAAgB9L,YAAc,GAC9B8L,GAAgBtI,YAAa,EA0D7BvN,EAAa3B,GAAGmB,IAAKlN,gBAXK,SAAC2N,EAAOrC,GAAU,IAClCwB,EAA+CxB,EAA/CwB,SAA+Bc,GAAgBtC,EAArC6F,UAAqC7F,EAA1BgJ,SAA0BhJ,EAAhBsC,aACvCrC,QAAQC,IACN,iDACEsB,EACA,mBACAc,GAEJ2V,GAAgBtI,WAAarN,IAAgBV,IAAK9J,uBAKrCmgB,UC9QX7R,GAAkB,kB,8CAEtB,WAAoBC,GAApB,SAAAvB,EAAA,sDACE5E,EAAI,eAAgB,OAAQ,QAE5BkG,GAAkBC,EAHpB,4C,oEAQA,WAAgCyP,GAAhC,SAAAhR,EAAA,yDACE5E,EACE,sCAAwC4V,EACxC,OACA,YAGEA,EAPN,gCAQiBvP,EAAKtB,IAChB,WACEmB,GACA,sCACA0P,GAZR,wEAgBS,IAhBT,4C,oEAmBA,WAAiC5Q,GAAjC,eAAAJ,EAAA,6DACE5E,EAAI,4BAA6B,OAAQ,eACnC2Y,EAAuBnL,KAAKc,MAAMd,KAAKC,UAAUzI,KAC3B4T,WAH9B,SAIevS,EAAKpB,KAChB,WAAaiB,GAAkB,sBAC/ByS,GANJ,oF,sBAUe,QACbpS,K,6CACAC,MAjCF,aAkCEqS,iB,6CACAC,kB,8CClCEpY,GAAM,KAEJqY,G,kDACJ,WAAYnY,GAAQ,IAAD,6BACjB,cAAMA,GAENb,QAAQC,IAAI,6BAEZU,GAAG,eAEH,EAAKK,MAAQ,CAAEC,MAAO,GAEtB,EAAKgY,+BAAgC,EATpB,E,gEAYE,IAAD,OAClBjZ,QAAQC,IAAI,mCACZiB,KAAKgY,qBACL,IACEF,EAAc5C,eAAiBC,YAAW,sBAAC,sBAAAxR,EAAA,yDACpC,EAAKoU,8BAD+B,uBAEvC,EAAKA,+BAAgC,EAFE,SAGjCH,KAHiC,OAIvC,EAAKG,+BAAgC,EAJE,2CAMxC,KACH,MAAOvU,GACP1E,QAAQC,IAAI,eAAiByE,M,6CAK/B1E,QAAQC,IAAI,sCACZsW,cAAcyC,EAAc5C,gBAC5B4C,EAAc5C,eAAiB,KAC/BzV,GAAM,O,sCAGQ8B,GACdzC,QAAQC,IAAI,oCACZmT,GAAOtF,IAAI,kBAAmB,CAC5B+H,eAAgBmD,EAAcnD,eAC9BsD,WAAYH,EAAcG,e,wCAIZ1W,GAAK,IAAD,OACpBzC,QAAQC,IAAI,sCAEZ+Y,EAActC,cAAgBC,YAAW,WACnCqC,EAActC,gBAChBsC,EAAcpC,mBAAoB,EAClCoC,EAAcxU,OAAS,YACvB,EAAKlC,cAEN,KAEH0W,EAAcpC,mBAAoB,EAClCoC,EAAcxU,OAAS,uBACvBtD,KAAKoB,WAEL8Q,GAAOtF,IAAI,kBAAmB,CAC5B+H,eAAgBmD,EAAcnD,eAC9BsD,WAAYH,EAAcG,a,qCAG5BJ,CAAkB,CAChBlD,eAAgBmD,EAAcnD,eAC9BsD,WAAYH,EAAcG,WAC1BN,WAAYhC,W,2CAKd,IAAML,EAAWpD,GAAOpO,IAAI,mBAC5B,GAAIwR,EAAU,CAAC,IACLX,EAA+BW,EAA/BX,eAAgBsD,EAAe3C,EAAf2C,WACpBtD,IAAgBmD,EAAcnD,eAAiBA,GAC/CsD,IAAYH,EAAcG,WAAaA,GAChC,MAAPxY,IAAaA,GAAI2B,c,6CAIFG,GACrBzC,QAAQC,IAAI,4CAA8CwC,EAAGwF,OAAOT,OACpEwR,EAAcG,WAAa1W,EAAGwF,OAAOT,MACrCtG,KAAKoB,a,iCAIL,IAAMrB,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,uCAIvB,OAAO+X,EAAcnD,iB,oCAIrB,OAAOmD,EAAcpC,mBAAqBoC,EAAclC,a,sCAIxD,OAAO,I,wCAIP,QAAIkC,EAAcnD,eAAe5L,OAAS,MAEtC+O,EAAclC,aAChBkC,EAAcpC,mBAAoB,EAC9BoC,EAActC,gBAChBK,aAAaiC,EAActC,eAC3BsC,EAActC,cAAgB,QAG1BsC,EAAcpC,oBAAsBoC,EAAclC,c,uCAI1D,OAAOkC,EAAc9M,c,mDAIrB,OAAO,I,4CAIP,OAAO8M,EAAcjQ,W,mCAIVtG,GACX,IAAM8E,EAAO9E,EAAGwF,OAAOV,KACjBC,EAAQ/E,EAAGwF,OAAOT,MAIxB,OAFAxH,QAAQC,IAAI,qBAAuBsH,EAAO,WAAarG,KAAKF,MAAMuG,IAE1DA,GACN,IAAK,WACHyR,EAAcjQ,SAAWvB,EAQ7BtG,KAAKC,SAAL,gBAAiBoG,EAAOC,M,uCAGT/E,GACfzC,QAAQC,IAAI,mCAAqCwC,GACjDuW,EAAcnD,eAAiBpT,I,2CAGZA,GACnBzC,QAAQC,IAAI,wC,sCAIZ+Y,EAAc7M,eAAgB,EAC9BjL,KAAKoB,a,+BAGG,IAAD,OACPtC,QAAQC,IAAI,wBAEZ,IAAMkZ,EAAaH,EAAcG,WAC3BC,EACJJ,EAAcpC,mBAAqBoC,EAAclC,WAC7CuC,EAAeL,EAAcxU,OAC7BgI,EAAc4M,EAEdjN,EAAgB6M,EAAc7M,cAEpC,OACE,6BACE,kBAAC,EAAD,MACCK,GAAe,kBAAC,GAAD,MACfL,GACC,kBAAC,EAAD,CACE7I,MAAO,kBACPF,eAAgB,kBAAM,EAAKA,kBAC3B8E,SAAU,SAACzF,GAAD,OAAQ,EAAKmK,qBAAqBnK,IAC5CY,WAAYnC,KAAK2L,cAAcF,KAAKzL,SAGtCiL,GACA,6BACE,yBAAKtK,MAAO,CAAEC,WAAY,GAAIC,UAAW,SACvC,uBAAGF,MAAO,CAAEG,SAAU,SAAtB,oBAEF,yBAAKH,MAAO,CAAEC,WAAY,SACxB,2BAAO2J,MAAM,QACX,+BACE,4BACE,qCAGF,4BACE,uCACA,4BACE,kBAAC,GAAD,CACEyJ,OAAQ,SAACzS,GAAD,OAAQ,EAAKyU,iBAAiBzU,IACtCuS,YAAa9T,KAAK8T,YAClBY,uBAAwB1U,KAAKiW,mBAInC,4BACE,qCAEF,4BACE,gDACA,2BAAO1L,MAAM,QACX,+BACE,4BACE,2BACE/I,KAAK,QACL6E,KAAK,cACLC,MAAM,aACN4P,QAAwB,eAAf+B,EACTxR,SAAUyR,EACVxR,SAAU,SAACnF,GAAD,OAAQ,EAAK6W,uBAAuB7W,MAPlD,gBAWA,4BACE,2BACEC,KAAK,QACL6E,KAAK,cACLC,MAAM,uBACN4P,QAAwB,yBAAf+B,EACTxR,SAAUyR,EACVxR,SAAU,SAACnF,GAAD,OAAQ,EAAK6W,uBAAuB7W,MAPlD,iBAWA,4BACE,2BACEC,KAAK,QACL6E,KAAK,cACLC,MAAM,qBACN4P,QAAwB,uBAAf+B,EACTxR,SAAUyR,EACVxR,SAAU,SAACnF,GAAD,OAAQ,EAAK6W,uBAAuB7W,MAPlD,eAWA,4BACE,2BACEC,KAAK,QACL6E,KAAK,cACLC,MAAM,2BACN4P,QAAwB,6BAAf+B,EACTxR,SAAUyR,EACVxR,SAAU,SAACnF,GAAD,OAAQ,EAAK6W,uBAAuB7W,MAPlD,qBAWA,4BACE,2BACEC,KAAK,QACL6E,KAAK,cACLC,MAAM,iCACN4P,QAAwB,mCAAf+B,EACTxR,SAAUyR,EACVxR,SAAU,SAACnF,GAAD,OAAQ,EAAK6W,uBAAuB7W,MAPlD,2BAWA,4BACE,2BACEC,KAAK,QACL6E,KAAK,cACLC,MAAM,gBACN4P,QAAwB,kBAAf+B,EACTxR,SAAUyR,EACVxR,SAAU,SAACnF,GAAD,OAAQ,EAAK6W,uBAAuB7W,MAPlD,kBAcN,4BACE,qCAEF,4BACE,oCACA,4BACE,kBAAC6F,GAAA,EAAD,CACE5F,KAAK,SACL6F,QAAQ,YACRZ,UAAWzG,KAAKsW,kBAChB3V,MAAO,CACLC,WAAY,OACZoB,MAAO,QACPuF,MAAO,WAETV,WAAS,EACTrG,QAAS,SAACe,GAAD,OAAQ,EAAKc,kBAAkBd,KAV1C,YAgBJ,4BACE,qCAEF,4BACE,4BACE,wBAAIS,MAAM,OAAOD,OAAO,KAAKH,OAAO,WAGxC,4BACE,qCAEF,4BACE,uCACA,4BACE,2BACEJ,KAAK,OACL6E,KAAK,qBACL4H,KAAK,KACL3H,MAAO6R,EACP5B,UAAU,e,GArUNxV,IAAMC,W,SA8VnB4W,K,8EAAf,kCAAAjU,EAAA,sEACiC0U,GAAQT,iBACrCE,GAAcnD,gBAFlB,gBACU9V,EADV,EACUA,MAAMyE,EADhB,EACgBA,SAIAA,IAAW7C,IAAK3I,eACtBqgB,EAAetZ,EAAKsZ,aAE1BrZ,QAAQC,IACN,4CACEwN,KAAKC,UAAU2L,EAAc,KAAM,IAGvCL,GAAclC,WAAauC,EAAavC,WACnCkC,GAAcpC,oBACjBoC,GAAcxU,OAAS6U,EAAazB,MAElCyB,EAAaxB,SACfmB,GAAcxU,OAAS,SACvBwU,GAAcpC,mBAAoB,EAC9BoC,GAActC,gBAChBK,aAAaiC,GAActC,eAC3BsC,GAActC,cAAgB,QAIhC/V,IAAKA,GAAI2B,WA1Bf,4C,oEA6BA,WAAiC2C,GAAjC,iBAAAJ,EAAA,sEACiC0U,GAAQR,kBAAkB9T,GAD3D,gBACUlF,EADV,EACUA,KADV,EACgByE,OACdxE,QAAQC,IACN,+CACEwN,KAAKC,UAAU3N,EAAM,KAAM,IAG3BA,EAAKiN,eACPhN,QAAQC,IACN,mDACEF,EAAKiN,aAAavC,aAClB,kBACA1K,EAAKiN,aAAaC,YAGtB+L,GAAc9M,YAAcnM,EAAKiN,aAAavC,aAC9CuO,GAAc7M,eAAgB,EAC9B6M,GAAc/N,gBAAiB,EAC/B+N,GAAcxU,OAAS,SAEvBwU,GAAcpC,mBAAoB,EAClCoC,GAAclC,YAAa,EACvBkC,GAActC,gBAChBK,aAAaiC,GAActC,eAC3BsC,GAActC,cAAgB,OAI9B/V,IAAKA,GAAI2B,WA5Bf,4C,sBAxCA0W,GAAc9M,YAAc,GAC5B8M,GAAclC,YAAa,EAC3BkC,GAAcjQ,SAAW,GACzBiQ,GAAc7M,eAAgB,EAC9B6M,GAActC,cAAgB,KAC9BsC,GAAcxU,OAAS,OACvBwU,GAAc5C,eAAiB,KAC/B4C,GAAcnD,eAAiB,GAC/BmD,GAAcG,WAAa,aAC3BH,GAAcpC,mBAAoB,EA8DnBoC,UC/YXrY,GAAM,KAEJ6Y,G,kDACJ,WAAY3Y,GAAQ,IAAD,8BACjB,cAAMA,IAiBR4Y,eAlBmB,sBAkBF,8BAAA5U,EAAA,sEACQ6U,MAAM,oBADd,cACTC,EADS,gBAEIA,EAASC,OAFb,UAETC,EAFS,OAIS,MAApBF,EAASnV,OAJE,sBAKPsV,MAAMD,EAAKhW,SALJ,gCAORgW,GAPQ,2CAff7Z,QAAQC,IAAI,mBAEZ,EAAKe,MAAQ,CAAEC,MAAO,EAAGlB,KAAM,MAE/BY,GAAG,eAPc,E,gEAWjBX,QAAQC,IAAI,2B,iCAkBZD,QAAQC,IAAI,gBACZ,IAAMgB,EAAQC,KAAKF,MAAMC,MAAQ,EACjCC,KAAKC,SAAS,CAAEF,MAAOA,M,+BAINuY,EAAInY,SACFmY,EAAIlY,WAEvB,OACE,kBAAC,IAAMyY,SAAP,KAEE,kBAAC,IAAD,KAEE,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOjQ,KAAMnI,IAAKvQ,SAAU4oB,OAAK,EAACC,UAAWrW,IAC7C,kBAAC,IAAD,CAAOkG,KAAMnI,IAAKtQ,WAAY2oB,OAAK,EAACC,UAAWlO,KAC/C,kBAAC,IAAD,CACEjC,KAAMnI,IAAKrQ,kBACX0oB,OAAK,EACLC,UAAW9M,KAEb,kBAAC,IAAD,CAAOrD,KAAMnI,IAAKpQ,SAAUyoB,OAAK,EAACC,UAAW7M,KAC7C,kBAAC,IAAD,CAAOtD,KAAMnI,IAAKnQ,WAAYwoB,OAAK,EAACC,UAAW7J,KAC/C,kBAAC,IAAD,CAAOtG,KAAMnI,IAAK9P,YAAamoB,OAAK,EAACC,UAAWvJ,KAChD,kBAAC,IAAD,CAAO5G,KAAMnI,IAAK7P,YAAakoB,OAAK,EAACC,UAAWnJ,KAChD,kBAAC,IAAD,CACEhH,KAAMnI,IAAK5P,kBACXioB,OAAK,EACLC,UAAWvI,KAEb,kBAAC,IAAD,CAAO5H,KAAMnI,IAAK3P,QAASgoB,OAAK,EAACC,UAAWnH,KAC5C,kBAAC,IAAD,CAAOhJ,KAAMnI,IAAK1P,SAAU+nB,OAAK,EAACC,UAAWlH,KAC7C,kBAAC,IAAD,CAAOjJ,KAAMnI,IAAKzP,SAAU8nB,OAAK,EAACC,UAAW1F,KAC7C,kBAAC,IAAD,CACEzK,KAAMnI,IAAKnP,iBACXwnB,OAAK,EACLC,UAAW/D,KAEb,kBAAC,IAAD,CAAOpM,KAAMnI,IAAK/O,aAAconB,OAAK,EAACC,UAAWjC,KACjD,kBAAC,IAAD,CAAOlO,KAAMnI,IAAK3O,WAAYgnB,OAAK,EAACC,UAAWjB,KAC/C,kBAAC,IAAD,CAAUpX,GAAID,IAAKpQ,WA3BrB,W,GA9CQ2Q,aAkFlBsX,GAAInY,UAAW,EACfmY,GAAIlY,WAAa,OACjBkY,GAAI3Y,MAAQ,KA4CZsB,EAAa3B,GAAGmB,IAAKlN,gBAjCK,SAAC2N,EAAOrC,GAChCC,QAAQC,IAAI,yBAD6B,IAEjCoC,EAA+BtC,EAA/BsC,YAA+BtC,EAAlBgU,cAErByF,GAAInY,SAAWgB,IAAgBV,IAAK9J,oBAEb,SAAnB2hB,GAAIlY,aACFkY,GAAInY,SACNc,EAAatC,KAAK8B,IAAKnN,UAAWmN,IAAK1P,UAEvCkQ,EAAatC,KAAK8B,IAAKnN,UAAWmN,IAAKzP,cAwB7CiQ,EAAa3B,GAAGmB,IAAKnL,eA3CI,SAAC4L,EAAOrC,GAC/BC,QAAQC,IAAI,yBAA2BF,GACvCyZ,GAAIlY,WAAavB,EACM,UAAnByZ,GAAIlY,YACNa,EAAatC,KAAK8B,IAAKnN,UAAWmN,IAAKnQ,YAE9B,MAAPmP,IAAaA,GAAI2B,cAyCRkX,UCtJKU,QACW,cAA7B/B,OAAOC,SAAS+B,UAEe,UAA7BhC,OAAOC,SAAS+B,UAEhBhC,OAAOC,SAAS+B,SAASC,MACvB,2DAgHC,SAASC,KACV,kBAAmB3L,WACrBA,UAAU4L,cAAcC,MAAM1L,MAAK,SAAA2L,GACjCA,EAAaH,gBC9HnB,IAAIlU,GAAkB,kBAElBH,GAAc,KAEdyU,GAAwB,EAExB/K,IAAa,EAIbgL,GAAc,E,8CAElB,WAAoBtU,GAApB,SAAAvB,EAAA,6DACE5E,EAAI,oBAAqB,OAAQ,QAEjCkG,GAAkBC,EAGlBnG,EAAI,kBADJ+F,GAAcoN,GAAOpO,IAAI,gBACW,OAAQ,QACxCgB,IACFM,EAAKP,qBAAqBC,IAGjBqQ,YAAW,sBAAC,sBAAAxR,EAAA,yDAChB6V,GADgB,wBAEnBA,KAFmB,kBAIXC,KAJW,uDAMjB1a,EAAI,+BAAgC,OAAQ,SAN3B,QAQnBya,KARmB,yDAUpB,KAEHA,KAvBF,SAwBQC,KAxBR,OAyBED,KAEAza,EAAI,oBAAqB,OAAQ,QA3BnC,6C,sBAgCA,SAAS2a,KACP,IAAIrL,EAAiB6D,GAAOpO,IAAI,wBAChC,IAAKuK,EAAgB,CACRjK,KAAKC,MAAMsV,WAEtBtL,EACEuL,KAAKC,MAAsB,IAAhBD,KAAKE,UAChB,EACA,KACCF,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GACnC,KACCF,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GACnC,KACCF,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GAGvC,OADA5H,GAAOtF,IAAI,uBAAwByB,GAC5BA,E,SAGM0L,K,8EAAf,wCAAApW,EAAA,sEACiCyB,EAAKtB,IAClC,WAAamB,GAAkB,oBAFnC,mBACUpG,EADV,EACUA,KADV,EACgByE,SAGC7C,IAAK3I,aAJtB,wBAKYkiB,EAA6Bnb,EAA7Bmb,cAAeC,EAAcpb,EAAdob,UACjB5L,EAAiBqL,KAIvB3a,EACE,6CAJImb,EAAiB3C,UACrByC,EAAgB,IAAM3L,EAAiB,IAAM4L,IAI7C,OACA,QAbN,UAgBsC7U,EAAKpB,KACrC,WAAaiB,GAAkB,qBAC/B,CACEoJ,iBACAN,WAAY,MACZjJ,YAAaoV,EACblM,WAAY,eAtBpB,mBAgBY1K,SASQ7C,IAAK3I,eAEnBiH,EACE,0CAFF+F,GAAcoV,GAGZ,OACA,QAGFhI,GAAOtF,IAAI,cAAe9H,IAE1BM,EAAKP,qBAAqBC,KAnChC,6C,+BAwCe2U,K,8EAAf,kCAAA9V,EAAA,sDACE5E,EACE,6BAA+ByP,GAAa,kBAlGhC,EAmGZ,OACA,QAJJ,yBAYO1J,GAZP,iCAaUiV,KAbV,UAcSjV,GAdT,wBAeM/F,EAAI,+BAAgC,OAAQ,QAflD,kCAqBQsG,EAAU,GAOhBtG,EACE,sCAAwCwN,KAAKC,UAAUnH,EAAS,KAAM,GACtE,OACA,QA/BJ,UAkCiCD,EAAKpB,KAClC,WAAaiB,GAAkB,wBAC/BI,GApCJ,iBAkCUxG,EAlCV,EAkCUA,KAKRE,EAAI,wBALUuE,EAlChB,EAkCgBA,QAKuB,OAAQ,WAEzCA,IAAW7C,IAAK3I,cACdwL,IAAW7C,IAAKpI,yBAClB6Z,GAAOtF,IAAI,cAAe,MAC1B9H,GAAc,MAIdjG,IACFE,EACE,qBAAuBwN,KAAKC,UAAU3N,EAAM,KAAM,GAClD,OACA,WAGkBA,EAAKiG,aACzB0J,GAAa3P,EAAK2P,YAmBX+K,GAAwB,EARC,IAA1BA,IACFxa,EAAI,0BAA2B,OAAQ,QACvCkC,EAAatC,KAAK8B,IAAKnO,sBAAsB,GAE7CinB,GAAwB,GAExBA,MAINxa,EAAI,eAAgB,OAAQ,QA7E9B,6C,sBA0FAkC,EAAa3B,GAAGmB,IAAKlN,gBAVrB,SAA2B2N,EAAOrC,GAChCE,EACE,yCAA2CF,EAAKsC,YAChD,OACA,QAEFqN,GAAa3P,EAAKsC,cAAgBV,IAAK9J,oBACvCyO,EAAKX,mBAAmB5F,EAAK6F,cAKhB,QAAEY,K,4FClLjB,4BAAA3B,EAAA,6DACEwW,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFjb,SAASC,eAAe,SAL5B,SAaQqa,GAAUnU,KAfM,kBAExB,uBAc+BqO,GAAKrO,KAhBZ,kBAExB,cAcQ+U,EAdR,OAeEvb,QAAQC,IAAI,kCACPsb,EAKH1G,GAAKV,SAJLnU,QAAQC,IAAI,8BACZkC,EAAatC,KAAK8B,IAAKnN,UAAWmN,IAAKzP,WAKzC8N,QAAQC,IAAI,mCAvBd,UAwBQiQ,GAAQ1J,KA1BQ,kBAExB,eAyBExG,QAAQC,IAAI,qCAzBd,UA0BQyX,GAAclR,KA5BE,kBAExB,eA2BExG,QAAQC,IAAI,qCA3Bd,UA4BQsZ,GAAQ/S,KA9BQ,kBAExB,eA6BExG,QAAQC,IAAI,qCA7Bd,UA8BQ8M,GAAKvG,KAhCW,kBAExB,QA+BExG,QAAQC,IAAI,kCAIZqa,KAnCF,6C,2DA2CAkB,I,iCCnEA,4FAMMvN,EAAM,mCAKL,SAASgG,EAAQwH,GAEtB,IAAMC,EAAKC,EAAOzD,KAAK0D,sBAAY,KAC7BrD,EAASsD,yBATC,cASyB5N,EAAKyN,GAC1CI,EAAUvD,EAAO5G,OAAO8J,EARR,OAEC,OAUrB,OAHAK,GAAWvD,EAAO9R,MAPG,OAQN,UAAMiV,EAAGb,SAAS,OAAlB,YAA4BiB,EAAQjB,YAK9C,SAASnH,EAAQqI,GAEtB,IAAKA,GAA2B,KAAdA,EAAkB,MAAO,GAE3C,IAAMC,EAAYD,EAAUE,MAAM,KAG5BC,EAAKP,EAAOzD,KAAK8D,EAAUG,QApBZ,OAuBfC,EAAgBT,EAAOzD,KAAK8D,EAAUK,KAAK,KAvB5B,OA0BfC,EAAWC,2BA9BD,cA8B6BtO,EAAKiO,GAC9CT,EAAYa,EAAS3K,OAAOyK,EA3BX,MAFD,QAgCpB,OAFAX,GAAaa,EAAS7V,MA9BF,SAgCHoU,WAGJ,KAAE5G,UAASP,a","file":"static/js/main.619c0f6f.chunk.js","sourcesContent":["class Defs {}\n\nmodule.exports = {\n  reqAreYouServerUuid: \"a962ed99-e788-49cd-aa67-b0a8317f1573\",\n  rspAreYouServerUuid: \"7589c403-984c-4c8a-885b-48a65131d17b\",\n\n  reqDiscoveryUuid: \"24e1c790-20b9-47e9-b4b7-77f15da4e191\",\n  rspDiscoveryUuid: \"9c96377f-ee54-4d39-b4f0-fde43283ac73\",\n\n  port_server: \"8001\",\n  port_sentinel_admin: \"8005\",\n  port_sentinel_core: \"8002\",\n  port_sentinel_updater: \"8003\",\n  port_sentinel_web: \"8008\",\n  port_sentinel_web_client_proxy: \"8004\",\n  port_sentinel_web_server_proxy: \"8002\",\n  port_traffic_control: \"8007\",\n\n  server_cert: \"/etc/iipzy/certificate/server.cert\",\n  server_key: \"/etc/iipzy/certificate/server.key\",\n\n  pingTarget: \"google.com\",\n\n  urlAbout: \"/about\",\n  urlAddUser: \"/addUser\",\n  urlAdministration: \"/administration\",\n  urlBlank: \"/blank\",\n  urlClients: \"/clients\",\n  urlClientUpdate: \"/clientUpdate\",\n  urlCloseSentinel: \"/closeSentinel\",\n  urlDebug: \"/debug\",\n  urlDevices: \"/devices\",\n  urlDownload: \"/download\",\n  urlEditUser: \"/editUser\",\n  urlForgotPassword: \"/forgotPassword\",\n  urlHome: \"/home\",\n  urlIipzy: \"/iipzy\",\n  urlLogin: \"/login\",\n  urlLogLevel: \"/logLevel\",\n  urlLogSend: \"/logSend\",\n  urlNavigator: \"/navigator\",\n  urlPingPlot: \"/pingPlot\",\n  urlScheduler: \"/scheduler\",\n  urlSentinelAdmin: \"/sentinelAdmin\",\n  urlSentinelDiscovery: \"/sentinelDiscovery\",\n  urlSentinelInUse: \"/sentinelInUse\",\n  urlSentinelOnlineCheck: \"/sentinelOnlineCheck\",\n  urlSentinels: \"/sentinels\",\n  urlSettings: \"/settings\",\n  urlStartup: \"/startup\",\n  urlThroughputTest: \"/throughputTest\",\n  urlUpdater: \"/updater\",\n\n  ipcAAATest: \"ipc_000\",\n  ipcAuthCredentialsUpdate: \"ipc_001\",\n  ipcBloatLatencyStatusIperf3Down: \"ipc_002\",\n  ipcBloatLatencyStatusIperf3DownFinal: \"ipc_003\",\n  ipcBloatLatencyStatusIperf3Up: \"ipc_004\",\n  ipcBloatLatencyStatusIperf3UpFinal: \"ipc_005\",\n  ipcClearDials: \"ipc_006\",\n  ipcClientLoginNeeded: \"ipc_007\",\n  ipcClientName: \"ipc_074\",\n  ipcClientShutdown: \"ipc_008\",\n  ipcConnectionToken: \"ipc_129\",\n  ipcConsoleLog: \"ipc_009\",\n  ipcConsoleLogVerbose: \"ipc_092\",\n  ipcDevicesReady: \"ipc_075\",\n  ipcDevicesWindowMount: \"ipc_179\",\n  ipcDevicesWindowUnmount: \"ipc_180\",\n  ipcDeviceUpdated: \"ipc_072\",\n  ipcDumpSentinelDeviceTable: \"ipc_068\",\n  ipcExit: \"ipc_010\",\n  ipcExiting: \"ipc_011\",\n  ipcIperf3StatusDown: \"ipc_012\",\n  ipcIperf3StatusUp: \"ipc_013\",\n  ipcIsLocalClient: \"ipc_177\",\n  ipcLinkTo: \"ipc_014\",\n  ipcLoginStatus: \"ipc_015\",\n  ipcLoginVerifyStatus: \"ipc_157\",\n  ipcNavBarInfo: \"ipc_176\",\n  ipcNominalLatencyStatus: \"ipc_016\",\n  ipcNominalLatencyStatusFinal: \"ipc_017\",\n  ipcNoop: \"ipc_044\",\n  ipcPingPlotConvertDB: \"ipc_056\",\n  ipcPingPlotData: \"ipc_024\",\n  ipcPingPlotWindowButtonHome: \"ipc_025\",\n  ipcPingPlotWindowButtonLeft: \"ipc_026\",\n  ipcPingPlotWindowButtonLeftMarked: \"ipc_027\",\n  ipcPingPlotWindowButtonRight: \"ipc_028\",\n  ipcPingPlotWindowButtonRightMarked: \"ipc_029\",\n  ipcPingPlotWindowButtonZoomChange: \"ipc_030\",\n  ipcPingPlotWindowMount: \"ipc_031\",\n  ipcPingPlotWindowButtonHomeEx: \"ipc_114\",\n  ipcPingPlotWindowButtonLeftEx: \"ipc_115\",\n  ipcPingPlotWindowButtonLeftMarkedEx: \"ipc_116\",\n  ipcPingPlotWindowButtonRightEx: \"ipc_117\",\n  ipcPingPlotWindowButtonRightMarkedEx: \"ipc_118\",\n  ipcPingPlotWindowButtonZoomChangeEx: \"ipc_119\",\n  ipcPingPlotWindowMountEx: \"ipc_120\",\n  ipcPingPlotWindowUnmount: \"ipc_178\",\n  ipcQuit: \"ipc_067\",\n  ipcRendererReady: \"ipc_033\",\n  ipcSentinelDiscoveryTryingSentinelIPAddress: \"ipc_018\",\n  ipcSentinelDiscovery: \"ipc_019\",\n  ipcSentinelSendState: \"ipc_020\",\n  ipcSentinelOnlineCheck: \"ipc_021\",\n  ipcSentinelOnlineStatus: \"ipc_022\",\n  ipcServerAddress: \"ipc_064\",\n  ipcShowNavBar: \"ipc_146\",\n  ipcTestingState: \"ipc_036\",\n  ipcTickStatusIperf3Down: \"ipc_037\",\n  ipcThroughputTestFailedToGetServer: \"ipc_038\",\n  ipcThrouputTestStatus: \"ipc_087\",\n  ipcThroughputTestWindowButtonLeft: \"ipc_089\",\n  ipcThroughputTestWindowButtonNewest: \"ipc_088\",\n  ipcThroughputTestWindowButtonOldest: \"ipc_091\",\n  ipcThroughputTestWindowButtonRight: \"ipc_090\",\n  ipcThroughputTestWindowMount: \"ipc_039\",\n  ipcThroughputTestWindowCancel: \"ipc_175\",\n  ipcThroughputTestWindowStart: \"ipc_174\",\n  ipcThroughputTestWindowStartStop: \"ipc_040\",\n  ipcTickStatusIperf3Up: \"ipc_041\",\n  ipcTickStatusNominalLatency: \"ipc_042\",\n  ipcTimeOfTest: \"ipc_043\",\n  ipcUserAddVerified: \"ipc_127\",\n  ipcZZZNext: \"ipc_181\",\n\n  configFilename: \"iipzy\",\n\n  crashFilename: \"iipzy-crash.txt\",\n\n  // -- login status\n  loginStatusLoggedOut: 0,\n  loginStatusLoggedIn: 1,\n  loginStatusLoginFailed: 2,\n  loginStatusVerified: 3,\n  loginStatusVerifyFailed: 4,\n  loginStatusNoServerAddress: 5,\n\n  // -- sentinel discovery\n  sentinelStatusOnline: 0,\n  sentinelStatusOffline: 1,\n  sentinelStatusInUse: 2,\n  sentinelStatusNoAddress: 3,\n  sentinelStatusUnknown: 4,\n  sentinelStatusOnlineLoggedOut: 5,\n\n  // -- pi internal events\n  // NB: don't overlap with ipc...\n  pevLoginStatus: \"pev_1001\",\n  pevLoginNeeded: \"pev_1002\",\n  pevZZZNext: \"pev_1003\",\n\n  // -- http custome headers\n  httpCustomHeader_XAuthToken: \"x-auth-token\",\n  httpCustomHeader_XClientToken: \"x-client-token\",\n  httpCustomHeader_XConnToken: \"x-conn-token\",\n  httpCustomHeader_XTimestamp: \"x-timestamp\",\n  httpCustomHeader_XWebClient: \"x-web-client\",\n\n  // -- http\n  httpStatusOk: 200,\n  httpStatusCreated: 201,\n  httpStatusAccepted: 202,\n  httpStatusNoContent: 204,\n  httpStatusMultiStatus: 207,\n  httpStatusFound: 302,\n  httpStatusBadRequest: 400,\n  httpStatusUnauthorized: 401,\n  httpStatusForbidden: 403,\n  httpStatusNotFound: 404,\n  httpStatusConflict: 409,\n  httpStatusGone: 410,\n  httpStatusUnprocessableEntity: 422,\n  httpStatusInternalError: 500,\n  httpStatusNotImplemented: 501,\n  httpStatusConnRefused: 900,\n  httpStatusConnAborted: 901,\n  httpStatusConnReset: 902,\n  httpStatusSentinelInUse: 903,\n  httpStatusException: 999,\n\n  statusOk: 0,\n  statusAlreadyExists: 10001,\n  statusDoesNotExist: 10002,\n  statusInvalidVerificationCode: 10003,\n  statusGeneralSqlFailure: 10004,\n  statusException: 10005,\n  statusInvalidUserName: 10006,\n  statusInvalidPasswordResetCode: 10007,\n  statusCannotAllocateIperf3Server: 10008,\n  statusDailyIperf3LimitReached: 10009,\n  statusInvalidUpdateType: 10010,\n  statusUpdateInProgress: 10011,\n  statusRouteError: 10012,\n  statusMissingClientToken: 10013,\n  statusInvalidClientToken: 10014,\n  statusMissingAuthToken: 10015,\n  statusInvalidAuthToken: 10016,\n  statusMissingParam: 10017,\n  statusInvalidParam: 10018,\n  statusInvalidCredentials: 10019,\n  statusMissingConnectionToken: 10020,\n  statusInvalidConnectionToken: 10021,\n  statusAdminPriviledgeRequired: 10022,\n  statusInvalidClientType: 10023,\n  statusIperf3ServerBusy: 10024,\n  statusHttpError: 10025,\n  statusInvalidThirdPartyApi: 10026,\n  statusSentinelInUse: 10027,\n  statusAdminInProgress: 10028,\n  statusInvalidDownloadClient: 10029,\n  statusUserNotInWhiteList: 10030,\n  statusIperf3ServerFailed: 10031,\n\n  // ping flag - bit mask\n  pingFlagNoop: 0,\n  pingFlagTcMode:1,\n\n  // ping mark - bit mask\n  pingMarkNormal: 0,\n  pingMarkDropped: 1,\n  pingMarkSavedRx: 2,\n  pingMarkSavedTx: 4,\n\n  // -- events\n  // objectType\n  objectType_null: \"\",\n  objectType_clientInstance: \"clientInstance\",\n  objectType_networkDevice: \"networkDevice\",\n  objectType_server: \"server\",\n\n  // eventClass\n  eventClass_null: \"\",\n  eventClass_clientAdded: \"clientAdded\",\n  eventClass_clientAddressChanged: \"clientAddressChanged\",\n  eventClass_clientOnLineStatus: \"clientOnLineStatus\",\n  eventClass_clientLoginStatus: \"clientLoginStatus\",\n  eventClass_cpuusage: \"cpuusage\",\n  eventClass_crash: \"crash\",\n  eventClass_networkDeviceAdded: \"networkDeviceAdded\",\n  eventClass_networkDeviceDeleted: \"networkDeviceDeleted\",\n  eventClass_networkDeviceIPAddressChanged: \"networkDeviceIPAddressChanged\",\n  eventClass_networkDeviceStatus: \"networkDeviceStatus\",\n  eventClass_pingFail: \"pingFail\",\n\n  // eventId\n  eventId_null: \"\",\n\n  // eventActive\n  eventActive_inactive: 0,\n  eventActive_active: 1,\n  eventActive_activeAutoInactive: 2, // becomes inactive when alert sent.\n\n  // alert target\n  alertTarget_null: 0,\n  alertTarget_email: 1,\n  alertTarget_sms: 2,\n\n  // -- administrative commands to sentinels/clients\n  adminCmd_admin: \"admin\",\n  adminCmd_getLogLevel: \"get-log-level\",\n  adminCmd_setLogLevel: \"set-log-level\",\n  adminCmd_sendLogs: \"send-logs\",\n\n  adminCmd_sentinel_none: \"none\",\n  adminCmd_sentinel_reboot: \"reboot\",\n  adminCmd_sentinel_resetNetworkDevicesDatabase:\n    \"reset-network-devices-database\",\n  adminCmd_sentinel_restartSentinel: \"restart-sentinel\",\n  adminCmd_sentinel_restartSentinelAdmin: \"restart-sentinel-admin\",\n  adminCmd_sentinel_restartSentinelWeb: \"restart-sentinel-web\",\n  adminCmd_sentinel_restartUpdater: \"restart-updater\",\n  adminCmd_sentinel_sendLogs: \"send-logs\",\n  adminCmd_sentinel_setLogLevelDetailed: \"set-log-level-detailed\",\n  adminCmd_sentinel_setLogLevelNormal: \"set-log-level-normal\",\n\n  // client type.\n  clientType_null: \"null\",\n  clientType_appliance: \"appliance\",\n  clientType_pc: \"pc\",\n  clientType_web: \"web\",\n\n  // client mode.\n  clientMode_null: \"null\",\n  clientMode_pcOnly: \"pc-only\",\n  clientMode_sentinel: \"sentinel\",\n\n  // third party apis.\n  thirdPartyApiName_null: \"null\",\n  thirdPartyApiName_email: \"email\",\n  thirdPartyApiName_ipApi: \"ipApi\",\n  thirdPartyApiName_ipGeolocation: \"ipGeolocation\",\n  thirdPartyApiName_sms: \"sms\",\n\n  headBuzzardUserId: 1,\n\n  //\n  endOfFile: 0\n};\n","function send(channel, data) {\n  //\n  console.log(\"---eventManager.send: channel = \" + channel);\n  const data_ = data ? data : {};\n  const e = new CustomEvent(channel, { detail: { data: data_ } });\n  document.getElementById(\"root\").dispatchEvent(e);\n}\n\nfunction on(channel, callback) {\n  document.getElementById(\"root\").addEventListener(\n    channel,\n    e => {\n      // console.log(\n      //   \"eventManager.on: channel = \" +\n      //     channel +\n      //     \", e.detail = \" +\n      //     JSON.stringify(e.detail)\n      // );\n      callback(channel, e.detail.data);\n    },\n    false\n  );\n}\n\nexport default { send, on };\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"../ipc/eventManager\";\n\nlet app = null;\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"NavBar.constructor\");\n\n    this.state = { count: 0 };\n\n    app = this;\n  }\n\n  doRender() {\n    console.log(\"NavBar.doRender\");\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  handleClick = (url) => {\n    console.log(\"==================NavBar.handleClick: url = \" + url);\n    //eventManager.send(Defs.ipcLinkTo, url);\n  };\n\n  // handleClickAddUser = url => {\n  //   console.log(\"==================NavBar.handleClickAddUser: \" + url);\n  // };\n\n  // handleTo = ev => {\n  //   console.log(\"==================NavBar.handleTo ev = \" + JSON.stringify(ev));\n  // };\n\n  render() {\n    const isAdmin = NavBar.isAdmin;\n    const loggedIn = NavBar.loggedIn;\n    const navbarName = NavBar.navbarName;\n\n    const userName = NavBar.userName;\n\n    console.log(\"NavBar.render: = \" + navbarName);\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          {navbarName === \"home\" && (\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n              <div className=\"navbar-nav\">\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  onClick={() => this.handleClick(Defs.urlIipzy)}\n                  to={Defs.urlIipzy}\n                >\n                  iipzy\n                </NavLink>\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  onClick={() => this.handleClick(Defs.urlSentinels)}\n                  to={Defs.urlSentinels}\n                >\n                  Sentinel\n                </NavLink>\n                {!loggedIn && (\n                  <NavLink\n                    className=\"nav-item nav-link\"\n                    onClick={() => this.handleClick(Defs.urlLogin)}\n                    to={Defs.urlLogin}\n                  >\n                    Log In\n                  </NavLink>\n                )}\n                {loggedIn && (\n                  <NavLink\n                    className=\"nav-item nav-link\"\n                    onClick={() => this.handleClick(Defs.urlLogin)}\n                    to={Defs.urlLogin}\n                  >\n                    Log Out\n                  </NavLink>\n                )}\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  onClick={() => this.handleClick(Defs.urlEditUser)}\n                  to={Defs.urlEditUser}\n                >\n                  Edit User\n                </NavLink>\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  onClick={() => this.handleClick(Defs.urlForgotPassword)}\n                  to={Defs.urlForgotPassword}\n                >\n                  Forgot Password\n                </NavLink>\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  onClick={() => this.handleClick(Defs.urlAddUser)}\n                  to={Defs.urlAddUser}\n                >\n                  Register\n                </NavLink>\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  onClick={() => this.handleClick(Defs.urlAbout)}\n                  to={Defs.urlAbout}\n                >\n                  About\n                </NavLink>\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  onClick={() => this.handleClick(Defs.urlDownload)}\n                  to={Defs.urlDownload}\n                >\n                  Download\n                </NavLink>\n                {isAdmin ? (\n                  <NavLink\n                    className=\"nav-item nav-link\"\n                    onClick={() => this.handleClick(Defs.urlAdministration)}\n                    to={Defs.urlAdministration}\n                  >\n                    Administration\n                  </NavLink>\n                ) : null}\n              </div>\n            </div>\n          )}\n          {navbarName === \"admin\" && (\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n              <div className=\"navbar-nav\">\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  onClick={() => this.handleClick(Defs.urlClients)}\n                  to={Defs.urlClients}\n                >\n                  Clients\n                </NavLink>\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  onClick={() => this.handleClick(Defs.urlSentinelAdmin)}\n                  to={Defs.urlSentinelAdmin}\n                >\n                  Admin\n                </NavLink>\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  onClick={() => this.handleClick(Defs.urlUpdater)}\n                  to={Defs.urlUpdater}\n                >\n                  Update\n                </NavLink>\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  onClick={() => this.handleClick(Defs.urlHome)}\n                  to={Defs.urlHome}\n                >\n                  Home\n                </NavLink>\n              </div>\n            </div>\n          )}\n        </nav>\n        <div style={{ marginLeft: 24, textAlign: \"left\" }}>\n            <p style={{ fontSize: \"100%\" }}>User: {userName}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nNavBar.isAdmin = false;\nNavBar.navbarName = \"home\";\nNavBar.userName = \"not logged in\"\n\nconst handleShowNavBar = (event, data) => {\n  console.log(\"NavBar.handleShowNavBar: \" + data);\n  NavBar.navbarName = data;\n  if (app != null) app.doRender();\n};\n\nconst handleLoginStatus = (event, data) => {\n  const { isAdmin, loginStatus, userName } = data;\n  NavBar.isAdmin = isAdmin;\n  NavBar.loggedIn = loginStatus === Defs.loginStatusLoggedIn;\n  NavBar.userName = NavBar.loggedIn ? userName : \"not logged in\";\n  if (app != null) app.doRender();\n};\n\neventManager.on(Defs.ipcLoginStatus, handleLoginStatus);\neventManager.on(Defs.ipcShowNavBar, handleShowNavBar);\n\nexport default NavBar;\n","import React from \"react\";\nimport { FiX } from \"react-icons/fi\";\nimport IconButton from \"@material/react-icon-button\";\n\nclass CloseButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"CloseButton.constructor\");\n\n    this.state = {\n      linkCount: 0,\n    };\n  }\n\n  handleClick(ev) {\n    console.log(\"CloseButton.handleClick\");\n    this.props.onClick(ev);\n  }\n\n  render() {\n    console.log(\"IipzyWindow.render\");\n\n    return (\n      <div>\n        <IconButton\n          onClick={(ev) => this.handleClick(ev)}\n          type=\"submit\"\n          style={{\n            position: \"absolute\",\n            top: \"0px\",\n            right: \"0px\",\n            border: \"none\",\n            background: \"none\",\n            outline: \"none\",\n          }}\n        >\n          <FiX style={{ height: 30, width: 30 }} />\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nexport default CloseButton;\n","import React from \"react\";\n\nimport CloseButton from \"./closeButton\";\nimport Navigator from \"./navigator\";\n\nlet app = null;\n\nclass InfoPopup extends React.Component {\n  constructor(props) {\n    super(props);\n    app = this;\n  }\n\n  getInfoMessage() {\n    return this.props.getInfoMessage();\n  }\n\n  handleSubmitClick(ev) {\n    console.log(\"...Popup handleSubmitClick\");\n    this.props.closePopup();\n  }\n\n  render() {\n    console.log(\"InfoPopup render\");\n\n    return (\n      <div>\n        <Navigator />\n        <div className=\"popup\">\n          <div className=\"popup_inner\">\n            <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n              <p style={{ fontSize: \"140%\" }}>{this.props.title}</p>\n            </div>\n            <div style={{ marginLeft: 30, textAlign: \"left\" }}>\n              <p>\n                <br />\n                {this.getInfoMessage()}\n              </p>\n            </div>\n            <CloseButton onClick={ev => this.handleSubmitClick(ev)} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InfoPopup;\n","import React from \"react\";\nimport { Redirect, Switch } from \"react-router-dom\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"../ipc/eventManager\";\nimport InfoPopup from \"./infoPopup\";\n\nlet app = null;\n\n// NB: Navigator does not get constructed on every reference.\nclass Navigator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"Navigator.constructor\");\n\n    this.state = {\n      linkCount: 0\n    };\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"Navigator.componentDidMount\");\n    app = this;\n  }\n\n  componentWillUnmount() {\n    console.log(\"Navigator.componentWillUnmount\");\n    app = null;\n  }\n\n  handleLinkChange() {\n    Navigator.linkChange = true;\n    Navigator.linkCount++;\n\n    console.log(\"Navigator: handleLinkChange: \" + Navigator.link);\n\n    this.setState({ linkCount: Navigator.linkCount });\n  }\n\n  render() {\n    const linkChange = Navigator.linkChange;\n    Navigator.linkChange = false;\n    const link = Navigator.link;\n\n    console.log(\"Navigator.render: \" + link + \", linkChange = \" + linkChange);\n\n    return (\n      <div>\n        {linkChange && (\n          <Switch>\n            <Redirect to={link} />\n          </Switch>\n        )}\n      </div>\n    );\n  }\n}\n\nNavigator.link = \"\";\nNavigator.linkCount = 0;\nNavigator.linkChange = false;\n\neventManager.on(Defs.ipcSentinelOnlineStatus, (event, data) => {});\n\neventManager.on(Defs.ipcLinkTo, (event, data) => {\n  console.log(\"navigator: \" + data);\n\n  Navigator.link = data;\n  if (app) app.handleLinkChange();\n});\n\nexport default Navigator;\n","import React from \"react\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport Navigator from \"./navigator\";\n\nlet app = null;\n\nclass AboutWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"AboutWindow.constructor\");\n\n    this.state = { count: 0 };\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"AboutWindow.componentDidMount\");\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  componentWillUnmount() {\n    console.log(\"AboutWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  render() {\n    console.log(\"AboutWindow.render\");\n\n    const downloadPath = \"..\" + Defs.urlDownload;\n\n    return (\n      <div>\n        <Navigator />\n        <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"140%\" }}>About iipzy</p>\n          <p>\n            iipzy monitors your internet connection for reliability and speed.\n          </p>\n          <p>\n            An iipzy device on your local network talks to the iipzy service in\n            the cloud. The iipzy device is a Nano Pi R4S computer running linux\n            and iipzy software. Click <b>Download</b> above for how to set up a\n            NanoPi R4S. The iipzy device is known as <b>Sentinel</b>.\n          </p>\n          <p>\n            To watch your network connection, Sentinel sends a heartbeat to the\n            iipzy service every 20 seconds. If the service fails to receive a\n            heartbeat for one minute, it assumes your internet connection is\n            down. You are notified by a text message and email of this. When a\n            heartbeat is again received, you are notified that the connection is\n            up.\n          </p>\n          <p>\n            To measure network latency, Sentinel sends a ping to an internet\n            server every 5 seconds. You can view the ping latency on a graph so\n            that you can see latency variations over time. Ping history is kept\n            for 30 days. iipzy notifies you by email if one or more pings are\n            dropped.\n          </p>\n          <p>\n            To measure network throughput, Sentinel runs a speed test once a\n            day, at about 1 am. You can also run the speed test on demand. You\n            can view the history of the speed tests to see if your throughput is\n            changing.\n          </p>\n          <p>\n            Additionally, Sentinel keeps track of devices on your network. You\n            can view info about the devices, such as ip address, name, and\n            capabilities. iipzy notifies you via email if a new device appears\n            on your network or if a device hasn't been seen for 30 days. You can\n            optionally monitor a particular device so that you are notified by\n            email if it goes offline or comes online.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AboutWindow;\n","export function log(message, label, level) {\n  console.log(level + \" [\" + label + \"] \" + message);\n}\n\nexport default { log };\n","import axios from \"axios\";\nimport https from \"https\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nconst httpsInstance = axios.create({\n  httpsAgent: new https.Agent({\n    keepAlive: true\n  }),\n  validateStatus: function(status) {\n    // return success for all http response codes.\n    return true;\n  }\n});\n\nfunction handleHttpException(title, ex) {\n  console.log(\"(Exception) \" + title + \": \" + ex + \", code = \" + ex.code);\n  let status = Defs.httpStatusException;\n  switch (ex.code) {\n    case \"ECONNREFUSED\": {\n      status = Defs.httpStatusConnRefused;\n      break;\n    }\n    case \"ECONNABORTED\": {\n      status = Defs.httpStatusConnAborted;\n      break;\n    }\n    case \"ECONNRESET\": {\n      status = Defs.httpStatusConnReset;\n      break;\n    }\n    default: {\n      status = Defs.httpStatusConnRefused;\n      break;\n    }\n  }\n\n  return { status };\n}\n\nasync function _delete(url, config) {\n  try {\n    return await httpsInstance.delete(url, addHeaders(config));\n  } catch (ex) {\n    return handleHttpException(\"delete\", ex);\n  }\n}\n\nasync function _get(url, config) {\n  console.log(\"--------------_get: url \" + url);\n  try {\n    return await httpsInstance.get(url, addHeaders(config));\n  } catch (ex) {\n    console.log(\"(Exception)--------------_get: ex \" + ex.code);\n    return handleHttpException(\"get\", ex);\n  }\n}\n\nasync function _post(url, params, config) {\n  console.log(\"--------------_post: url \" + url);\n  try {\n    return await httpsInstance.post(url, params, addHeaders(config));\n  } catch (ex) {\n    console.log(\"(Exception)--------------_post: ex \" + ex.code);\n    return handleHttpException(\"post\", ex);\n  }\n}\n\nasync function _put(url, params, config) {\n  try {\n    return await httpsInstance.put(url, params, addHeaders(config));\n  } catch (ex) {\n    return handleHttpException(\"put\", ex);\n  }\n}\n\nfunction logAuthToken() {\n  console.log(\n    \"authToken: \" +\n      axios.defaults.headers.common[Defs.httpCustomHeader_XAuthToken]\n  );\n}\n\nfunction setAuthTokenHeader(authToken) {\n  console.log(\"setAuthTokenHeader = \" + authToken);\n  axios.defaults.headers.common[Defs.httpCustomHeader_XAuthToken] = authToken;\n}\n\nfunction setBaseURL(baseURL) {\n  axios.defaults.baseURL = \"http://\" + baseURL + \"/\";\n  console.log(\"setBaseURL = \" + axios.defaults.baseURL);\n}\n\nfunction setClientTokenHeader(clientToken) {\n  console.log(\"setClientTokenHeader = \" + clientToken);\n  axios.defaults.headers.common[\n    Defs.httpCustomHeader_XClientToken\n  ] = clientToken;\n}\n\nfunction setConnTokenHeader(connToken) {\n  console.log(\"setConnTokenHeader = \" + connToken);\n  axios.defaults.headers.common[Defs.httpCustomHeader_XConnToken] = connToken;\n}\n\nfunction addHeaders(config) {\n  const configWithHeaders = config ? config : {};\n  configWithHeaders.headers = {};\n  configWithHeaders.headers[Defs.httpCustomHeader_XTimestamp] = Date.now();\n  configWithHeaders.headers[Defs.httpCustomHeader_XWebClient] = 1;\n  if (axios.defaults.headers.common[Defs.httpCustomHeader_XAuthToken])\n    configWithHeaders.headers[Defs.httpCustomHeader_XAuthToken] =\n      axios.defaults.headers.common[Defs.httpCustomHeader_XAuthToken];\n  if (axios.defaults.headers.common[Defs.httpCustomHeader_XClientToken])\n    configWithHeaders.headers[Defs.httpCustomHeader_XClientToken] =\n      axios.defaults.headers.common[Defs.httpCustomHeader_XClientToken];\n  if (axios.defaults.headers.common[Defs.httpCustomHeader_XConnToken])\n    configWithHeaders.headers[Defs.httpCustomHeader_XConnToken] =\n      axios.defaults.headers.common[Defs.httpCustomHeader_XConnToken];\n\n  return configWithHeaders;\n}\n\nexport default {\n  delete: _delete,\n  get: _get,\n  post: _post,\n  put: _put,\n  logAuthToken,\n  setAuthTokenHeader,\n  setBaseURL,\n  setClientTokenHeader,\n  setConnTokenHeader\n};\n","import Defs from \"iipzy-shared/src/defs\";\n\nimport { log } from \"../utils/log\";\n//import eventManager from \"../ipc/eventManager\";\nimport http from \"../ipc/httpService\";\n\nlet serverIPAddress = \"address not set\";\n\nasync function init(serverIPAddress_) {\n  log(\"users.init\", \"clts\", \"info\");\n\n  serverIPAddress = serverIPAddress_;\n}\n\nfunction final() {}\n\nasync function addUser(userData) {\n  log(\"addUser\", \"user\", \"info\");\n  return await http.post(\"https://\" + serverIPAddress + \"/api/user\", userData);\n}\n\nasync function deleteUser(userData) {\n  log(\"deleteUser\", \"user\", \"info\");\n  return await http.delete(\"https://\" + serverIPAddress + \"/api/user\");\n}\n\nasync function getUser() {\n  log(\"getUser\", \"user\", \"info\");\n  return await http.get(\"https://\" + serverIPAddress + \"/api/user\");\n}\n\nasync function newPassword(userData) {\n  log(\"newPassword\", \"user\", \"info\");\n  return await http.post(\n    \"https://\" + serverIPAddress + \"/api/user/newpassword\",\n    userData\n  );\n}\n\nasync function sendPasswordResetCode(userData) {\n  log(\"sendCode\", \"user\", \"info\");\n  return await http.post(\n    \"https://\" + serverIPAddress + \"/api/user/sendcode\",\n    userData\n  );\n}\n\nasync function updateUser(userData) {\n  log(\"updateUser\", \"user\", \"info\");\n  return await http.put(\n    \"https://\" + serverIPAddress + \"/api/user/user\",\n    userData\n  );\n}\n\nasync function verifyUser(reqData) {\n  log(\"verifyUser\", \"user\", \"info\");\n  return await http.put(\n    \"https://\" + serverIPAddress + \"/api/user/verify\",\n    reqData\n  );\n}\n\nexport default {\n  init,\n  final,\n  addUser,\n  deleteUser,\n  getUser,\n  newPassword,\n  sendPasswordResetCode,\n  updateUser,\n  verifyUser\n};\n","import React from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nimport Navigator from \"./navigator\";\r\n\r\nlet app = null;\r\n\r\nclass SpinnerPopup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"SpinnerPopup.constructor\");\r\n    app = this;\r\n\r\n    this.state = { count: 0 };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"SpinnerPopup.componentDidMount\");\r\n    const count = this.state.count + 1;\r\n    this.setState({ count: count });\r\n  }\r\n\r\n  render() {\r\n    console.log(\"SpinnerPopup render\");\r\n\r\n    return (\r\n      <div>\r\n        <Navigator />\r\n        <div className=\"popup_spinner\">\r\n          <div className=\"popup_spinner_inner\" alignItems=\"center\">\r\n            <div>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpinnerPopup;\r\n","import React from \"react\";\n\n//?? TODO hidden\nconst Input = ({\n  type,\n  name,\n  label,\n  value,\n  error,\n  autofocus,\n  disabled,\n  onChange,\n  porportionalWidth,\n}) => {\n  const width = porportionalWidth ? \"85%\" : \"480px\";\n  return (\n    <div className=\"form-group\" style={{ width, marginLeft: 45 }}>\n      <label htmlFor={name}>{label}</label>\n      <input\n        autoFocus={autofocus}\n        disabled={disabled}\n        value={value ? value : \"\"}\n        onChange={onChange}\n        id={name}\n        name={name}\n        type={type}\n        className=\"form-control\"\n      />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n//import Joi from \"joi-browser\";\n//import Form from \"iipzy-client-shared/src/common/form\";\nimport Button from \"@material-ui/core/Button\";\n//import Button from \"@material-ui/core/Button\").Button;\n\nimport CloseButton from \"./closeButton\";\nimport Input from \"./input\";\nimport Navigator from \"./navigator\";\n\n//let app = null;\n\nclass ValidationPopup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { code: \"\" };\n\n    console.log(\"ValidationPopup.constructor\");\n\n    //app = this;\n  }\n\n  getCode() {\n    return this.state.code;\n  }\n\n  handleChange(ev) {\n    const name = ev.target.name;\n    const value = ev.target.value;\n\n    console.log(\n      \"ValidationPopup.handleChange: name = \" +\n        name +\n        \", value = \" +\n        this.state[name]\n    );\n\n    this.setState({ [name]: value });\n  }\n\n  async handleSubmitClick(ev) {\n    console.log(\"ValidationPopup.handleSubmitClick\");\n    console.log(\"code=\" + this.state.code);\n\n    this.props.closePopup();\n    this.props.onSubmit(this.state.code);\n  }\n\n  async handleCancelClick(ev) {\n    console.log(\"ValidationPopup.handleCancelClick\");\n\n    this.props.closePopup();\n    this.props.onSubmit(\"000000\");\n  }\n\n  isValidInput() {\n    //?? TODO\n    return true;\n  }\n\n  render() {\n    console.log(\"ValidationPopup.render\");\n\n    return (\n      <div>\n        <Navigator />\n        <div className=\"popup\">\n          <div className=\"popup_inner\">\n            <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n              <p style={{ fontSize: \"140%\" }}>Enter Validation Code</p>\n            </div>\n            <Input\n              type=\"text\"\n              autofocus={true}\n              disabled={false}\n              name=\"code\"\n              value={this.getCode()}\n              label=\"Code\"\n              onChange={(ev) => this.handleChange(ev)}\n              error=\"\"\n              porportionalWidth={true}\n            />\n            <h1>{this.props.text}</h1>\n            <div style={{ textAlign: \"center\" }}>\n              <Button\n                type=\"button\"\n                variant=\"contained\"\n                disabled={!this.isValidInput()}\n                style={{\n                  width: \"130px\",\n                  color: \"#0000b0\",\n                }}\n                autoFocus\n                onClick={(ev) => this.handleSubmitClick(ev)}\n              >\n                Submit\n              </Button>\n            </div>\n            <CloseButton onClick={(ev) => this.handleCancelClick(ev)} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ValidationPopup;\n","import React from \"react\";\n//import Spinner from \"react-bootstrap/Spinner\";\nimport Joi from \"joi\";\nimport Button from \"@material-ui/core/Button\";\n//import Tooltip from \"@material-ui/core/Tooltip\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport Navigator from \"./navigator\";\nimport Input from \"./input\";\n//import SpinnerPopup from \"./spinnerPopup\";\n\nlet app = null;\n\nclass UserForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"UserForm.constructor\");\n\n    this.state = {\n      errors: {},\n      count: 0,\n      // showPopup: false\n    };\n\n    this.data = {\n      userName: null,\n      emailAddress: null,\n      mobilePhoneNo: null,\n      password: null,\n      password2: null,\n    };\n\n    app = this;\n\n    this.schema = {\n      userName: Joi.string().required().label(\"User Name\").min(5).max(50),\n      emailAddress: Joi.string().required().label(\"Email Address\").email(),\n      mobilePhoneNo: Joi.string()\n        .required()\n        .label(\"Mobile Phone Number\")\n        .regex(/^\\d{3}-\\d{3}-\\d{4}$/)\n        .error((errors) => {\n          return {\n            message: \"Phone number must be of the form 123-456-7890\",\n          };\n        }),\n      password: Joi.string().required().label(\"Password\").min(5).max(50),\n      password2: Joi.string().required().label(\"Password Again\").min(5).max(50),\n    };\n  }\n\n  validateProperty(name, value) {\n    console.log(\n      \"UserForm.validateProperty: name=\" + name + \", value = \" + value\n    );\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n\n    console.log(\"UserForm.validateProperty - had error = \" + error);\n\n    return error ? error.details[0].message : null;\n  }\n\n  validate() {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.data, this.schema, options);\n    if (!error) return null;\n\n    console.log(\"UserForm.validate - had error\");\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  }\n\n  componentDidMount() {\n    console.log(\"UserForm.componentDidMount\");\n\n    this.data = this.props.getUserData();\n\n    const count = this.state.count + 1;\n    this.setState({ count });\n  }\n\n  componentWillUnmount() {\n    console.log(\"UserForm.componentWillUnmount\");\n\n    this.props.setUserData(this.data);\n\n    app = null;\n  }\n\n  isValidUserName() {\n    return this.data.userName != null && this.data.userName.length > 5;\n  }\n\n  isValidMobilePhoneNo() {\n    return (\n      this.data.mobilePhoneNo != null && this.data.mobilePhoneNo.length > 9\n    );\n  }\n\n  isValidEmailAddress() {\n    return this.data.emailAddress != null && this.data.emailAddress.length > 5;\n  }\n\n  isValidPassword() {\n    return this.data.password != null && this.data.password.length > 5;\n  }\n\n  getButton1Label() {\n    return this.props.button1Label;\n  }\n\n  getButton2Label() {\n    return this.props.button2Label;\n  }\n\n  isValidInput() {\n    return (\n      this.props.getButtonsEnabled() &&\n      this.isValidUserName() &&\n      this.isValidMobilePhoneNo() &&\n      this.isValidEmailAddress() &&\n      this.isValidPassword() &&\n      this.data.password === this.data.password2\n    );\n  }\n\n  handleChange(ev) {\n    const name = ev.target.name;\n    const value = ev.target.value;\n\n    console.log(\n      \"UserForm.handleChange: name = \" + name + \", value = \" + this.data[name]\n    );\n\n    const errors = this.state.errors;\n    const errorMessage = this.validateProperty(name, value);\n    if (errorMessage) errors[name] = errorMessage;\n    else delete errors[name];\n\n    const data = this.data;\n    data[name] = value;\n\n    this.setState({ data, errors });\n  }\n\n  handlePassword2Change(ev) {\n    const name = ev.target.name;\n    const value = ev.target.value;\n\n    console.log(\n      \"UserForm.handlePassword2Change: name=\" +\n        name +\n        \", value=\" +\n        this.data[name]\n    );\n\n    if (this.data.password !== value) {\n      const errors = this.state.errors;\n      errors[name] = \"passwords don't match\";\n\n      const data = this.data;\n      data[name] = value;\n\n      this.setState({ data, errors });\n\n      return;\n    }\n\n    return this.handleChange(ev);\n  }\n\n  handleButtonClick(ev) {\n    console.log(\"UserForm.handleButtonClick\");\n    console.log(\"userName=\" + this.data.userName);\n    console.log(\"mobilePhoneNo=\" + this.data.mobilePhoneNo);\n    console.log(\"emailAddress=\" + this.data.emailAddress);\n\n    ev.preventDefault();\n\n    const errors = this.validate();\n\n    if (errors)\n      console.log(\n        \"UserForm.handleButtonClick: errors = \" + Object.values(errors)\n      );\n\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.props.setButtonsEnabled(false);\n    this.props.setFieldsEnabled(false);\n\n    this.props.onSubmit(this.data);\n  }\n\n  handleButton2Click(ev) {\n    this.props.setButtonsEnabled(false);\n    this.props.setFieldsEnabled(false);\n\n    this.props.onSubmit2(this.data);\n  }\n\n  renderInput(\n    name,\n    label,\n    type = \"text\",\n    autofocus = false,\n    disabled = false,\n    onChange = null\n  ) {\n    const { errors } = this.state;\n    const data = this.data;\n\n    const onChange_ = this.handleChange;\n\n    return (\n      <Input\n        type={type}\n        name={name}\n        label={label}\n        value={data[name]}\n        error={errors[name]}\n        autofocus={autofocus}\n        disabled={disabled}\n        onChange={onChange}\n      />\n    );\n  }\n\n  render() {\n    console.log(\"UserForm.render\");\n\n    const buttonsEnabled = this.props.getButtonsEnabled();\n    const fieldsEnabled = this.props.getFieldsEnabled();\n    const button1MarginRight = this.props.onSubmit2 ? 20 : 0;\n    //const showSpinner = !buttonsEnabled;\n\n    const ret = (\n      <div>\n        <Navigator />\n        <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"140%\" }}>{this.props.title}</p>\n        </div>\n        <form>\n          {this.renderInput(\n            \"userName\",\n            \"User Name\",\n            \"text\",\n            true,\n            this.props.userNameDisabled || !fieldsEnabled,\n            (ev) => this.handleChange(ev)\n          )}\n          {this.renderInput(\n            \"emailAddress\",\n            \"Email Address\",\n            \"text\",\n            false,\n            !this.isValidUserName() || !fieldsEnabled,\n            (ev) => this.handleChange(ev)\n          )}\n          {this.renderInput(\n            \"mobilePhoneNo\",\n            \"Mobile Phone Number\",\n            \"text\",\n            false,\n            !this.isValidEmailAddress() || !fieldsEnabled,\n            (ev) => this.handleChange(ev)\n          )}\n          {this.renderInput(\n            \"password\",\n            \"Password\",\n            \"password\",\n            false,\n            !this.isValidMobilePhoneNo() || !fieldsEnabled,\n            (ev) => this.handleChange(ev)\n          )}\n          {this.renderInput(\n            \"password2\",\n            \"Password Again\",\n            \"password\",\n            false,\n            !this.isValidPassword() || !fieldsEnabled,\n            (ev) => this.handlePassword2Change(ev)\n          )}\n          <div>&nbsp;</div>\n          <div style={{ marginLeft: \"45px\" }}>\n            <table align=\"left\">\n              <tbody>\n                <tr>\n                  <td>\n                    <div\n                      style={{\n                        textAlign: \"center\",\n                        marginRight: button1MarginRight,\n                      }}\n                    >\n                      <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        disabled={!this.isValidInput()}\n                        style={{\n                          width: \"130px\",\n                          color: \"#0000b0\",\n                        }}\n                        /*                       autoFocus */\n                        onClick={(ev) => this.handleButtonClick(ev)}\n                      >\n                        {this.getButton1Label()}\n                      </Button>\n                    </div>\n                  </td>\n                  {this.props.onSubmit2 && (\n                    <td>\n                      <div style={{ textAlign: \"center\", marginLeft: 20 }}>\n                        <Button\n                          type=\"button\"\n                          variant=\"contained\"\n                          disabled={!buttonsEnabled}\n                          style={{\n                            width: \"130px\",\n                            color: \"#0000b0\",\n                          }}\n                          /*                         autoFocus */\n                          onClick={(ev) => this.handleButton2Click(ev)}\n                        >\n                          {this.getButton2Label()}\n                        </Button>\n                      </div>\n                    </td>\n                  )}\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </form>\n      </div>\n    );\n    console.log(\"<<<UserForm.render\");\n    return ret;\n  }\n}\n\nexport default UserForm;\n","import React from \"react\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"../ipc/eventManager\";\nimport user from \"../services/user\";\nimport InfoPopup from \"./infoPopup\";\nimport SpinnerPopup from \"./spinnerPopup\";\nimport ValidationPopup from \"./validationPopup\";\nimport UserForm from \"./userForm\";\n\nlet app = null;\n\nclass AddUserWindow extends UserForm {\n  constructor(props) {\n    super(props);\n\n    console.log(\"AddUserWindow.constructor\");\n\n    this.state = { count: 0 };\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"AddUserWindow.componentDidMount\");\n    this.doRender();\n  }\n\n  componentWillUnmount() {\n    console.log(\"AddUserWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  componentWillReceiveProps() {\n    console.log(\"AddUserWindow.componentWillReceiveProps\");\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"AddUserWindow.shouldComponentUpdate\");\n    return true;\n  }\n\n  getUserData() {\n    const userData = {\n      userName: AddUserWindow.userName,\n      emailAddress: AddUserWindow.emailAddress,\n      mobilePhoneNo: AddUserWindow.mobilePhoneNo,\n      password: AddUserWindow.password,\n      password2: AddUserWindow.password2,\n    };\n    return userData;\n  }\n\n  setUserData(userData) {\n    AddUserWindow.userName = userData.userName;\n    AddUserWindow.emailAddress = userData.emailAddress;\n    AddUserWindow.mobilePhoneNo = userData.mobilePhoneNo;\n    AddUserWindow.password = userData.password;\n    AddUserWindow.password2 = userData.password2;\n  }\n\n  handleAddClick(userData) {\n    console.log(\"AddUserWindow.handleAddClick\");\n    console.log(\"  userName=\" + userData.userName);\n    console.log(\"  mobilePhoneNo=\" + userData.mobilePhoneNo);\n    console.log(\"  emailAddress=\" + userData.emailAddress);\n\n    // save in globals.\n    AddUserWindow.userName = userData.userName;\n    AddUserWindow.mobilePhoneNo = userData.mobilePhoneNo;\n    AddUserWindow.emailAddress = userData.emailAddress;\n    AddUserWindow.password = userData.password;\n    AddUserWindow.password2 = userData.password;\n\n    addUser(userData);\n  }\n\n  getInfoMessage() {\n    return AddUserWindow.infoMessage;\n  }\n\n  handleInfoPopupClick() {\n    console.log(\"AddUserWindow.handleInfoPopupClick\");\n  }\n\n  hideInfoPopup() {\n    AddUserWindow.showInfoPopup = false;\n    AddUserWindow.buttonsEnabled = !AddUserWindow.showValidationPopup;\n    if (AddUserWindow.isVerified) {\n      eventManager.send(Defs.ipcUserAddVerified, {\n        userName: AddUserWindow.userName,\n      });\n      AddUserWindow.isVerified = false;\n    }\n    this.doRender();\n  }\n\n  async handleVerifyClick(verificationCode) {\n    console.log(\"AddUserWindow.handleVerifyClick, code\" + verificationCode);\n    if (verificationCode !== \"000000\")\n      verifyUser({\n        userId: AddUserWindow.userId,\n        verificationCode: verificationCode,\n      });\n  }\n\n  hideValidationCodePopup() {\n    AddUserWindow.showValidationPopup = false;\n    AddUserWindow.buttonsEnabled = true;\n    this.doRender();\n  }\n\n  getButtonsEnabled() {\n    console.log(\n      \"addUserWindow.getButtonsEnabled: \" + AddUserWindow.buttonsEnabled\n    );\n    return AddUserWindow.buttonsEnabled;\n  }\n\n  setButtonsEnabled(buttonsEnabled) {\n    AddUserWindow.buttonsEnabled = buttonsEnabled;\n    console.log(\n      \"AddUserWindow.setButtonsEnabled: \" + AddUserWindow.fieldsEnabled\n    );\n  }\n\n  getFieldsEnabled() {\n    console.log(\n      \"addUserWindow.getFieldsEnabled: \" + AddUserWindow.fieldsEnabled\n    );\n    return AddUserWindow.fieldsEnabled;\n  }\n\n  setFieldsEnabled(fieldsEnabled) {\n    AddUserWindow.fieldsEnabled = fieldsEnabled;\n    console.log(\n      \"AddUserWindow.setFieldsEnabled: \" + AddUserWindow.fieldsEnabled\n    );\n  }\n\n  doRender() {\n    console.log(\"AddUserWindow.doRender\");\n    this.setState({ count: this.state.count + 1 });\n  }\n\n  render() {\n    console.log(\"AddUserWindow.render\");\n\n    const showInfoPopup = AddUserWindow.showInfoPopup;\n    const showSpinner = AddUserWindow.showSpinner;\n    const showValidationPopup = AddUserWindow.showValidationPopup;\n\n    console.log(\"AddUserWindow.render: showInfoPopup = \" + showInfoPopup);\n    console.log(\"AddUserWindow.render: showSpinner = \" + showSpinner);\n    console.log(\n      \"AddUserWindow.render: showValidationPopup = \" + showValidationPopup\n    );\n\n    const ret = (\n      <div>\n        {showValidationPopup && (\n          <ValidationPopup\n            onSubmit={(ev) => this.handleVerifyClick(ev)}\n            closePopup={this.hideValidationCodePopup.bind(this)}\n          />\n        )}\n        {showInfoPopup && (\n          <InfoPopup\n            title={\"Register User\"}\n            getInfoMessage={() => this.getInfoMessage()}\n            onSubmit={(ev) => this.handleInfoPopupClick(ev)}\n            closePopup={this.hideInfoPopup.bind(this)}\n          />\n        )}\n        {showSpinner && <SpinnerPopup />}\n        <UserForm\n          title={\"Register User @ iipzy.com\"}\n          getUserData={this.getUserData}\n          setUserData={this.setUserData}\n          getButtonsEnabled={this.getButtonsEnabled}\n          setButtonsEnabled={this.setButtonsEnabled}\n          getFieldsEnabled={this.getFieldsEnabled}\n          setFieldsEnabled={this.setFieldsEnabled}\n          userNameDisabled={false}\n          button1Label={\"Register\"}\n          onSubmit={(ev) => this.handleAddClick(ev)}\n        />\n      </div>\n    );\n    console.log(\"<<<AddUserWindow.render\");\n    return ret;\n  }\n}\n\nAddUserWindow.userName = \"\";\nAddUserWindow.emailAddress = \"\";\nAddUserWindow.mobilePhoneNo = \"\";\nAddUserWindow.password = \"\";\nAddUserWindow.password2 = \"\";\n\n// NB: if true, we are in the window for first time registration.\nAddUserWindow.needRegistration = false;\n\nAddUserWindow.buttonsEnabled = true;\nAddUserWindow.fieldsEnabled = true;\n\nAddUserWindow.showInfoPopup = false;\nAddUserWindow.infoMessage = \"\";\nAddUserWindow.showSpinner = false;\nAddUserWindow.showValidationPopup = false;\n\nAddUserWindow.userId = 0;\nAddUserWindow.isVerified = false;\n\nasync function addUser(userData) {\n  console.log(\"AddUserWindow.addUser\");\n\n  AddUserWindow.showSpinner = true;\n  if (app) app.doRender();\n\n  const { data, status } = await user.addUser(userData);\n\n  if (data.__hadError__) {\n    console.log(\n      \"addUserWindow.handleUserAddResponse: errorMessage = \" +\n        data.__hadError__.errorMessage +\n        \", statusCode = \" +\n        data.__hadError__.statusCode\n    );\n\n    AddUserWindow.infoMessage = data.__hadError__.errorMessage;\n\n    AddUserWindow.showInfoPopup = true;\n    AddUserWindow.showSpinner = false;\n    AddUserWindow.buttonsEnabled = false;\n    AddUserWindow.fieldsEnabled = true;\n\n    if (app) app.doRender();\n\n    return;\n  }\n\n  AddUserWindow.userId = data.userId;\n  console.log(\"AddUserWindow.addUser: userId = \" + AddUserWindow.userId);\n  AddUserWindow.showSpinner = false;\n  AddUserWindow.showValidationPopup = true;\n  AddUserWindow.buttonsEnabled = false;\n  AddUserWindow.fieldsEnabled = true;\n\n  if (app) app.doRender();\n}\n\nasync function verifyUser(params) {\n  AddUserWindow.showSpinner = true;\n  if (app) app.doRender();\n\n  const { data, status } = await user.verifyUser(params);\n  if (data.__hadError__) {\n    console.log(\n      \"AddUserWindow.handleUserVerifyResponse: errorMessage = \" +\n        data.__hadError__.errorMessage +\n        \", statusCode = \" +\n        data.__hadError__.statusCode\n    );\n\n    AddUserWindow.infoMessage = data.__hadError__.errorMessage;\n\n    AddUserWindow.showInfoPopup = true;\n    AddUserWindow.buttonsEnabled = false;\n    AddUserWindow.showSpinner = false;\n    AddUserWindow.showValidationPopup = true;\n\n    if (app) app.doRender();\n\n    return;\n  }\n\n  console.log(\n    \"AddUserWindow.handleUserVerifyResponse: isVerified = \" + data.isVerified\n  );\n\n  AddUserWindow.showValidationPopup = false;\n\n  AddUserWindow.infoMessage = AddUserWindow.userName + \" registered\";\n  AddUserWindow.showInfoPopup = true;\n  AddUserWindow.buttonsEnabled = false;\n  AddUserWindow.fieldsEnabled = true;\n  AddUserWindow.showSpinner = false;\n  AddUserWindow.isVerified = true;\n\n  if (app) app.doRender();\n}\n\nexport default AddUserWindow;\n","import React from \"react\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"../ipc/eventManager\";\nimport Navigator from \"./navigator\";\n\nlet app = null;\n\nclass AdminNavigatorWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"AdminNavigatorWindow.constructor\");\n\n    this.state = { count: 0 };\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"AdminNavigatorWindow.componentDidMount\");\n    eventManager.send(Defs.ipcShowNavBar, \"admin\");\n    this.doRender();\n  }\n\n  componentWillUnmount() {\n    console.log(\"AdminNavigatorWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  doRender() {\n    this.setState({ count: this.state.count + 1 });\n  }\n\n  render() {\n    console.log(\"AdminNavigatorWindow.render\");\n\n    return (\n      <div>\n        <Navigator />\n      </div>\n    );\n  }\n}\n\nexport default AdminNavigatorWindow;\n","import React from \"react\";\n\nimport Navigator from \"./navigator\";\n\nlet app = null;\n\nclass BlankWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"BlankWindow.constructor\");\n\n    this.state = { count: 0 };\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"BlankWindow.componentDidMount\");\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  componentWillUnmount() {\n    console.log(\"BlankWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  render() {\n    console.log(\"BlankWindow.render\");\n\n    return (\n      <div>\n        <Navigator />\n      </div>\n    );\n  }\n}\n\nexport default BlankWindow;\n","import Defs from \"iipzy-shared/src/defs\";\n\nimport { log } from \"../utils/log\";\nimport http from \"../ipc/httpService\";\n\nlet serverIPAddress = \"address not set\";\n\nasync function init(serverIPAddress_) {\n  log(\"clients.init\", \"clts\", \"info\");\n\n  serverIPAddress = serverIPAddress_;\n}\n\nfunction final() {}\n\nasync function getClients(queryString) {\n  log(\"getClients\", \"clts\", \"info\");\n  let url = \"https://\" + serverIPAddress + \"/api/client\";\n  if (queryString) url += \"?\" + queryString;\n  return await http.get(url);\n}\n\nexport default {\n  init,\n  final,\n  getClients\n};\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\n// import Defs from \"iipzy-shared/src/defs\";\n\nimport CloseButton from \"./closeButton\";\nimport Navigator from \"./navigator\";\n\nlet app = null;\n\nclass VersionTable extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"VersionTable.constructor\");\n  }\n\n  render() {\n    const versionInfo = this.props.versionInfo;\n    console.log(\"VersionTable.render: versionInfo = \" + JSON.stringify(versionInfo, null, 2));\n    let versionInfoByModuleName = new Map();\n    for (let i = 0; i < versionInfo.length; i++) {\n      versionInfoByModuleName.set(versionInfo[i].moduleName, versionInfo[i]);\n    }\n\n    console.log(\"VersionTable render: versionInfoByModuleName=\" + JSON.stringify(versionInfoByModuleName, null, 2));\n\n    return (\n      <table id=\"version-table\">\n        {versionInfoByModuleName.map(item => (\n          <tr key={item.moduleName}>\n            <td>\n              <div style={{ textAlign: \"left\", marginLeft: 20 }}>\n                {item.moduleName}\n              </div>\n            </td>\n            <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\n            <td>\n              {item.updateTime}\n            </td>\n            <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\n            <td>\n              {item.version}\n            </td>\n            <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\n            <td>\n              {item.sharedVersion}\n            </td>\n          </tr>\n        ))}\n      </table>\n    );\n  }\n}\n\nclass ClientPopup extends React.Component {\n  constructor(props) {\n    super(props);\n    app = this;\n\n    this.state = { count: 0 };\n\n    // make a copy\n    ClientPopup.client = JSON.parse(JSON.stringify(this.props.getClient()));\n\n    console.log(\n      \"ClientPopup.constructor - client: \" +\n        JSON.stringify(ClientPopup.client, null, 2)\n    );\n\n    ClientPopup.title = \"Client @\" + ClientPopup.client.clientToken;\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"ClientPopup componentDidMount\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"ClientPopup componentWillUnmount\");\n    app = null;\n  }\n\n  handleCloseClick(ev) {\n    console.log(\"...ClientPopup handleCloseClick\");\n    this.props.closePopup();\n    this.props.onClose(ev);\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  getInfoMessage() {\n    return ClientPopup.infoMessage;\n  }\n\n  handleCopyClientTokenClick(ev) {\n    console.log(\"...ClientPopup.handleCopyClientTokenClick\");\n    navigator.clipboard\n      .writeText(ClientPopup.client.clientToken)\n      .then(() => {\n        // Success!\n      })\n      .catch(err => {\n        console.log(\"Something went wrong\", err);\n      });\n  }\n\n  render() {\n    console.log(\"ClientPopup render\");\n\n    const client = ClientPopup.client;\n    const clientIsSentinel = client.clientType === \"appliance\";\n\n    return (\n      <div>\n        <Navigator />\n        <div className=\"popup\">\n          <div className=\"popup_inner_600x500\">\n            <div>\n              <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n                <p style={{ fontSize: \"140%\" }}>{client.clientName}</p>\n              </div>\n              <table align=\"center\">\n                <tbody>\n                  <tr>\n                    <td>Name:</td>\n                    <td>{client.clientName}</td>\n                  </tr>\n                  <tr>\n                    <td>Client Token:</td>\n                    <td>{client.clientToken}</td>\n                    <td>&nbsp;&nbsp;</td>\n                    <td>\n                      <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        disabled={false}\n                        size=\"small\"\n                        style={{\n                          width: \"50px\",\n                          height: \"25px\",\n                          color: \"#0000b0\"\n                        }}\n                        onClick={ev => this.handleCopyClientTokenClick(ev)}\n                      >\n                        Copy\n                      </Button>\n                    </td>\n                  </tr>\n                  {client.clientType ? (\n                    <tr>\n                      <td>Client Type:</td>\n                      <td>{client.clientType === \"pc\" ? \"pc\" : \"Sentinel\"}</td>\n                    </tr>\n                  ) : null}\n                  {client.publicIPAddress ? (\n                    <tr>\n                      <td>Public Address:</td>\n                      <td>{client.publicIPAddress.substring(7)}</td>\n                    </tr>\n                  ) : null}\n                  {client.localIPAddress ? (\n                    <tr>\n                      <td>Local Address:</td>\n                      <td>{client.localIPAddress}</td>\n                    </tr>\n                  ) : null}\n                  {client.userName ? (\n                    <tr>\n                      <td>User Name:</td>\n                      <td>{client.userName}</td>\n                    </tr>\n                  ) : null}\n                  {client.ispName ? (\n                    <tr>\n                      <td>ISP:</td>\n                      <td>{client.ispName}</td>\n                    </tr>\n                  ) : null}\n                  {/*{client.netBiosName ? (\n                    <tr>\n                      <td>NetBIOS Name:</td>\n                      <td>{client.netBiosName}</td>\n                    </tr>\n                  ) : null}*/}\n                  <tr>\n                    <td>On Line:</td>\n                    <td>{client.isOnLine ? \"Yes\" : \"No\"}</td>\n                  </tr>\n                  <tr>\n                    <td>Logged In:</td>\n                    <td>{client.isLoggedIn ? \"Yes\" : \"No\"}</td>\n                  </tr>\n                  <tr>\n                    <td>Iperf3 Count:</td>\n                    <td>{client.iperf3UseCountDaily}</td>\n                  </tr>\n                  \n                  {clientIsSentinel && (<div\n                    style={{\n                      marginLeft: 20,\n                      /*             width: \"1100px\",\n                      height: \"450px\", */\n                      border: \"1px solid #ccc\",\n                      font: \"14px Courier New\",\n                      fontWeight: \"bold\",\n                      /*     overflowX: \"scroll\", */\n                      overflowY: \"scroll\"\n                    }}\n                  >\n                    <VersionTable\n                      versionInfo={client.versionInfo}\n                      onClick={ev => this.handleClientTokenClick(ev)}\n                    />\n                  </div>)}\n                </tbody>\n              </table>\n            </div>\n            <CloseButton onClick={ev => this.handleCloseClick(ev)} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nClientPopup.client = null;\nClientPopup.title = \"Client\";\n\nexport default ClientPopup;\n","import React from \"react\";\n\n//import Defs from \"iipzy-shared/src/defs\";\n\nimport clients from \"../services/clients\";\nimport ClientPopup from \"./clientPopup\";\nimport Navigator from \"./navigator\";\n\nclass ClientList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const clients = this.props.clients;\n    return (\n      <ul>\n        {clients &&\n          clients.map(item => (\n            <li key={item.ipAddress}>\n              <div>\n                {item.ipAddress} &nbsp;\n                {item.displayName}\n              </div>\n            </li>\n          ))}\n      </ul>\n    );\n  }\n}\n\nclass ClientTable extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const clients = this.props.clients;\n    console.log(\"ClientTable render\");\n    console.log(clients);\n\n    return (\n      <table id=\"client-table\">\n        {clients &&\n          clients.map(item => (\n            <tr key={item.clientToken}>\n              <td\n                style={{ cursor: \"pointer\" }}\n                onClick={() => this.props.onClick(item.clientToken)}\n              >\n                <div style={{ textAlign: \"left\", marginLeft: 20 }}>\n                  {item.clientName}\n                </div>\n              </td>\n              <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\n              <td\n                style={{ cursor: \"pointer\" }}\n                onClick={() => this.props.onClick(item.clientToken)}\n              >\n                {item.userName}\n              </td>\n              <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\n              <td\n                style={{ cursor: \"pointer\" }}\n                onClick={() => this.props.onClick(item.clientToken)}\n              >\n                {item.publicIPAddress.substring(7)}\n              </td>\n              <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\n              <td\n                style={{ cursor: \"pointer\" }}\n                onClick={() => this.props.onClick(item.clientToken)}\n              >\n                {item.localIPAddress}\n              </td>\n              <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\n              <td\n                style={{ cursor: item.isOnLine ? \"pointer\" : \"default\" }}\n                onClick={() => this.props.onClick(item.clientToken)}\n              >\n                {!item.isOnLine ? \"off line\" : \"\"}\n              </td>\n              <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\n              <td\n                style={{ cursor: item.userId ? \"pointer\" : \"default\" }}\n                onClick={() => this.props.onClick(item.clientToken)}\n              >\n                {!item.userId ? \"not registered\" : \"\"}\n              </td>\n            </tr>\n          ))}\n      </table>\n    );\n  }\n}\n\nlet app = null;\n\nclass ClientsWindow extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"ClientsWindow.constructor\");\n    this.state = { count: 0 };\n\n    app = this;\n  }\n\n  async componentDidMount() {\n    console.log(\"ClientsWindow.componentDidMount\");\n    getClientsFromDB(\"\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"ClientsWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  handleClientTokenClick(clientToken) {\n    console.log(\"ClientsWindow.clientTokenClick = \" + clientToken);\n    ClientsWindow.clientToken = clientToken;\n    ClientsWindow.showClientPopup = true;\n    this.doRender();\n  }\n\n  handleClientCloseClick() {\n    console.log(\"ClientsWindow.handleClientCloseClick\");\n  }\n\n  hideClientPopup() {\n    ClientsWindow.showClientPopup = false;\n    this.doRender();\n  }\n\n  getClient() {\n    console.log(\"ClientsWindow.getClient\");\n    return ClientsWindow.clientByClientToken.get(ClientsWindow.clientToken);\n  }\n\n  render() {\n    console.log(\"ClientsWindow.render\");\n\n    const clients = ClientsWindow.clients;\n    const showClientPopup = ClientsWindow.showClientPopup;\n\n    return (\n      <div>\n        <Navigator />\n        <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"140%\" }}>Clients</p>\n        </div>\n        {showClientPopup ? (\n          <ClientPopup\n            getClient={() => this.getClient()}\n            onClose={ev => this.handleClientCloseClick(ev)}\n            closePopup={this.hideClientPopup.bind(this)}\n          />\n        ) : null}\n        <div\n          style={{\n            marginLeft: 20,\n            /*             width: \"1100px\",\n            height: \"450px\", */\n            border: \"1px solid #ccc\",\n            font: \"14px Courier New\",\n            fontWeight: \"bold\",\n            /*     overflowX: \"scroll\", */\n            overflowY: \"scroll\"\n          }}\n        >\n          <ClientTable\n            clients={clients}\n            onClick={ev => this.handleClientTokenClick(ev)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nClientsWindow.clients = null;\nClientsWindow.clientByClientToken = new Map();\nClientsWindow.clientToken = \"\";\nClientsWindow.infoMessage = \"\";\nClientsWindow.showClientPopup = false;\n\nasync function getClientsFromDB(queryString) {\n  const { data, status } = await clients.getClients(queryString);\n  console.log(\"ClientsWindow.getClientsFromDB (response): status = \" + status);\n\n  if (data.__hadError__) {\n    console.log(\n      \"ClientsWindow.getClientsFromDB: errorMessage = \" +\n        data.__hadError__.errorMessage +\n        \", statusCode = \" +\n        data.__hadError__.statusCode\n    );\n\n    ClientsWindow.infoMessage = data.__hadError__.errorMessage;\n\n    if (app) app.doRender();\n\n    return;\n  }\n\n  ClientsWindow.clients = data;\n  ClientsWindow.clientByClientToken = new Map();\n  for (let i = 0; i < ClientsWindow.clients.length; i++) {\n    const client = ClientsWindow.clients[i];\n    ClientsWindow.clientByClientToken.set(client.clientToken, client);\n  }\n\n  if (app) app.doRender();\n}\n\nexport default ClientsWindow;\n","import React from \"react\";\n\nimport Navigator from \"./navigator\";\n\nlet app = null;\n\nclass DownloadWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"DownloadWindow.constructor\");\n\n    this.state = { count: 0 };\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"DownloadWindow.componentDidMount\");\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  componentWillUnmount() {\n    console.log(\"DownloadWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  /*\n              <br />The NanoPi R4S can be found at{\" \"}\n            <a href=\"https://www.amazon.com/FriendlyElec-OpenWRT-Dual-Gbps-Ethernet-Gateway/dp/B08PV4228F/ref=sxts_rp_s_a_1_0?content-id=amzn1.sym.3432eb1a-1558-4445-9430-9bb3e7f7b9b7%3Aamzn1.sym.3432eb1a-1558-4445-9430-9bb3e7f7b9b7&crid=30OJGJPB4KYEQ&cv_ct_cx=nanopi%2Br4s&keywords=nanopi%2Br4s&pd_rd_i=B08PV4228F&pd_rd_r=4f14af91-d9b7-4809-a181-4382d2cc190e&pd_rd_w=z6Fcw&pd_rd_wg=4uEXm&pf_rd_p=3432eb1a-1558-4445-9430-9bb3e7f7b9b7&pf_rd_r=SNZJW1ZHJW7CP6K9EHRV&qid=1683063967&sbo=RZvfv%2F%2FHxDF%2BO5021pAnSA%3D%3D&sprefix=nanopi%2Br4s%2Caps%2C135&sr=1-1-5985efba-8948-4f09-9122-d605505c9d1e&ufe=app_do%3Aamzn1.fos.18ed3cb5-28d5-4975-8bc7-93deae8f9840&th=1\">\n              here\n            </a>\n            <br />\n            <br />You'll also need a power supply.  A good choice is{\" \"}\n            <a href=\"https://www.amazon.com/CanaKit-Raspberry-Power-Supply-USB-C/dp/B07TYQRXTK/ref=pd_bxgy_vft_none_sccl_1/145-5946572-5530057?pd_rd_w=Hci82&content-id=amzn1.sym.26a5c67f-1a30-486b-bb90-b523ad38d5a0&pf_rd_p=26a5c67f-1a30-486b-bb90-b523ad38d5a0&pf_rd_r=HJDVY0011YS55XSD4DT3&pd_rd_wg=i0zEH&pd_rd_r=ddd24b26-2410-4359-b5ba-7dc5b2ccb416&pd_rd_i=B07TYQRXTK&psc=1\">\n              here\n            </a>\n            <br />\n            <br />A good choice for a Micro SD Card is{\" \"}\n            <a href=\"https://www.amazon.com/Transcend-MicroSDHC-Memory-Adapter-TS8GUSDU1/dp/B00BDS426G/ref=sr_1_1?crid=20GSBJO9DI9GY&keywords=transcend+8gb+micro+sd+card&qid=1683064793&sprefix=transcend+8gb+micro+sd+card%2Cspecialty-aps%2C122&sr=8-1\">\n              here\n            </a>\n            <br />\n            <br />\n            Download the Sentinel NanoPi R4s image{\" \"}\n            <a href=\"https://iipzy.net:8001/api/clientupdate//bacec2a221264e32bdc3aa886e80a1b1\">\n              here\n            </a>\n            <br />\n  */\n\n  render() {\n    console.log(\"DownloadWindow.render\");\n\n    return (\n      <div>\n        <Navigator />\n        <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"140%\" }}>\n            Download iipzy Sentinel Nano Pi R4S Image\n          </p>\n        </div>\n        <div style={{ marginLeft: 20, textAlign: \"left\", fontWeight: \"normal\" }}>\n          <p>\n            You'll need a NanoPi R4S with 4GB (or more) of memory and\n            an 8 GB (or larger) Micro SD Memory Card. <br />\n            <br />The NanoPi R4S can be found at{\" \"}\n            <a href=\"https://www.amazon.com/FriendlyElec-OpenWRT-Dual-Gbps-Ethernet-Gateway/dp/B08PV4228F/ref=sxts_rp_s_a_1_0?content-id=amzn1.sym.3432eb1a-1558-4445-9430-9bb3e7f7b9b7%3Aamzn1.sym.3432eb1a-1558-4445-9430-9bb3e7f7b9b7&crid=30OJGJPB4KYEQ&cv_ct_cx=nanopi%2Br4s&keywords=nanopi%2Br4s&pd_rd_i=B08PV4228F&pd_rd_r=4f14af91-d9b7-4809-a181-4382d2cc190e&pd_rd_w=z6Fcw&pd_rd_wg=4uEXm&pf_rd_p=3432eb1a-1558-4445-9430-9bb3e7f7b9b7&pf_rd_r=SNZJW1ZHJW7CP6K9EHRV&qid=1683063967&sbo=RZvfv%2F%2FHxDF%2BO5021pAnSA%3D%3D&sprefix=nanopi%2Br4s%2Caps%2C135&sr=1-1-5985efba-8948-4f09-9122-d605505c9d1e&ufe=app_do%3Aamzn1.fos.18ed3cb5-28d5-4975-8bc7-93deae8f9840&th=1\">\n              here\n            </a>\n            <br />\n            <br />You'll also need a power supply.  A good choice is{\" \"}\n            <a href=\"https://www.amazon.com/CanaKit-Raspberry-Power-Supply-USB-C/dp/B07TYQRXTK/ref=pd_bxgy_vft_none_sccl_1/145-5946572-5530057?pd_rd_w=Hci82&content-id=amzn1.sym.26a5c67f-1a30-486b-bb90-b523ad38d5a0&pf_rd_p=26a5c67f-1a30-486b-bb90-b523ad38d5a0&pf_rd_r=HJDVY0011YS55XSD4DT3&pd_rd_wg=i0zEH&pd_rd_r=ddd24b26-2410-4359-b5ba-7dc5b2ccb416&pd_rd_i=B07TYQRXTK&psc=1\">\n              here\n            </a>\n            <br />\n            <br />A good choice for a Micro SD Card is{\" \"}\n            <a href=\"https://www.amazon.com/Transcend-MicroSDHC-Memory-Adapter-TS8GUSDU1/dp/B00BDS426G/ref=sr_1_1?crid=20GSBJO9DI9GY&keywords=transcend+8gb+micro+sd+card&qid=1683064793&sprefix=transcend+8gb+micro+sd+card%2Cspecialty-aps%2C122&sr=8-1\">\n              here\n            </a>\n            <br />\n            <br />\n            Download the Sentinel NanoPi R4s image{\" \"}\n            <a href=\"https://iipzy.net:8001/api/clientupdate//bacec2a221264e32bdc3aa886e80a1b1\">\n              here\n            </a>\n            <br />\n            <br />\n            I recommend you use balenaEtcher to burn the Sentinel NanoPi R4S\n            image to the Micro SD Card.\n            <br />\n            You can find balanaEtcher{\" \"}\n            <a href=\"https://www.balena.io/etcher/\">here</a>\n            <br />\n            <br />\n            Install the Micro SD Card with the image into the NanoPi R4S.\n            &nbsp;&nbsp; Connect the NanoPi to the power\n            supply.&nbsp;&nbsp;The red PWR led, that can be seen from the top,\n            will light if power is on.&nbsp;&nbsp;Connect the Nano Pi to\n            your local network.&nbsp;&nbsp;The iipzy Sentinel will then\n            connect to the iipzy service.&nbsp;&nbsp;Once you have registered\n            and logged in, you can connect to the iipzy Sentinel by\n            clicking on <strong>Sentinel</strong> above.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DownloadWindow;\n","import React from \"react\";\n//import Joi from \"joi-browser\";\n//import Form from \"iipzy-client-shared/src/common/form\";\nimport Button from \"@material-ui/core/Button\";\n\nimport CloseButton from \"./closeButton\";\nimport Input from \"./input\";\nimport Navigator from \"./navigator\";\n\nlet app = null;\n\nclass PasswordPopup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"PasswordPopup.constructor\");\n\n    this.state = { password: \"\" };\n\n    app = this;\n  }\n\n  getPassword() {\n    return this.state.password;\n  }\n\n  handleChange(ev) {\n    const name = ev.target.name;\n    const value = ev.target.value;\n\n    console.log(\"PasswordPopup.name=\" + name + \", value=\" + this.state[name]);\n\n    // const errors = { ...this.state.errors };\n    // const errorMessage = this.validateProperty(input);\n    // if (errorMessage) errors[input.name] = errorMessage;\n    // else delete errors[input.name];\n\n    // const data = { ...this.state.data };\n    // data[input.name] = input.value;\n    // this.setState({ data, errors });\n\n    this.setState({ [name]: value });\n  }\n\n  handleCloseClick(ev) {\n    console.log(\"PasswordPopup.handleCloseClick\");\n\n    this.props.onSubmit(\"\");\n    this.props.closePopup();\n    // NB: I know this is a no-no.\n    this.state.password = \"\";\n  }\n\n  async handleSubmitClick(ev) {\n    // console.log(\"...Popup handleSubmitClick\");\n\n    this.props.onSubmit(this.state.password);\n    this.props.closePopup();\n    // NB: I know this is a no-no.\n    this.state.password = \"\";\n  }\n\n  isValidInput() {\n    //?? TODO\n    return true;\n  }\n\n  render() {\n    console.log(\"PasswordPopup render\");\n\n    return (\n      <div>\n        <Navigator />\n        <div className=\"popup\">\n          <div className=\"popup_inner\">\n            <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n              <p style={{ fontSize: \"140%\" }}>Enter Password</p>\n            </div>\n            <form>\n              <Input\n                type=\"password\"\n                autofocus={true}\n                disabled={false}\n                name=\"password\"\n                value={this.getPassword()}\n                label=\"Password\"\n                onChange={(ev) => this.handleChange(ev)}\n                error=\"\"\n                porportionalWidth={true}\n              />\n              <h1>{this.props.text}</h1>\n              <div style={{ textAlign: \"center\" }}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  disabled={!this.isValidInput()}\n                  style={{\n                    width: \"130px\",\n                    color: \"#0000b0\",\n                  }}\n                  /*  autoFocus */\n                  onClick={(ev) => this.handleSubmitClick(ev)}\n                >\n                  Submit\n                </Button>\n              </div>\n              <CloseButton onClick={(ev) => this.handleCloseClick(ev)} />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PasswordPopup;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"../ipc/eventManager\";\nimport user from \"../services/user\";\nimport InfoPopup from \"./infoPopup\";\nimport Navigator from \"./navigator\";\nimport PasswordPopup from \"./passwordPopup\";\nimport SpinnerPopup from \"./spinnerPopup\";\nimport UserForm from \"./userForm\";\n\nlet app = null;\n\nclass EditUserWindow extends UserForm {\n  constructor(props) {\n    super(props);\n\n    console.log(\"EditUserWindow.constructor\");\n\n    this.windowTitle = \"Update User @ iipzy.com\";\n\n    this.userId = 0;\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"EditUserWindow.componentDidMount\");\n    EditUserWindow.buttonsEnabled = false;\n    EditUserWindow.fieldsEnabled = true;\n    EditUserWindow.showPasswordPopup = true;\n    EditUserWindow.passwordValidated = false;\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  componentWillUnmount() {\n    console.log(\"EditUserWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  getUserData() {\n    const userData = {\n      userName: EditUserWindow.userName,\n      emailAddress: EditUserWindow.emailAddress,\n      mobilePhoneNo: EditUserWindow.mobilePhoneNo,\n      password: EditUserWindow.password,\n      password2: EditUserWindow.password2,\n    };\n    console.log(\"EditUserWindow.getUserData: \" + JSON.stringify(userData));\n    console.log(\n      \"EditUserWindow.getUserData: emailAddress = \" + userData.emailAddress\n    );\n    return userData;\n  }\n\n  setUserData(userData) {\n    console.log(\n      \"EditUserWindow.setUserData: emailAddress = \" + userData.emailAddress\n    );\n    EditUserWindow.userName = userData.userName;\n    EditUserWindow.emailAddress = userData.emailAddress;\n    EditUserWindow.mobilePhoneNo = userData.mobilePhoneNo;\n    EditUserWindow.password = userData.password;\n    EditUserWindow.password2 = userData.password2;\n  }\n\n  getButtonsEnabled() {\n    console.log(\n      \"EditUserWindow.getButtonsEnabled: \" + EditUserWindow.buttonsEnabled\n    );\n    return EditUserWindow.buttonsEnabled;\n  }\n\n  setButtonsEnabled(buttonsEnabled) {\n    EditUserWindow.buttonsEnabled = buttonsEnabled;\n    console.log(\n      \"EditUserWindow.setButtonsEnabled: \" + EditUserWindow.buttonsEnabled\n    );\n  }\n\n  getFieldsEnabled() {\n    console.log(\n      \"EditUserWindow.getFieldsEnabled: \" + EditUserWindow.fieldsEnabled\n    );\n    return EditUserWindow.fieldsEnabled;\n  }\n\n  setFieldsEnabled(fieldsEnabled) {\n    EditUserWindow.fieldsEnabled = fieldsEnabled;\n    console.log(\n      \"EditUserWindow.setFieldsEnabled: \" + EditUserWindow.fieldsEnabled\n    );\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  async handleUpdateClick(userData) {\n    console.log(\"EditUserWindow.handleUpdateClick\");\n    console.log(\"userName=\" + userData.userName);\n    console.log(\"mobilePhoneNo=\" + userData.mobilePhoneNo);\n    console.log(\"emailAddress=\" + userData.emailAddress);\n\n    updateUser(userData);\n  }\n\n  async handleDeleteClick(userData) {\n    console.log(\"EditUserWindow handleDeleteClick\");\n    deleteUser(userData);\n  }\n\n  handleLoginClick(ev) {\n    console.log(\"...handleLoginClick\");\n    eventManager.send(Defs.ipcLinkTo, Defs.urlLogin);\n  }\n\n  getInfoMessage() {\n    return EditUserWindow.infoMessage;\n  }\n\n  handleInfoPopupClick() {\n    console.log(\"...EditUserWindowhandleInfoPopupClick\");\n  }\n\n  hideInfoPopup() {\n    EditUserWindow.showInfoPopup = false;\n    EditUserWindow.buttonsEnabled = true;\n    EditUserWindow.fieldsEnabled = true;\n    this.doRender();\n  }\n\n  handlePasswordPopupClick(password) {\n    if (password === EditUserWindow.password) {\n      console.log(\"...handlePasswordPopupClick: password match\");\n      EditUserWindow.passwordValidated = true;\n      EditUserWindow.passwordSupplied = true;\n    } else if (!password) {\n      console.log(\"...handlePasswordPopupClick: password empty\");\n      EditUserWindow.passwordValidated = false;\n      EditUserWindow.passwordSupplied = false;\n    }\n  }\n\n  hidePasswordPopup() {\n    console.log(\"...hidePasswordPopup\");\n    if (EditUserWindow.passwordValidated) {\n      EditUserWindow.showPasswordPopup = false;\n      EditUserWindow.buttonsEnabled = true;\n    } else if (!EditUserWindow.passwordSupplied) {\n      EditUserWindow.showPasswordPopup = false;\n      EditUserWindow.buttonsEnabled = false;\n    }\n    EditUserWindow.fieldsEnabled = true;\n    this.doRender();\n  }\n\n  render() {\n    const isLoggedIn = EditUserWindow.isLoggedIn;\n    console.log(\"EditUserWindow.render: isLoggedIn = \" + isLoggedIn);\n\n    const passwordSupplied = EditUserWindow.passwordSupplied;\n    const showInfoPopup = EditUserWindow.showInfoPopup;\n    const showPasswordPopup = EditUserWindow.showPasswordPopup;\n    const showSpinner = EditUserWindow.showSpinner;\n\n    return (\n      <div>\n        {isLoggedIn && showPasswordPopup && (\n          <PasswordPopup\n            onSubmit={(ev) => this.handlePasswordPopupClick(ev)}\n            closePopup={this.hidePasswordPopup.bind(this)}\n          />\n        )}\n        {showInfoPopup && (\n          <InfoPopup\n            title={\"Edit User\"}\n            getInfoMessage={() => this.getInfoMessage()}\n            onSubmit={(ev) => this.handleInfoPopupClick(ev)}\n            closePopup={this.hideInfoPopup.bind(this)}\n          />\n        )}\n        {showSpinner && <SpinnerPopup />}\n        {!isLoggedIn && !showInfoPopup && (\n          <div>\n            <Navigator />\n            <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n              <p style={{ fontSize: \"140%\" }}>{this.windowTitle}</p>\n            </div>\n            <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n              <p style={{ fontSize: \"140%\" }}>\n                You must be logged in to edit your user settings\n              </p>\n              <Button\n                type=\"button\"\n                variant=\"contained\"\n                style={{\n                  width: \"130px\",\n                  color: \"#0000b0\",\n                }}\n                autoFocus\n                onClick={(ev) => this.handleLoginClick(ev)}\n              >\n                Login\n              </Button>\n            </div>\n          </div>\n        )}\n        {isLoggedIn && !showPasswordPopup && passwordSupplied && (\n          <UserForm\n            title={this.windowTitle}\n            getUserData={this.getUserData}\n            setUserData={this.setUserData}\n            getButtonsEnabled={this.getButtonsEnabled}\n            setButtonsEnabled={this.setButtonsEnabled}\n            getFieldsEnabled={this.getFieldsEnabled}\n            setFieldsEnabled={this.setFieldsEnabled}\n            userNameDisabled={true}\n            button1Label={\"Update\"}\n            onSubmit={(ev) => this.handleUpdateClick(ev)}\n            button2Label={\"Delete\"}\n            onSubmit2={(ev) => this.handleDeleteClick(ev)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nEditUserWindow.userName = \"\";\nEditUserWindow.emailAddress = \"\";\nEditUserWindow.mobilePhoneNo = \"\";\nEditUserWindow.password = \"\";\nEditUserWindow.password2 = \"\";\n\nEditUserWindow.userId = 0;\nEditUserWindow.isAdmin = false;\nEditUserWindow.isLoggedIn = false;\nEditUserWindow.authToken = \"\";\n\nEditUserWindow.infoMessage = \"\";\nEditUserWindow.showInfoPopup = false;\nEditUserWindow.showPasswordPopup = true;\nEditUserWindow.showSpinner = false;\n\nEditUserWindow.passwordSupplied = false;\nEditUserWindow.passwordValidated = false;\nEditUserWindow.buttonsEnabled = false;\nEditUserWindow.fieldsEnabled = true;\n\nasync function deleteUser(userData) {\n  EditUserWindow.showSpinner = true;\n  if (app) app.doRender();\n\n  const { data, status } = await user.deleteUser(userData);\n  if (data.__hadError__) {\n    console.log(\n      \"EditUserWindow.deleteUser: errorMessage = \" +\n        data.__hadError__.errorMessage +\n        \", statusCode = \" +\n        data.__hadError__.statusCode\n    );\n\n    EditUserWindow.buttonsEnabled = false;\n    EditUserWindow.fieldsEnabled = true;\n    EditUserWindow.infoMessage = data.__hadError__.errorMessage;\n    EditUserWindow.showInfoPopup = true;\n    EditUserWindow.showSpinner = true;\n\n    if (app) app.doRender();\n\n    return;\n  }\n\n  eventManager.send(Defs.ipcSubmitLogout, {\n    userName: EditUserWindow.userName,\n    authToken: EditUserWindow.authToken,\n  });\n\n  EditUserWindow.buttonsEnabled = false;\n  EditUserWindow.fieldsEnabled = true;\n  EditUserWindow.infoMessage = EditUserWindow.userName + \" deleted\";\n  EditUserWindow.showInfoPopup = true;\n  EditUserWindow.showSpinner = false;\n\n  EditUserWindow.userId = 0;\n  EditUserWindow.userName = \"\";\n  EditUserWindow.emailAddress = \"\";\n  EditUserWindow.mobilePhoneNo = \"\";\n  EditUserWindow.password = \"\";\n  EditUserWindow.password2 = \"\";\n  EditUserWindow.isAdmin = false;\n  EditUserWindow.isLoggedIn = false;\n  EditUserWindow.authToken = \"\";\n\n  if (app) app.doRender();\n}\n\nasync function updateUser(userData) {\n  EditUserWindow.showSpinner = true;\n  if (app) app.doRender();\n\n  const { data, status } = await user.updateUser(userData);\n  if (data.__hadError__) {\n    console.log(\n      \"EditUserWindow.updateUser: errorMessage = \" +\n        data.__hadError__.errorMessage +\n        \", statusCode = \" +\n        data.__hadError__.statusCode\n    );\n\n    EditUserWindow.buttonsEnabled = false;\n    EditUserWindow.fieldsEnabled = true;\n    EditUserWindow.infoMessage = data.__hadError__.errorMessage;\n    EditUserWindow.showInfoPopup = true;\n    EditUserWindow.showSpinner = false;\n\n    if (app) app.doRender();\n\n    return;\n  }\n\n  EditUserWindow.mobilePhoneNo = userData.mobilePhoneNo;\n  EditUserWindow.emailAddress = userData.emailAddress;\n  EditUserWindow.password = userData.password;\n\n  EditUserWindow.buttonsEnabled = false;\n  EditUserWindow.fieldsEnabled = true;\n  EditUserWindow.infoMessage = EditUserWindow.userName + \" updated\";\n  EditUserWindow.showInfoPopup = true;\n  EditUserWindow.showSpinner = false;\n\n  if (app) app.doRender();\n}\n\nconst handleLoginStatus = async (event, data) => {\n  const { userName, authToken, password, loginStatus } = data;\n  console.log(\n    \"EditUserWindow.handleLoginStatus: userName = \" +\n      userName +\n      \", loginStatus = \" +\n      loginStatus\n  );\n  EditUserWindow.userName = userName;\n  // NB: password comes from local storage, not from server DB.\n  EditUserWindow.password = password;\n  EditUserWindow.password2 = password;\n  EditUserWindow.isLoggedIn = loginStatus === Defs.loginStatusLoggedIn;\n  EditUserWindow.authToken = authToken;\n  if (EditUserWindow.isLoggedIn && !EditUserWindow.emailAddress) {\n    await getUser();\n  }\n};\n\nasync function getUser() {\n  const { data, status } = await user.getUser();\n  console.log(\n    \"EditUserWindow.handleUserGetResponse: emailAddress = \" +\n      data.emailAddress +\n      \", mph = \" +\n      data.mobilePhoneNo\n  );\n\n  EditUserWindow.userId = data.userId;\n  EditUserWindow.emailAddress = data.emailAddress;\n  EditUserWindow.mobilePhoneNo = data.mobilePhoneNo;\n  EditUserWindow.isAdmin = data.isAdmin;\n  if (app) app.doRender();\n}\n\neventManager.on(Defs.ipcLoginStatus, handleLoginStatus);\n\nexport default EditUserWindow;\n","import React from \"react\";\nimport Joi from \"joi\";\nimport Button from \"@material-ui/core/Button\";\n//import { Tooltip } from \"@material-ui/core/Tooltip\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"../ipc/eventManager\";\nimport InfoPopup from \"./infoPopup\";\nimport Input from \"./input\";\nimport Navigator from \"./navigator\";\nimport SpinnerPopup from \"./spinnerPopup\";\nimport user from \"../services/user\";\n\nlet app = null;\n\nclass ForgotPasswordWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"ForgotPasswordWindow.constructor\");\n\n    this.state = {\n      update: false,\n      errors: {},\n      count: 0,\n    };\n\n    this.data = {\n      userName: null,\n      passwordResetCode: null,\n      password: null,\n      password2: null,\n    };\n\n    app = this;\n\n    this.schema = {\n      userName: Joi.string().required().label(\"User Name\").min(5).max(50),\n      passwordResetCode: Joi.string()\n        .required()\n        .label(\"Password Reset Code\")\n        .min(6)\n        .max(6),\n      password: Joi.string().required().label(\"Password\").min(5).max(50),\n      password2: Joi.string().required().label(\"Password Again\").min(5).max(50),\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"forgotPasswordWindow componentDidMount\");\n    this.data.userName = ForgotPasswordWindow.userName;\n    this.data.passwordResetCode = ForgotPasswordWindow.passwordResetCode;\n    this.data.password = ForgotPasswordWindow.password;\n    this.data.password2 = ForgotPasswordWindow.password2;\n\n    this.doRender();\n  }\n\n  componentWillUnmount() {\n    console.log(\"forgotPasswordWindow componentWillUnmount\");\n    ForgotPasswordWindow.userName = this.data.userName;\n    ForgotPasswordWindow.passwordResetCode = this.data.passwordResetCode;\n    ForgotPasswordWindow.password = this.data.password;\n    ForgotPasswordWindow.password2 = this.data.password2;\n\n    app = null;\n  }\n\n  validateProperty(name, value) {\n    console.log(\"...validateProperty: name=\" + name + \", value = \" + value);\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n\n    console.log(\"...validateProperty - had error = \" + error);\n\n    return error ? error.details[0].message : null;\n  }\n\n  validate() {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.data, this.schema, options);\n    if (!error) return null;\n\n    console.log(\"...validate - had error\");\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  }\n\n  handleChange(ev) {\n    const name = ev.target.name;\n    const value = ev.target.value;\n    console.log(\"name=\" + name + \", value=\" + this.data[name]);\n    const errors = this.state.errors;\n    const errorMessage = this.validateProperty(name, value);\n    if (errorMessage) errors[name] = errorMessage;\n    else delete errors[name];\n    const data = this.data;\n    data[name] = value;\n    this.setState({ data, errors });\n  }\n\n  handleClearClck(ev) {\n    ForgotPasswordWindow.userName = \"\";\n    ForgotPasswordWindow.passwordResetCode = \"\";\n    ForgotPasswordWindow.password = \"\";\n    ForgotPasswordWindow.password2 = \"\";\n\n    ForgotPasswordWindow.showGetCodeResponsePopup = false;\n    ForgotPasswordWindow.getCodeResponseMessage = \"\";\n\n    ForgotPasswordWindow.showSubmitResponsePopup = false;\n    ForgotPasswordWindow.getSubmitResponseMessage = \"\";\n\n    ForgotPasswordWindow.inputsEnabled = true;\n    ForgotPasswordWindow.buttonsEnabled = true;\n    ForgotPasswordWindow.submitButtonEnabled = false;\n\n    ForgotPasswordWindow.codeSent = false;\n\n    this.componentDidMount();\n  }\n\n  handleGetCodeClick(ev) {\n    console.log(\"...ForgotPasswordWindow handleGetCodeClick\");\n    console.log(\"userName=\" + this.data.userName);\n    // ev.preventDefault();\n    // const errors = this.validate();\n    // if (errors)\n    //   console.log(\"...handleGetCodeClick: errors = \" + Object.values(errors));\n    // this.setState({ errors: errors || {} });\n    // if (errors) return;\n    // this.props.setButtonsEnabled(false);\n\n    sendPasswordResetCode({ userName: this.data.userName });\n  }\n\n  handlePassword2Change(ev) {\n    const name = ev.target.name;\n    const value = ev.target.value;\n\n    console.log(\"name=\" + name + \", value=\" + this.data[name]);\n\n    if (this.data.password !== value) {\n      const errors = this.state.errors;\n      errors[name] = \"passwords don't match\";\n\n      const data = this.data;\n      data[name] = value;\n\n      this.setState({ data, errors });\n\n      return;\n    }\n\n    return this.handleChange(ev);\n  }\n\n  handleSubmitClick(ev) {\n    console.log(\"...ForgotPasswordWindow handleSubmitClick\");\n    console.log(\"userName=\" + this.data.userName);\n    console.log(\"masswordResetCode=\" + this.data.passwordResetCode);\n\n    ev.preventDefault();\n    const errors = this.validate();\n    if (errors)\n      console.log(\"...handleSubmitClick: errors = \" + Object.values(errors));\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    updatePassword({\n      userName: this.data.userName,\n      passwordResetCode: this.data.passwordResetCode,\n      password: this.data.password,\n    });\n  }\n\n  isValidInput() {\n    return (\n      this.isValidUserName() &&\n      this.isValidPasswordResetCode() &&\n      this.isValidPassword() &&\n      this.data.password === this.data.password2\n    );\n  }\n\n  isValidUserName() {\n    return this.data.userName != null && this.data.userName.length > 5;\n  }\n\n  codeSent() {\n    return ForgotPasswordWindow.codeSent;\n  }\n\n  isValidPasswordResetCode() {\n    return (\n      this.data.passwordResetCode != null &&\n      this.data.passwordResetCode.length === 6\n    );\n  }\n\n  isValidPassword() {\n    return this.data.password != null && this.data.password.length > 5;\n  }\n\n  renderInput(\n    name,\n    label,\n    type = \"text\",\n    autofocus = false,\n    disabled = false,\n    onChange = null\n  ) {\n    const { errors } = this.state;\n    const data = this.data;\n\n    console.log(\n      \"ForgotPasswordWindow.renderInput: name=\" + name + \", value=\" + data[name]\n    );\n\n    const onChange_ = this.handleChange;\n\n    return (\n      <Input\n        type={type}\n        name={name}\n        label={label}\n        value={data[name]}\n        error={errors[name]}\n        autofocus={autofocus}\n        disabled={disabled}\n        onChange={onChange}\n      />\n    );\n  }\n\n  getResponseMessage() {\n    return ForgotPasswordWindow.responseMessage;\n  }\n\n  handleResponsePopupClick() {\n    console.log(\"...ForgotPasswordWindowhandleInfoPopupClick\");\n  }\n\n  hideResponsePopup() {\n    ForgotPasswordWindow.showResponsePopup = false;\n    ForgotPasswordWindow.buttonsEnabled = true;\n    this.doRender();\n  }\n\n  doRender(name, value) {\n    if (name && value) this.data[name] = value;\n\n    this.setState({ count: this.state.count + 1 });\n  }\n\n  render() {\n    console.log(\"forgotPasswordWindow.render\");\n\n    const inputsEnabled = ForgotPasswordWindow.inputsEnabled;\n    const buttonsEnabled = ForgotPasswordWindow.buttonsEnabled;\n    const showResponsePopup = ForgotPasswordWindow.showResponsePopup;\n    const showSpinner = ForgotPasswordWindow.showSpinner;\n    const submitButtonEnabled = ForgotPasswordWindow.submitButtonEnabled;\n\n    return (\n      <div>\n        <Navigator />\n        {showSpinner && <SpinnerPopup />}\n        {showResponsePopup && (\n          <InfoPopup\n            title={\"Forgot Password\"}\n            getInfoMessage={() => this.getResponseMessage()}\n            onSubmit={(ev) => this.handleResponsePopupClick(ev)}\n            closePopup={this.hideResponsePopup.bind(this)}\n          />\n        )}\n        <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"140%\" }}>Forgot Password</p>\n        </div>\n        <div style={{ textAlign: \"left\", fontWeight: \"normal\" }}>\n          <p>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1. Enter your User\n            Name then click the \"Get Code\" button below.\n            <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2. A Password\n            Reset Code will be sent to the user's email address.\n            <br />\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3. Enter the code\n            and the new password (twice), then click the \"Submit\" button.\n          </p>\n        </div>\n        <form>\n          {this.renderInput(\n            \"userName\",\n            \"User Name\",\n            \"text\",\n            true,\n            !inputsEnabled || this.codeSent(),\n            (ev) => this.handleChange(ev)\n          )}\n          {this.renderInput(\n            \"passwordResetCode\",\n            \"Password Reset Code\",\n            \"text\",\n            false,\n            !inputsEnabled || !this.isValidUserName() || !this.codeSent(),\n            (ev) => this.handleChange(ev)\n          )}\n          {this.renderInput(\n            \"password\",\n            \"Password\",\n            \"password\",\n            false,\n            !inputsEnabled || !this.isValidPasswordResetCode(),\n            (ev) => this.handleChange(ev)\n          )}\n          {this.renderInput(\n            \"password2\",\n            \"Password Again\",\n            \"password\",\n            false,\n            !inputsEnabled || !this.isValidPassword(),\n            (ev) => this.handlePassword2Change(ev)\n          )}\n          <div>&nbsp;</div>\n          <div style={{ marginLeft: \"45px\" }}>\n            <table align=\"left\">\n              <tbody>\n                <tr>\n                  <td>\n                    <div style={{ textAlign: \"center\" }}>\n                      <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        disabled={\n                          !buttonsEnabled ||\n                          !this.isValidUserName() ||\n                          this.isValidPasswordResetCode()\n                        }\n                        style={{\n                          width: \"130px\",\n                          color: \"#0000b0\",\n                        }}\n                        /* autoFocus */\n                        onClick={(ev) => this.handleGetCodeClick(ev)}\n                      >\n                        Get Code\n                      </Button>\n                    </div>\n                  </td>\n                  <td>\n                    <div\n                      style={{\n                        textAlign: \"center\",\n                        marginLeft: 40,\n                        marginRight: 40,\n                      }}\n                    >\n                      <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        disabled={\n                          !buttonsEnabled ||\n                          !this.isValidInput() ||\n                          !submitButtonEnabled\n                        }\n                        style={{\n                          width: \"130px\",\n                          color: \"#0000b0\",\n                        }}\n                        /* autoFocus */\n                        onClick={(ev) => this.handleSubmitClick(ev)}\n                      >\n                        Submit\n                      </Button>\n                    </div>\n                  </td>\n                  <td>\n                    <div style={{ textAlign: \"center\" }}>\n                      <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        disabled={!buttonsEnabled}\n                        style={{\n                          width: \"130px\",\n                          color: \"#0000b0\",\n                        }}\n                        /* autoFocus */\n                        onClick={(ev) => this.handleClearClck(ev)}\n                      >\n                        Clear\n                      </Button>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nForgotPasswordWindow.userName = \"\";\nForgotPasswordWindow.passwordResetCode = \"\";\nForgotPasswordWindow.password = \"\";\nForgotPasswordWindow.password2 = \"\";\n\nForgotPasswordWindow.showResponsePopup = false;\nForgotPasswordWindow.responseMessage = \"\";\n\nForgotPasswordWindow.buttonsEnabled = true;\nForgotPasswordWindow.inputsEnabled = true;\nForgotPasswordWindow.submitButtonEnabled = false;\nForgotPasswordWindow.showSpinner = false;\n\nForgotPasswordWindow.codeSent = false;\n\nasync function sendPasswordResetCode(params) {\n  ForgotPasswordWindow.buttonsEnabled = false;\n  ForgotPasswordWindow.showSpinner = true;\n  if (app) app.doRender();\n\n  const { data, status } = await user.sendPasswordResetCode(params);\n  if (data.__hadError__) {\n    console.log(\n      \"ForgotPasswordWindow.getResetCode: errorMessage = \" +\n        data.__hadError__.errorMessage +\n        \", statusCode = \" +\n        data.__hadError__.statusCode\n    );\n\n    ForgotPasswordWindow.responseMessage = data.__hadError__.errorMessage;\n  } else {\n    ForgotPasswordWindow.responseMessage =\n      \"Password Reset Code has been sent to user \" +\n      ForgotPasswordWindow.userName;\n    ForgotPasswordWindow.codeSent = true;\n    ForgotPasswordWindow.submitButtonEnabled = true;\n  }\n\n  ForgotPasswordWindow.buttonsEnabled = true;\n  ForgotPasswordWindow.showResponsePopup = true;\n  ForgotPasswordWindow.showSpinner = false;\n\n  if (app) app.doRender();\n}\n\nasync function updatePassword(params) {\n  ForgotPasswordWindow.buttonsEnabled = false;\n  ForgotPasswordWindow.showSpinner = true;\n  if (app) app.doRender();\n\n  const { data, status } = await user.newPassword(params);\n  if (data.__hadError__) {\n    console.log(\n      \"ForgotPasswordWindow.updatePassword: errorMessage = \" +\n        data.__hadError__.errorMessage +\n        \", statusCode = \" +\n        data.__hadError__.statusCode\n    );\n\n    ForgotPasswordWindow.responseMessage = data.__hadError__.errorMessage;\n  } else {\n    ForgotPasswordWindow.responseMessage =\n      \"Password has been changed for user \" + ForgotPasswordWindow.userName;\n    ForgotPasswordWindow.inputsEnabled = false;\n    ForgotPasswordWindow.submitButtonEnabled = false;\n  }\n\n  ForgotPasswordWindow.buttonsEnabled = true;\n  ForgotPasswordWindow.showResponsePopup = true;\n  ForgotPasswordWindow.showSpinner = false;\n\n  if (app) app.doRender();\n}\n\nconst handleLoginStatus = (event, data) => {\n  const { userName } = data;\n\n  console.log(\"ForgotPasswordWindow.handleLoginStatus: userName \" + userName);\n\n  ForgotPasswordWindow.userName = userName;\n\n  if (app != null) app.doRender(\"userName\", userName);\n};\n\neventManager.on(Defs.ipcLoginStatus, handleLoginStatus);\n\nexport default ForgotPasswordWindow;\n","import React from \"react\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"../ipc/eventManager\";\nimport Navigator from \"./navigator\";\n\nlet app = null;\n\nclass HomeNavigatorWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"HomeNavigatorWindow.constructor\");\n\n    this.state = { count: 0 };\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"HomeNavigatorWindow.componentDidMount\");\n\n    eventManager.send(Defs.ipcShowNavBar, \"home\");\n    eventManager.send(Defs.ipcLinkTo, Defs.urlIipzy);\n    this.doRender();\n  }\n\n  componentWillUnmount() {\n    console.log(\"HomeNavigatorWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: this.state.count + 1 });\n  }\n\n  render() {\n    console.log(\"HomeNavigatorWindow.render\");\n\n    return (\n      <div>\n        <Navigator />\n      </div>\n    );\n  }\n}\n\nexport default HomeNavigatorWindow;\n","import React from \"react\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"../ipc/eventManager\";\n\nimport Navigator from \"./navigator\";\n\nlet app = null;\n\nclass IipzyWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"IipzyWindow.constructor\");\n\n    this.state = { count: 0 };\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"IipzyWindow.componentDidMount\");\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  componentWillUnmount() {\n    console.log(\"IipzyWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  handleSentinelClick() {\n    console.log(\"IIpzyWindow.handleSentinelClick\");\n    eventManager.send(Defs.ipcLinkTo, Defs.urlSentinels);\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  render() {\n    console.log(\"IipzyWindow.render\");\n\n    return (\n      <div>\n        <Navigator />\n        <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"140%\" }}>Welcome to the iipzy service</p>\n        </div>\n        <div\n          style={{ marginLeft: 20, textAlign: \"left\", fontWeight: \"normal\" }}\n        >\n          <p>\n            Click on{\" \"}\n            <button\n              class=\"invisible-button\"\n              onClick={ev => this.handleSentinelClick(ev)}\n            >\n              <strong>Sentinel</strong>\n            </button>{\" \"}\n            above to connect to your iipzy Sentinel device.\n            <br />\n            <br />\n            From Sentinel, you can view your network latency, results of the\n            most recent speed test, and a list of the devices on your network.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IipzyWindow;\n","import Cookies from \"js-cookie\";\n\nimport { log } from \"./log\";\n\n//const cookieName = \"iipzy-server-web\";\n\nfunction get(key) {\n  const val = Cookies.get(key);\n  log(\"cookie.get: key = \" + key + \", val = \" + val, \"cook\", \"info\");\n  return val;\n}\n\nfunction set(key, val) {\n  log(\"cookie.set: key = \" + key + \", val = \" + val, \"cook\", \"info\");\n  return Cookies.set(key, val);\n}\n\nexport default { get, set };\n","import Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"../ipc/eventManager\";\nimport http from \"../ipc/httpService\";\nimport { encrypt, decrypt } from \"../utils/cipher\";\nimport cookie from \"../utils/cookie\";\nimport { log } from \"../utils/log\";\n\nlet serverIPAddress = \"address not set\";\n\nasync function init(serverIPAddress_) {\n  log(\"auth.init\", \"auth\", \"info\");\n\n  serverIPAddress = serverIPAddress_;\n\n  const userName = cookie.get(\"userName\");\n  log(\"auth.init: userName=\" + userName, \"auth\", \"info\");\n  if (userName != null) {\n    const passwordEncrypted = cookie.get(\"password\");\n    if (passwordEncrypted) {\n      return true;\n    }\n  }\n  return false;\n}\n\nasync function sendLogin(credentials) {\n  log(\"sendLogin\", \"auth\", \"info\");\n  return await http.post(\n    \"https://\" + serverIPAddress + \"/api/auth/login\",\n    credentials\n  );\n}\n\nasync function sendLogout() {\n  log(\"sendLogout\", \"auth\", \"info\");\n  return await http.post(\"https://\" + serverIPAddress + \"/api/auth/logout\");\n}\n\nasync function login() {\n  log(\"auth.login\", \"auth\", \"info\");\n\n  const userName = cookie.get(\"userName\");\n  log(\"userName=\" + userName, \"auth\", \"info\");\n  if (userName != null) {\n    const passwordEncrypted = cookie.get(\"password\");\n    if (passwordEncrypted != null) {\n      const passwordDecrypted = decrypt(passwordEncrypted);\n      return await loginAsync(userName, passwordDecrypted);\n    }\n  }\n  return false;\n}\n\nasync function loginRequest(params) {\n  log(\"submitLoginRequest\", \"auth\", \"info\");\n  const { userName, password } = params;\n  return await loginAsync(userName, password);\n}\n\nasync function logoutRequest(params) {\n  log(\"submitLogoutRequest\", \"auth\", \"info\");\n  const { userName } = params;\n  return await logoutAsync(userName);\n}\n\nasync function loginAsync(userName, passwordDecrypted) {\n  log(\">>>loginAsync\", \"auth\", \"info\");\n\n  const { data, status } = await sendLogin({\n    userName: userName,\n    password: passwordDecrypted,\n  });\n\n  log(\"loginAsync: status = \" + status, \"auth\", \"info\");\n  if (status === Defs.httpStatusOk) {\n    log(\"loginAsync: succeeded\", \"auth\", \"info\");\n    await handleCompletion(\n      userName,\n      passwordDecrypted,\n      data.authToken,\n      data.isLoggedIn ? Defs.loginStatusLoggedIn : Defs.loginStatusLoginFailed,\n      data.isAdmin\n    );\n  } else {\n    // failed\n    log(\"loginAsync: failed\", \"auth\", \"info\");\n    await handleCompletion(\n      userName,\n      \"\",\n      \"\",\n      Defs.loginStatusLoginFailed,\n      false\n    );\n  }\n\n  log(\"<<<loginAsync\", \"auth\", \"info\");\n\n  return { data, status };\n}\n\nasync function logoutAsync(userName) {\n  log(\">>>logoutAsync\", \"auth\", \"info\");\n\n  const { data, status } = await sendLogout();\n  log(\"logoutAsync: status = \" + status, \"auth\", \"info\");\n  if (status === Defs.httpStatusOk) {\n    // succeeded\n    log(\"logoutAsync: succeeded\", \"auth\", \"info\");\n    await handleCompletion(userName, \"\", \"\", Defs.loginStatusLoggedOut, false);\n  } else {\n    // failed\n    log(\"logoutAsync: failed\", \"auth\", \"info\");\n    await handleCompletion(userName, \"\", \"\", Defs.loginStatusLoggedOut, false);\n  }\n\n  log(\"<<<logoutAsync\", \"auth\", \"info\");\n\n  return { data, status };\n}\n\nasync function handleCompletion(\n  userName,\n  passwordDecrypted,\n  authToken,\n  loginStatus,\n  isAdmin,\n  onUserCommand_\n) {\n  const onUserCommand = onUserCommand_ === undefined ? true : onUserCommand_;\n  log(\n    \">>>handleCompletion: userName=\" +\n      userName +\n      \", authToken = \" +\n      authToken +\n      \", loginStatus = \" +\n      loginStatus +\n      \", isAdmin = \" +\n      isAdmin,\n    \"auth\"\n  );\n\n  // set http header.\n  http.setAuthTokenHeader(authToken);\n\n  eventManager.send(Defs.ipcLoginStatus, {\n    userName: userName,\n    password: passwordDecrypted,\n    authToken: authToken,\n    loginStatus: loginStatus,\n    isAdmin: isAdmin,\n    onUserCommand,\n  });\n\n  log(\"handleCompletion after sending credentials\", \"auth\", \"verbose\");\n\n  // save in cookie.\n  cookie.set(\"userName\", userName);\n  if (\n    loginStatus === Defs.loginStatusLoggedIn &&\n    authToken &&\n    authToken !== \"\"\n  ) {\n    cookie.set(\"password\", encrypt(passwordDecrypted));\n  } else {\n    cookie.set(\"password\", \"\");\n  }\n\n  log(\"<<<handleCompletion\", \"auth\", \"info\");\n}\n\nasync function reLoginAsync() {\n  log(\">>>reLoginAsync\", \"auth\", \"info\");\n\n  const userName = cookie.get(\"userName\");\n  log(\"reLoginAsync: userName=\" + userName, \"auth\", \"info\");\n  let loginAttemped = false;\n  if (userName != null) {\n    const passwordEncrypted = cookie.get(\"password\");\n    if (passwordEncrypted != null) {\n      const passwordDecrypted = decrypt(passwordEncrypted);\n      loginAttemped = true;\n      await loginAsync(userName, passwordDecrypted);\n    }\n  }\n  if (!loginAttemped)\n    await handleCompletion(\n      userName,\n      \"\",\n      \"\",\n      Defs.loginStatusLoginFailed,\n      false,\n      false\n    );\n\n  log(\"<<<reLoginAsync\", \"auth\", \"info\");\n}\n\nfunction final() {}\n\nexport default {\n  init,\n  final,\n  login,\n  loginRequest,\n  logoutRequest,\n  reLoginAsync,\n};\n","import React from \"react\";\n//import Joi from \"joi-browser\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"../ipc/eventManager\";\nimport auth from \"../services/auth\";\nimport InfoPopup from \"./infoPopup\";\nimport Input from \"./input\";\nimport Navigator from \"./navigator\";\nimport SpinnerPopup from \"./spinnerPopup\";\n\nlet app = null;\n\nclass LoginWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"LoginWindow.constructor\");\n\n    this.state = { count: 0 };\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"LoginWindow.componentDidMount\");\n    this.doRender();\n  }\n\n  componentWillUnmount() {\n    console.log(\"LoginWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  getUserName() {\n    return LoginWindow.userName;\n  }\n\n  getPassword() {\n    return LoginWindow.password;\n  }\n\n  getInfoMessage() {\n    return LoginWindow.infoMessage;\n  }\n\n  getSubmitButtonEnabled() {\n    return (\n      LoginWindow.buttonsEnabled &&\n      (LoginWindow.isLoggedIn ||\n        (LoginWindow.userName.length >= 5 && LoginWindow.password.length >= 5))\n    );\n  }\n\n  handleInfoPopupClick() {\n    console.log(\"LoginWindow.handleInfoPopupClick\");\n  }\n\n  hideInfoPopup() {\n    LoginWindow.showInfoPopup = false;\n    LoginWindow.buttonsEnabled = true;\n    this.doRender();\n  }\n\n  //handleChange = ({ currentTarget: input }) => {\n  handleChange(ev) {\n    const name = ev.target.name;\n    const value = ev.target.value;\n    console.log(\"LoginWindow.handleChange: \" + name + \" = \" + value);\n    switch (name) {\n      case \"userName\": {\n        LoginWindow.userName = value;\n        break;\n      }\n      case \"password\": {\n        LoginWindow.password = value;\n        break;\n      }\n    }\n\n    this.doRender();\n  }\n\n  handleKeyPress = (ev, title) => {\n    console.log(\"---handleKeyPress: key = \" + ev.key + \", title = \" + title);\n    // if (ev.key === 'Enter') {\n    //   this.refs.but.click()\n    // }\n  };\n\n  // onKeyPress={(ev) => {\n  //   console.log(\"---Enter.2---\");\n  //   ev.key === \"Enter\" && this.handleSubmitClick(ev, \"Log out\");\n  // }}\n\n  handleSubmitClick(ev, title) {\n    console.log(\"LoginWindow.handleSubmitClick: title = \" + title);\n\n    LoginWindow.buttonsEnabled = false;\n    LoginWindow.title = title;\n    this.doRender();\n    if (!LoginWindow.isLoggedIn) {\n      loginRequest({\n        userName: LoginWindow.userName,\n        password: LoginWindow.password,\n      });\n    } else {\n      logoutRequest({\n        userName: LoginWindow.userName,\n        authToken: LoginWindow.authToken,\n      });\n    }\n  }\n\n  render() {\n    console.log(\"loginWindow render\");\n\n    const isLoggedIn = LoginWindow.isLoggedIn;\n    const showInfoPopup = LoginWindow.showInfoPopup;\n    const showSpinner = LoginWindow.showSpinner;\n    const title_ = LoginWindow.title;\n\n    return (\n      <div>\n        <Navigator />\n        {showInfoPopup && (\n          <InfoPopup\n            title={title_}\n            getInfoMessage={() => this.getInfoMessage()}\n            onSubmit={(ev) => this.handleInfoPopupClick(ev)}\n            closePopup={this.hideInfoPopup.bind(this)}\n          />\n        )}\n        {!isLoggedIn && (\n          <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n            <p style={{ fontSize: \"140%\" }}>Log in @ iipzy.com</p>\n          </div>\n        )}\n        {isLoggedIn && (\n          <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n            <p style={{ fontSize: \"140%\" }}>Log out @ iipzy.com</p>\n          </div>\n        )}\n        {showSpinner && <SpinnerPopup />}\n        {!showInfoPopup && !isLoggedIn && (\n          <form>\n            <Input\n              type=\"text\"\n              autofocus={true}\n              disabled={isLoggedIn}\n              name=\"userName\"\n              value={this.getUserName()}\n              label=\"User Name\"\n              onChange={(ev) => this.handleChange(ev)}\n              error=\"\"\n            />\n            <Input\n              type=\"password\"\n              autofocus={false}\n              hidden={isLoggedIn}\n              disabled={isLoggedIn}\n              name=\"password\"\n              value={this.getPassword()}\n              label=\"Password\"\n              onChange={(ev) => this.handleChange(ev)}\n              error=\"\"\n            />\n            <div>&nbsp;</div>\n            <div style={{ marginLeft: \"45px\" }}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                disabled={!this.getSubmitButtonEnabled()}\n                style={{\n                  width: \"130px\",\n                  color: \"#0000b0\",\n                }}\n                onClick={(ev) => this.handleSubmitClick(ev, \"Log in\")}\n              >\n                Login\n              </Button>\n            </div>\n          </form>\n        )}\n        {!showInfoPopup && isLoggedIn && (\n          <form>\n            <Input\n              type=\"text\"\n              autofocus={true}\n              disabled={isLoggedIn}\n              name=\"userName\"\n              value={this.getUserName()}\n              label=\"User Name\"\n              onChange={(ev) => this.handleChange(ev)}\n              error=\"\"\n            />\n            <div>&nbsp;</div>\n            <div style={{ marginLeft: \"45px\" }}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                disabled={!this.getSubmitButtonEnabled()}\n                style={{\n                  width: \"130px\",\n                  color: \"#0000b0\",\n                }}\n                onClick={(ev) => this.handleSubmitClick(ev, \"Log out\")}\n              >\n                Logout\n              </Button>\n            </div>\n          </form>\n        )}\n      </div>\n    );\n  }\n}\n\nLoginWindow.authToken = \"\";\nLoginWindow.buttonsEnabled = true;\nLoginWindow.infoMessage = \"\";\nLoginWindow.isLoggedIn = false;\nLoginWindow.password = \"\";\nLoginWindow.showInfoPopup = false;\nLoginWindow.showSpinner = false;\nLoginWindow.title = \"\";\nLoginWindow.userName = \"\";\n\nasync function loginRequest(params) {\n  LoginWindow.showSpinner = true;\n  if (app) app.doRender();\n\n  const { data } = await auth.loginRequest(params);\n  console.log(\n    \"LoginWindow.loginRequest (response): data = \" +\n      JSON.stringify(data, null, 2)\n  );\n  if (data.__hadError__) {\n    LoginWindow.infoMessage = data.__hadError__.errorMessage;\n    LoginWindow.showInfoPopup = true;\n  } else {\n    LoginWindow.infoMessage = \"Successfully logged in\";\n    LoginWindow.showInfoPopup = false;\n  }\n  LoginWindow.buttonsEnabled = true;\n  LoginWindow.showSpinner = false;\n  if (app) app.doRender();\n}\n\nasync function logoutRequest(params) {\n  LoginWindow.showSpinner = true;\n  if (app) app.doRender();\n\n  const { data } = await auth.logoutRequest(params);\n  console.log(\n    \"LoginWindow.logoutRequest (response): data = \" +\n      JSON.stringify(data, null, 2)\n  );\n  if (data.__hadError__) {\n    LoginWindow.infoMessage = data.__hadError__.errorMessage;\n  } else {\n    LoginWindow.infoMessage = \"Successfully logged out\";\n  }\n  LoginWindow.password = \"\";\n  LoginWindow.showInfoPopup = true;\n  LoginWindow.showSpinner = false;\n  if (app) app.doRender();\n}\n\nconst handleLoginStatus = (event, data) => {\n  const { userName, authToken, loginStatus } = data;\n\n  console.log(\n    \"LoginWindow.handleLoginStatus: userName=\" +\n      userName +\n      \", loginStatus = \" +\n      loginStatus +\n      \", authToken = \" +\n      authToken\n  );\n  LoginWindow.userName = !userName ? \"\" : userName;\n  LoginWindow.authToken = authToken;\n  LoginWindow.isLoggedIn = loginStatus === Defs.loginStatusLoggedIn;\n\n  if (app) app.doRender();\n};\n\nconst handleUserAddVerified = (event, data) => {\n  LoginWindow.userName = data.userName;\n  if (app != null) app.doRender();\n};\n\neventManager.on(Defs.ipcLoginStatus, handleLoginStatus);\neventManager.on(Defs.ipcUserAddVerified, handleUserAddVerified);\n\nexport default LoginWindow;\n","import React from \"react\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n//import { ThemeProvider } from \"@material-ui/core\";\n\n//import Defs from \"iipzy-shared/src/defs\";\n\nimport clients from \"../services/clients\";\n\nlet app = null;\n\nclass ClientPicker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"ClientPicker.constructor\");\n\n    app = this;\n\n    this.state = { count: 0 };\n  }\n\n  async componentDidMount() {\n    console.log(\"ClientPicker.componentDidMount\");\n    getClientsFromDB(\"sentinelsOnly=1\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"ClientPicker.componentWillUnmount\");\n    app = null;\n  }\n\n  getClients() {\n    console.log(\"ClientPicker.getClients\");\n    return ClientPicker.clientsFiltered;\n  }\n\n  getDisabled() {\n    return this.props.getDisabled();\n  }\n\n  getSelectedClient() {\n    console.log(\n      \"clientPicker.getSelectedClient: \" + ClientPicker.selectedClient\n    );\n    return ClientPicker.selectedClient;\n  }\n\n  handleSelect(ev) {\n    ClientPicker.selectedClient = ev.value;\n    console.log(\"clientPicker.handleSelect: \" + ClientPicker.selectedClient);\n    this.props.onPick(\n      ClientPicker.clientTokenByEntryString.get(ClientPicker.selectedClient)\n    );\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  render() {\n    console.log(\"ClientPicker.render\");\n\n    return (\n      <div>\n        <Dropdown\n          disabled={this.getDisabled()}\n          options={this.getClients()}\n          onChange={ev => this.handleSelect(ev)}\n          value={this.getSelectedClient()}\n          placeholder=\"-------------------- Select a client ---------------------\"\n        />\n      </div>\n    );\n  }\n}\n\nClientPicker.clientsFiltered = [];\nClientPicker.clientTokenByEntryString = new Map();\nClientPicker.entryStringByClientToken = new Map();\nClientPicker.selectedClient = \"\";\nClientPicker.selectedClientToken = \"\";\n\nasync function getClientsFromDB(queryString) {\n  const { data, status } = await clients.getClients(queryString);\n  console.log(\"ClientPicker.getClientsFromDB (response): status = \" + status);\n\n  if (data.__hadError__) {\n    console.log(\n      \"ClientPicker.handleClientsGetResponse: errorMessage = \" +\n        data.__hadError__.errorMessage +\n        \", statusCode = \" +\n        data.__hadError__.statusCode\n    );\n\n    //   ClientPicker.infoMessage = data.__hadError__.errorMessage;\n\n    //   if (app != null) app.doRender();\n\n    return;\n  }\n\n  if (data) {\n    ClientPicker.clientsFiltered = [];\n    ClientPicker.clientTokenByEntryString = new Map();\n    ClientPicker.entryStringByClientToken = new Map();\n\n    for (let i = 0; i < data.length; i++) {\n      const {\n        clientName,\n        clientType,\n        clientToken,\n        publicIPAddress,\n        localIPAddress,\n        isOnLine\n      } = data[i];\n      if (clientType === \"appliance\") {\n        const entryString =\n          clientName +\n          \"  \" +\n          publicIPAddress +\n          \"  \" +\n          localIPAddress +\n          (isOnLine ? \"\" : \"  - offline\");\n        ClientPicker.clientsFiltered.push(entryString);\n        ClientPicker.clientTokenByEntryString.set(entryString, clientToken);\n        ClientPicker.entryStringByClientToken.set(clientToken, entryString);\n      }\n    }\n\n    if (ClientPicker.selectedClientToken) {\n      ClientPicker.selectedClient = ClientPicker.entryStringByClientToken.get(\n        ClientPicker.selectedClientToken\n      );\n    }\n  }\n\n  if (app)\n    ClientPicker.selectedClientToken = app.props.getSelectedClientToken();\n\n  if (app) app.doRender();\n}\n\nexport default ClientPicker;\n","import Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"../ipc/eventManager\";\nimport http from \"../ipc/httpService\";\nimport cookie from \"../utils/cookie\";\nimport { log } from \"../utils/log\";\n\nlet serverIPAddress = \"address not set\";\n\nasync function init(serverIPAddress_) {\n  log(\"sentinelAdmin.init\", \"sadm\", \"info\");\n\n  serverIPAddress = serverIPAddress_;\n}\n\nfunction final() {}\n\n// async function getSentinelAdminStatus(tgtClientToken) {\n//   log(\n//     \"getSentinelAdminStatus: tgtClientToken = \" + tgtClientToken,\n//     \"sadm\",\n//     \"verbose\"\n//   );\n\n//   if (tgtClientToken)\n//     return await http.get(\n//       \"https://\" +\n//         serverIPAddress +\n//         \"/api/sentineladmin/status?tgtclienttoken=\" +\n//         tgtClientToken\n//     );\n\n//   return {};\n// }\n\n// async function postSentinelAdminAction(params) {\n//   log(\n//     \"postSentinelAdminAction: params = \" + JSON.stringify(params, null, 2),\n//     \"sadm\",\n//     \"info\"\n//   );\n\n//   return await http.post(\n//     \"https://\" + serverIPAddress + \"/api/sentineladmin/action\",\n//     params\n//   );\n// }\n\n// function getSentinelClientToken() {\n//   let sentinelClientToken = cookie.get(\"sentinelClientToken\");\n//   return sentinelClientToken;\n// }\n\n// function handleSentinelAdminGetRequest(event, data) {\n//   log(\"sentinelAdmin.handleSentinelAdminGetRequest\", \"sadm\", \"info\");\n//   let settings = cookie.get(\"sentinelAdminSettings\");\n//   eventManager.send(Defs.ipcSentinelAdminGetResponse, settings);\n// }\n\n// async function handleSentinelAdminPutRequest(event, settings) {\n//   log(\n//     \"sentinelAdmin.handleSentinelAdminPutRequest: settings = \" +\n//       JSON.stringify(settings),\n//     \"sadm\",\n//     \"info\"\n//   );\n//   cookie.set(\"sentinelAdminSettings1\", settings);\n//   eventManager.send(Defs.ipcSentinelAdminPutResponse, {});\n// }\n\n// async function handleSentinelAdminActionPostRequest(event, settings) {\n//   log(\n//     \"sentinelAdmin.handleSentinelAdminActionPostRequest: settings = \" +\n//       JSON.stringify(settings),\n//     \"sadm\",\n//     \"info\"\n//   );\n//   //console.log(settings);\n//   const settingsSansActionUuid = JSON.parse(JSON.stringify(settings));\n//   delete settingsSansActionUuid.actionUuid;\n//   cookie.set(\"sentinelAdminSettings\", settingsSansActionUuid);\n//   const { data, status } = await postSentinelAdminAction(settings);\n//   if (status !== Defs.httpStatusOk)\n//     log(\n//       \"(Error) sentinelAdmin.handleSentinelAdminActionPostRequest: status = \" +\n//         status,\n//       \"sadm\",\n//       \"verbose\"\n//     );\n\n//   log(\n//     \"sentinelAdmin.handleSentinelAdminActionPostRequest: data = \" +\n//       JSON.stringify(data),\n//     \"sadm\",\n//     \"info\"\n//   );\n//   //if (data)\n//   eventManager.send(Defs.ipcSentinelAdminActionPostResponse, data);\n// }\n\n// async function handleSentinelAdminStatusGetRequest(event, piClientToken) {\n//   log(\"sentinelAdmin.handleSentinelAdminStatusGetRequest\", \"sadm\", \"verbose\");\n//   if (piClientToken) {\n//     const { data, status } = await getSentinelAdminStatus(piClientToken);\n//     log(\n//       \"sentinelAdmin.handleSentinelAdminStatusGetRequest: data = \" +\n//         JSON.stringify(data, null, 2),\n//       \"sadm\",\n//       \"verbose\"\n//     );\n//     eventManager.send(Defs.ipcSentinelAdminStatusGetResponse, data.adminStatus);\n//   }\n// }\n\nasync function getSentinelAdminStatus(tgtClientToken) {\n  log(\"sentinelAdmin.getSentinelAdminStatus\", \"sadm\", \"verbose\");\n  if (tgtClientToken) {\n    return await http.get(\n      \"https://\" +\n        serverIPAddress +\n        \"/api/sentineladmin/status?tgtclienttoken=\" +\n        tgtClientToken\n    );\n  }\n\n  return {};\n}\n\nasync function postSentinelAdmin(params) {\n  log(\"updater.postSentinelAdmin\", \"updt\", \"info\");\n  const paramsSansActionUuid = JSON.parse(JSON.stringify(params));\n  delete paramsSansActionUuid.actionUuid;\n  return await http.post(\n    \"https://\" + serverIPAddress + \"/api/sentineladmin/action\",\n    paramsSansActionUuid\n  );\n}\n\n// eventManager.on(Defs.ipcSentinelAdminGetRequest, handleSentinelAdminGetRequest);\n// eventManager.on(Defs.ipcSentinelAdminPutRequest, handleSentinelAdminPutRequest);\n/* eventManager.on(\n  Defs.ipcSentinelAdminActionPostRequest,\n  handleSentinelAdminActionPostRequest\n); */\n// eventManager.on(\n//   Defs.ipcSentinelAdminStatusGetRequest,\n//   handleSentinelAdminStatusGetRequest\n// );\n\nexport default {\n  init,\n  final,\n  getSentinelAdminStatus,\n  postSentinelAdmin\n};\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport uuidv4 from \"uuid/v4\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport cookie from \"../utils/cookie\";\nimport ClientPicker from \"./clientPicker\";\nimport InfoPopup from \"./infoPopup\";\nimport Navigator from \"./navigator\";\nimport sentinelAdmin from \"../services/sentinelAdmin\";\nimport SpinnerPopup from \"./spinnerPopup\";\n\nlet app = null;\n\nclass SentinelAdminWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    app = this;\n\n    this.state = { count: 0 };\n  }\n\n  componentDidMount() {\n    console.log(\"SentinelAdminWindow componentDidMount\");\n    this.getSentinelAdminSettings();\n    try {\n      SentinelAdminWindow.statusInterval = setInterval(async () => {\n        if (!this.inSendSentinelAdminStatusGetRequest) {\n          this.inSendSentinelAdminStatusGetRequest = true;\n          await getSentinelAdminStatus();\n          this.inSendSentinelAdminStatusGetRequest = false;\n        }\n      }, 1 * 1000);\n    } catch (ex) {\n      console.log(\"(Exception) \" + ex);\n    }\n  }\n\n  componentWillUnmount() {\n    console.log(\"SentinelAdminWindow componentWillUnmount\");\n    clearInterval(SentinelAdminWindow.statusInterval);\n    SentinelAdminWindow.statusInterval = null;\n    app = null;\n  }\n\n  getSentinelAdminSettings() {\n    const settings = cookie.get(\"sentinelAdminSettings\");\n    if (settings) {\n      const { tgtClientToken, action } = settings;\n      if (tgtClientToken) SentinelAdminWindow.tgtClientToken = tgtClientToken;\n      if (action) SentinelAdminWindow.action = action;\n    }\n  }\n\n  handleSaveClick(ev) {\n    console.log(\"...SentinelAdminWindow handleSaveClick\");\n    cookie.set(\"sentinelAdminSettings\", {\n      tgtClientToken: SentinelAdminWindow.tgtClientToken,\n      action: SentinelAdminWindow.action,\n    });\n  }\n\n  handleSubmitClick(ev) {\n    console.log(\"...SentinelAdminWindow handleSubmitClick\");\n\n    SentinelAdminWindow.submitTimeout = setTimeout(() => {\n      if (SentinelAdminWindow.submitTimeout) {\n        SentinelAdminWindow.waitForInProgress = false;\n        SentinelAdminWindow.status = \"timed out\";\n        this.doRender();\n      }\n    }, 30 * 1000);\n\n    SentinelAdminWindow.waitForInProgress = true;\n    SentinelAdminWindow.status = \"contacting server...\";\n    this.doRender();\n\n    postSentinelAdmin({\n      tgtClientToken: SentinelAdminWindow.tgtClientToken,\n      action: SentinelAdminWindow.action,\n      actionUuid: uuidv4(),\n    });\n  }\n\n  handleActionChange(ev) {\n    console.log(\n      \"...SentinelAdminWindow handleActionChange: \" + ev.target.value\n    );\n    SentinelAdminWindow.action = ev.target.value;\n    this.doRender();\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  getClientToken() {\n    return SentinelAdminWindow.tgtClientToken;\n  }\n\n  getDisabled() {\n    return (\n      SentinelAdminWindow.waitForInProgress || SentinelAdminWindow.inProgress\n    );\n  }\n\n  getEnableSave() {\n    return true;\n  }\n\n  getEnableSubmit() {\n    if (SentinelAdminWindow.tgtClientToken.length < 16) return false;\n\n    if (SentinelAdminWindow.inProgress) {\n      SentinelAdminWindow.waitForInProgress = false;\n      if (SentinelAdminWindow.submitTimeout) {\n        clearTimeout(SentinelAdminWindow.submitTimeout);\n        SentinelAdminWindow.submitTimeout = null;\n      }\n    }\n    return (\n      !SentinelAdminWindow.waitForInProgress && !SentinelAdminWindow.inProgress\n    );\n  }\n\n  getInfoMessage() {\n    return SentinelAdminWindow.infoMessage;\n  }\n\n  handleClientPick(ev) {\n    console.log(\"SentinelAdminWindow.handleClientPick: \" + ev);\n    SentinelAdminWindow.tgtClientToken = ev;\n  }\n\n  handleInfoPopupClick() {\n    console.log(\"SentinelAdminWindow.handleInfoPopupClick\");\n  }\n\n  hideInfoPopup() {\n    SentinelAdminWindow.showInfoPopup = false;\n    this.doRender();\n  }\n\n  render() {\n    console.log(\"SentinelAdminWindow render\");\n\n    //const tgtClientToken = SentinelAdminWindow.tgtClientToken;\n    const action = SentinelAdminWindow.action;\n    const disabledWhileInProgress =\n      SentinelAdminWindow.waitForInProgress || SentinelAdminWindow.inProgress;\n    const activityStatus = SentinelAdminWindow.status;\n    const showSpinner = disabledWhileInProgress;\n\n    const showInfoPopup = SentinelAdminWindow.showInfoPopup;\n\n    return (\n      <div>\n        <Navigator />\n        {showSpinner && <SpinnerPopup />}\n        {showInfoPopup && (\n          <InfoPopup\n            title={\"Sentinel Admin\"}\n            getInfoMessage={() => this.getInfoMessage()}\n            onSubmit={(ev) => this.handleInfoPopupClick(ev)}\n            closePopup={this.hideInfoPopup.bind(this)}\n          />\n        )}\n        {!showInfoPopup && (\n          <div>\n            <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n              <p style={{ fontSize: \"140%\" }}>Sentinel Administration</p>\n            </div>\n            <div style={{ marginLeft: \"20px\" }}>\n              <table align=\"left\">\n                <tbody>\n                  <tr>\n                    <td>&nbsp;</td>\n                  </tr>\n                  <tr>\n                    <td>Client:</td>\n                    <td>\n                      <ClientPicker\n                        onPick={(ev) => this.handleClientPick(ev)}\n                        getDisabled={this.getDisabled}\n                        getSelectedClientToken={this.getClientToken}\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>&nbsp;</td>\n                  </tr>\n                  <tr>\n                    <td>Action:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                    <table align=\"left\">\n                      <tbody>\n                        <tr>\n                          <input\n                            type=\"radio\"\n                            name=\"action\"\n                            value={Defs.adminCmd_sentinel_restartSentinel}\n                            checked={\n                              action === Defs.adminCmd_sentinel_restartSentinel\n                            }\n                            disabled={disabledWhileInProgress}\n                            onChange={(ev) => this.handleActionChange(ev)}\n                          />\n                          &nbsp;Restart Sentinel&nbsp;\n                        </tr>\n                        <tr>\n                          <input\n                            type=\"radio\"\n                            name=\"action\"\n                            value={Defs.adminCmd_sentinel_restartSentinelAdmin}\n                            checked={\n                              action ===\n                              Defs.adminCmd_sentinel_restartSentinelAdmin\n                            }\n                            disabled={disabledWhileInProgress}\n                            onChange={(ev) => this.handleActionChange(ev)}\n                          />\n                          &nbsp;Restart Sentinel Admin&nbsp;\n                        </tr>\n                        <tr>\n                          <input\n                            type=\"radio\"\n                            name=\"action\"\n                            value={Defs.adminCmd_sentinel_restartSentinelWeb}\n                            checked={\n                              action ===\n                              Defs.adminCmd_sentinel_restartSentinelWeb\n                            }\n                            disabled={disabledWhileInProgress}\n                            onChange={(ev) => this.handleActionChange(ev)}\n                          />\n                          &nbsp;Restart Sentinel Web&nbsp;\n                        </tr>\n                        <tr>\n                          <input\n                            type=\"radio\"\n                            name=\"action\"\n                            value={Defs.adminCmd_sentinel_restartUpdater}\n                            checked={\n                              action === Defs.adminCmd_sentinel_restartUpdater\n                            }\n                            disabled={disabledWhileInProgress}\n                            onChange={(ev) => this.handleActionChange(ev)}\n                          />\n                          &nbsp;Restart Updater&nbsp;\n                        </tr>\n                        <tr>\n                          <input\n                            type=\"radio\"\n                            name=\"action\"\n                            value={Defs.adminCmd_sentinel_reboot}\n                            checked={action === Defs.adminCmd_sentinel_reboot}\n                            disabled={disabledWhileInProgress}\n                            onChange={(ev) => this.handleActionChange(ev)}\n                          />\n                          &nbsp;Reboot&nbsp;\n                        </tr>\n                        <tr>\n                          <input\n                            type=\"radio\"\n                            name=\"action\"\n                            value={Defs.adminCmd_sentinel_sendLogs}\n                            checked={action === Defs.adminCmd_sentinel_sendLogs}\n                            disabled={disabledWhileInProgress}\n                            onChange={(ev) => this.handleActionChange(ev)}\n                          />\n                          &nbsp;Send Logs\n                        </tr>\n                        <tr>\n                          <input\n                            type=\"radio\"\n                            name=\"action\"\n                            value={Defs.adminCmd_sentinel_setLogLevelDetailed}\n                            checked={\n                              action ===\n                              Defs.adminCmd_sentinel_setLogLevelDetailed\n                            }\n                            disabled={disabledWhileInProgress}\n                            onChange={(ev) => this.handleActionChange(ev)}\n                          />\n                          &nbsp;Set Log Level = Detailed\n                        </tr>\n                        <tr>\n                          <input\n                            type=\"radio\"\n                            name=\"action\"\n                            value={Defs.adminCmd_sentinel_setLogLevelNormal}\n                            checked={\n                              action ===\n                              Defs.adminCmd_sentinel_setLogLevelNormal\n                            }\n                            disabled={disabledWhileInProgress}\n                            onChange={(ev) => this.handleActionChange(ev)}\n                          />\n                          &nbsp;Set Log Level = Normal\n                        </tr>\n                      </tbody>\n                    </table>\n                  </tr>\n                  <tr>\n                    <td>&nbsp;</td>\n                  </tr>\n                  <tr>\n                    <td>&nbsp;</td>\n                    <td>\n                      <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        disabled={!this.getEnableSave()}\n                        style={{\n                          marginLeft: \"100px\",\n                          width: \"130px\",\n                          color: \"#0000b0\",\n                        }}\n                        /* autoFocus */\n                        onClick={(ev) => this.handleSaveClick(ev)}\n                      >\n                        Save\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        disabled={!this.getEnableSubmit()}\n                        style={{\n                          marginLeft: \"50px\",\n                          width: \"130px\",\n                          color: \"#0000b0\",\n                        }}\n                        /* autoFocus */\n                        onClick={(ev) => this.handleSubmitClick(ev)}\n                      >\n                        Submit\n                      </Button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>&nbsp;</td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <hr width=\"1000%\" height=\"20\" border=\"none\"></hr>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>&nbsp;</td>\n                  </tr>\n                  <tr>\n                    <td>Status:</td>\n                    <td>\n                      <input\n                        type=\"text\"\n                        name=\"activity-status-text\"\n                        size=\"40\"\n                        value={activityStatus}\n                        readOnly={true}\n                      />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nSentinelAdminWindow.action = Defs.adminCmd_sentinel_none;\nSentinelAdminWindow.infoMessage = \"\";\nSentinelAdminWindow.inProgress = false;\nSentinelAdminWindow.showInfoPopup = false;\nSentinelAdminWindow.status = \"done\";\nSentinelAdminWindow.statusInterval = null;\nSentinelAdminWindow.submitTimeout = null;\nSentinelAdminWindow.tgtClientToken = \"\";\nSentinelAdminWindow.waitForInProgress = false;\n\nasync function getSentinelAdminStatus() {\n  const { data, status } = await sentinelAdmin.getSentinelAdminStatus(\n    SentinelAdminWindow.tgtClientToken\n  );\n\n  if (status && status === Defs.httpStatusOk) {\n    const adminStatus = data.adminStatus;\n\n    console.log(\n      \"SentinelAdminWindow.getSentinelAdminStatus: status = \" +\n        JSON.stringify(adminStatus, null, 2)\n    );\n\n    SentinelAdminWindow.inProgress = adminStatus.inProgress;\n    if (!SentinelAdminWindow.waitForInProgress)\n      SentinelAdminWindow.status = adminStatus.step;\n\n    if (adminStatus.failed) {\n      SentinelAdminWindow.status = \"failed\";\n      SentinelAdminWindow.waitForInProgress = false;\n      if (SentinelAdminWindow.submitTimeout) {\n        clearTimeout(SentinelAdminWindow.submitTimeout);\n        SentinelAdminWindow.submitTimeout = null;\n      }\n    }\n  }\n\n  if (app) app.doRender();\n}\n\nasync function postSentinelAdmin(params) {\n  const { data, status } = await sentinelAdmin.postSentinelAdmin(params);\n  console.log(\n    \"SentinelAdminWindow.postSentinelAdmin: response = \" +\n      JSON.stringify(data, null, 2)\n  );\n\n  if (data.__hadError__) {\n    console.log(\n      \"SentinelAdminWindow.postSentinelAdmin: errorMessage = \" +\n        data.__hadError__.errorMessage +\n        \", statusCode = \" +\n        data.__hadError__.statusCode\n    );\n\n    SentinelAdminWindow.infoMessage = data.__hadError__.errorMessage;\n    SentinelAdminWindow.showInfoPopup = true;\n    SentinelAdminWindow.buttonsEnabled = false;\n    SentinelAdminWindow.status = \"failed\";\n\n    SentinelAdminWindow.waitForInProgress = false;\n    SentinelAdminWindow.inProgress = false;\n    if (SentinelAdminWindow.submitTimeout) {\n      clearTimeout(SentinelAdminWindow.submitTimeout);\n      SentinelAdminWindow.submitTimeout = null;\n    }\n  }\n\n  if (app) app.doRender();\n}\n\nexport default SentinelAdminWindow;\n","import React from \"react\";\n//import { Redirect, Switch } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport clients from \"../services/clients\";\nimport cipher from \"../utils/cipher\";\nimport cookie from \"../utils/cookie\";\nimport eventManager from \"../ipc/eventManager\";\nimport Navigator from \"./navigator\";\n\nclass SentinelTable extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const clients = this.props.clients;\n    console.log(\"SentinelTable render\");\n    console.log(clients);\n\n    return (\n      <table id=\"sentinel-table\">\n        {clients &&\n          clients.map(item => (\n            <tr key={item.clientToken}>\n              <td\n                style={{ cursor: item.isOnLine ? \"pointer\" : \"default\" }}\n                onClick={() => this.props.onClick(item)}\n              >\n                <div style={{ textAlign: \"left\", marginLeft: 20 }}>\n                  {item.clientName}\n                </div>\n              </td>\n              <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\n              <td\n                style={{ cursor: item.isOnLine ? \"pointer\" : \"default\" }}\n                onClick={() => this.props.onClick(item)}\n              >\n                {item.localIPAddress}\n              </td>\n              <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\n              <td\n                style={{ cursor: item.isOnLine ? \"pointer\" : \"default\" }}\n                onClick={() => this.props.onClick(item)}\n              >\n                {!item.isOnLine ? \"off line\" : \"\"}\n              </td>\n              <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\n              <td\n                style={{ cursor: item.userId ? \"pointer\" : \"default\" }}\n                onClick={() => this.props.onClick(item)}\n              >\n                {!item.userId ? \"not registered\" : \"\"}\n              </td>\n              <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\n              <td\n                style={{ cursor: item.isOnLine ? \"pointer\" : \"default\" }}\n                onClick={() => this.props.onClick(item)}\n              >\n                {item.isWiFi ? \"wifi\" : \"\"}\n              </td>\n            </tr>\n          ))}\n      </table>\n    );\n  }\n}\n\nlet app = null;\n\nclass SentinelsWindow extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"SentinelsWindow.constructor\");\n    this.state = { count: 0 };\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"SentinelsWindow.componentDidMount\");\n    getClientsFromDB(\"localSentinelsOnly=1\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"SentinelsWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  handleLocalIPAddressClick(item) {\n    console.log(\n      \"SentinelsWindow.clientTokenClick = \" +\n        item.localIPAddress + \n        \", isOnLine = \"       + item.isOnLine + \n        \", isLocalClient = \"  + item.isLocalClient + \n        \", clientToken = \"    + item.clientToken + \n        \", clientName = \"     + item.clientName\n    );\n\n    if (!item.isOnLine) return;\n\n    const params = {\n      userName: cookie.get(\"userName\"),\n      password: cookie.get(\"password\"),\n      clientName: item.clientName,\n      from: window.location.origin\n    };\n\n    const paramsEncrypted = cipher.encrypt(JSON.stringify(params));\n    \n    if (item.isLocalClient) {\n      window.location.replace(\n        \"http://\" +\n          item.localIPAddress +\n          \":\" + Defs.port_sentinel_web + \"?params=\" + encodeURI(paramsEncrypted) +\n           \"&clientToken=\" + item.clientToken +\n           \"&isLocalClient=true\"\n      ); \n    } else {\n       window.location.replace(\n        \"https://\" +\n          \"iipzy.net\" +\n          \":\" + Defs.port_sentinel_web + \"?params=\" + encodeURI(paramsEncrypted) +\n          \"&clientToken=\" + item.clientToken +\n          \"&isLocalClient=false\"\n      );\n    }\n  }\n\n  handleLoginClick(ev) {\n    console.log(\"SentinelsWindow.handleLoginClick\");\n    eventManager.send(Defs.ipcLinkTo, Defs.urlLogin);\n  }\n\n  render() {\n    console.log(\"SentinelsWindow.render\");\n\n    const clients = SentinelsWindow.clients;\n    const isLoggedIn = SentinelsWindow.isLoggedIn;\n    const numSentinels = clients ? clients.length : 0;\n\n    if (!clients && isLoggedIn) return <div></div>;\n\n    if (numSentinels === 1) return <div></div>;\n\n    return (\n      <div>\n        <Navigator />\n        <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"140%\" }}>Sentinel</p>\n        </div>\n        {!isLoggedIn && (\n          <div>\n            <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n              <p style={{ fontSize: \"140%\" }}>\n                You must be logged in to connect to your iipzy Sentinel\n              </p>\n              <Button\n                type=\"button\"\n                variant=\"contained\"\n                style={{\n                  width: \"130px\",\n                  color: \"#0000b0\"\n                }}\n                /* autoFocus */\n                onClick={ev => this.handleLoginClick(ev)}\n              >\n                Login\n              </Button>\n            </div>\n          </div>\n        )}\n        {isLoggedIn && numSentinels > 1 && (\n          <div\n            align=\"center\"\n            style={{\n              /*               marginLeft: 20, */\n              width: \"600px\",\n              height: \"120px\",\n              font: \"14px Courier New\",\n              fontWeight: \"bold\"\n            }}\n          >\n            <SentinelTable\n              clients={clients}\n              onClick={ev => this.handleLocalIPAddressClick(ev)}\n            />\n            {/* <TextLines lines={lines} /> */}\n          </div>\n        )}\n        {isLoggedIn && numSentinels === 0 && (\n          <div>\n            <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n              <p style={{ fontSize: \"140%\" }}>\n                Your network does not have an iipzy Sentinel\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nSentinelsWindow.clients = null;\nSentinelsWindow.clientByClientToken = new Map();\nSentinelsWindow.clientToken = \"\";\nSentinelsWindow.infoMessage = \"\";\nSentinelsWindow.isLoggedIn = false;\n\nasync function getClientsFromDB(queryString) {\n  const { data, status } = await clients.getClients(queryString);\n  console.log(\n    \"SentinelsWindow.getClientsFromDB (response): status = \" + status\n  );\n\n  if (data.__hadError__) {\n    console.log(\n      \"SentinelsWindow.getClientsFromDB: errorMessage = \" +\n        data.__hadError__.errorMessage +\n        \", statusCode = \" +\n        data.__hadError__.statusCode\n    );\n\n    SentinelsWindow.infoMessage = data.__hadError__.errorMessage;\n\n    if (app) app.doRender();\n\n    return;\n  }\n\n  SentinelsWindow.clients = data;\n  if (SentinelsWindow.clients.length === 1) {\n    // go directly to sentinel.\n    if (app != null) {\n      const item = {\n        clientName: SentinelsWindow.clients[0].clientName,\n        clientToken: SentinelsWindow.clients[0].clientToken,\n        isOnLine: SentinelsWindow.clients[0].isOnLine,\n        isLocalClient: SentinelsWindow.clients[0].isLocalClient,\n        localIPAddress: SentinelsWindow.clients[0].localIPAddress\n      };\n      app.handleLocalIPAddressClick(item);\n    }\n  } else {\n    // display sentinels.\n    SentinelsWindow.clientByClientToken = new Map();\n    for (let i = 0; i < SentinelsWindow.clients.length; i++) {\n      const client = SentinelsWindow.clients[i];\n      SentinelsWindow.clientByClientToken.set(client.clientToken, client);\n    }\n    if (app) app.doRender();\n  }\n}\n\nconst handleLoginStatus = (event, data) => {\n  const { userName, authToken, password, loginStatus } = data;\n  console.log(\n    \"SentinelsWindow.handleLoginStatus: userName = \" +\n      userName +\n      \", loginStatus = \" +\n      loginStatus\n  );\n  SentinelsWindow.isLoggedIn = loginStatus === Defs.loginStatusLoggedIn;\n};\n\neventManager.on(Defs.ipcLoginStatus, handleLoginStatus);\n\nexport default SentinelsWindow;\n","//import Defs from \"iipzy-shared/src/defs\";\n\nimport http from \"../ipc/httpService\";\nimport { log } from \"../utils/log\";\n\nlet serverIPAddress = \"address not set\";\n\nasync function init(serverIPAddress_) {\n  log(\"updater.init\", \"updt\", \"info\");\n\n  serverIPAddress = serverIPAddress_;\n}\n\nfunction final() {}\n\nasync function getUpdaterStatus(tgtClientToken) {\n  log(\n    \"getUpdaterStatus: tgtClientToken = \" + tgtClientToken,\n    \"updt\",\n    \"verbose\"\n  );\n\n  if (tgtClientToken) {\n    return await http.get(\n      \"https://\" +\n        serverIPAddress +\n        \"/api/updater/status?tgtclienttoken=\" +\n        tgtClientToken\n    );\n  }\n\n  return {};\n}\n\nasync function postUpdaterUpdate(params) {\n  log(\"updater.postUpdaterUpdate\", \"updt\", \"info\");\n  const paramsSansUpdateUuid = JSON.parse(JSON.stringify(params));\n  delete paramsSansUpdateUuid.updateUuid;\n  return await http.post(\n    \"https://\" + serverIPAddress + \"/api/updater/update\",\n    paramsSansUpdateUuid\n  );\n}\n\nexport default {\n  init,\n  final,\n  getUpdaterStatus,\n  postUpdaterUpdate\n};\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport uuidv4 from \"uuid/v4\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport cookie from \"../utils/cookie\";\nimport ClientPicker from \"./clientPicker\";\nimport InfoPopup from \"./infoPopup\";\nimport Navigator from \"./navigator\";\nimport SpinnerPopup from \"./spinnerPopup\";\nimport updater from \"../services/updater\";\n\nlet app = null;\n\nclass UpdaterWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"UpdaterWindow.constructor\");\n\n    app = this;\n\n    this.state = { count: 0 };\n\n    this.inSendUpdaterStatusGetRequest = false;\n  }\n\n  componentDidMount() {\n    console.log(\"UpdaterWindow.componentDidMount\");\n    this.getUpdaterSettings();\n    try {\n      UpdaterWindow.statusInterval = setInterval(async () => {\n        if (!this.inSendUpdaterStatusGetRequest) {\n          this.inSendUpdaterStatusGetRequest = true;\n          await getUpdaterStatus();\n          this.inSendUpdaterStatusGetRequest = false;\n        }\n      }, 1 * 1000);\n    } catch (ex) {\n      console.log(\"(Exception) \" + ex);\n    }\n  }\n\n  componentWillUnmount() {\n    console.log(\"UpdaterWindow.componentWillUnmount\");\n    clearInterval(UpdaterWindow.statusInterval);\n    UpdaterWindow.statusInterval = null;\n    app = null;\n  }\n\n  handleSaveClick(ev) {\n    console.log(\"...UpdaterWindow handleSaveClick\");\n    cookie.set(\"updaterSettings\", {\n      tgtClientToken: UpdaterWindow.tgtClientToken,\n      updateType: UpdaterWindow.updateType,\n    });\n  }\n\n  handleSubmitClick(ev) {\n    console.log(\"...UpdaterWindow handleSubmitClick\");\n\n    UpdaterWindow.submitTimeout = setTimeout(() => {\n      if (UpdaterWindow.submitTimeout) {\n        UpdaterWindow.waitForInProgress = false;\n        UpdaterWindow.status = \"timed out\";\n        this.doRender();\n      }\n    }, 30 * 1000);\n\n    UpdaterWindow.waitForInProgress = true;\n    UpdaterWindow.status = \"contacting server...\";\n    this.doRender();\n\n    cookie.set(\"updaterSettings\", {\n      tgtClientToken: UpdaterWindow.tgtClientToken,\n      updateType: UpdaterWindow.updateType,\n    });\n\n    postUpdaterUpdate({\n      tgtClientToken: UpdaterWindow.tgtClientToken,\n      updateType: UpdaterWindow.updateType,\n      updateUuid: uuidv4(),\n    });\n  }\n\n  getUpdaterSettings() {\n    const settings = cookie.get(\"updaterSettings\");\n    if (settings) {\n      const { tgtClientToken, updateType } = settings;\n      if (tgtClientToken) UpdaterWindow.tgtClientToken = tgtClientToken;\n      if (updateType) UpdaterWindow.updateType = updateType;\n      if (app != null) app.doRender();\n    }\n  }\n\n  handleUpdateTypeChange(ev) {\n    console.log(\"...UpdaterWindow handleUpdateTypeChange: \" + ev.target.value);\n    UpdaterWindow.updateType = ev.target.value;\n    this.doRender();\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  getClientToken() {\n    return UpdaterWindow.tgtClientToken;\n  }\n\n  getDisabled() {\n    return UpdaterWindow.waitForInProgress || UpdaterWindow.inProgress;\n  }\n\n  getEnableSave() {\n    return true;\n  }\n\n  getEnableSubmit() {\n    if (UpdaterWindow.tgtClientToken.length < 16) return false;\n\n    if (UpdaterWindow.inProgress) {\n      UpdaterWindow.waitForInProgress = false;\n      if (UpdaterWindow.submitTimeout) {\n        clearTimeout(UpdaterWindow.submitTimeout);\n        UpdaterWindow.submitTimeout = null;\n      }\n    }\n    return !UpdaterWindow.waitForInProgress && !UpdaterWindow.inProgress;\n  }\n\n  getInfoMessage() {\n    return UpdaterWindow.infoMessage;\n  }\n\n  getDisableRemoteTCPassword() {\n    return false;\n  }\n\n  getRemoteTCPassword() {\n    return UpdaterWindow.password;\n  }\n\n  \n  handleChange(ev) {\n    const name = ev.target.name;\n    const value = ev.target.value;\n\n    console.log(\"updateWindow.name=\" + name + \", value=\" + this.state[name]);\n\n    switch (name) {\n      case \"password\": {\n        UpdaterWindow.password = value;\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n\n    this.setState({ [name]: value });\n  }\n\n  handleClientPick(ev) {\n    console.log(\"UpdaterWindow.handleClientPick: \" + ev);\n    UpdaterWindow.tgtClientToken = ev;\n  }\n\n  handleInfoPopupClick(ev) {\n    console.log(\"UpdaterWindow.handleInfoPopupClick\");\n  }\n\n  hideInfoPopup() {\n    UpdaterWindow.showInfoPopup = false;\n    this.doRender();\n  }\n\n  render() {\n    console.log(\"UpdaterWindow render\");\n\n    const updateType = UpdaterWindow.updateType;\n    const disabledWhileUpdating =\n      UpdaterWindow.waitForInProgress || UpdaterWindow.inProgress;\n    const updateStatus = UpdaterWindow.status;\n    const showSpinner = disabledWhileUpdating;\n\n    const showInfoPopup = UpdaterWindow.showInfoPopup;\n\n    return (\n      <div>\n        <Navigator />\n        {showSpinner && <SpinnerPopup />}\n        {showInfoPopup && (\n          <InfoPopup\n            title={\"Sentinel Update\"}\n            getInfoMessage={() => this.getInfoMessage()}\n            onSubmit={(ev) => this.handleInfoPopupClick(ev)}\n            closePopup={this.hideInfoPopup.bind(this)}\n          />\n        )}\n        {!showInfoPopup && (\n          <div>\n            <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n              <p style={{ fontSize: \"140%\" }}>Update Sentinel</p>\n            </div>\n            <div style={{ marginLeft: \"20px\" }}>\n              <table align=\"left\">\n                <tbody>\n                  <tr>\n                    <td>&nbsp;</td>\n                  </tr>\n\n                  <tr>\n                    <td>Client:</td>\n                    <td>\n                      <ClientPicker\n                        onPick={(ev) => this.handleClientPick(ev)}\n                        getDisabled={this.getDisabled}\n                        getSelectedClientToken={this.getClientToken}\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>&nbsp;</td>\n                  </tr>\n                  <tr>\n                    <td>Update Type:&nbsp;</td>\n                    <table align=\"left\">\n                      <tbody>\n                        <tr>\n                          <input\n                            type=\"radio\"\n                            name=\"update-type\"\n                            value=\"iipzy-core\"\n                            checked={updateType === \"iipzy-core\"}\n                            disabled={disabledWhileUpdating}\n                            onChange={(ev) => this.handleUpdateTypeChange(ev)}\n                          />\n                          &nbsp;Core&nbsp;\n                        </tr>\n                        <tr>\n                          <input\n                            type=\"radio\"\n                            name=\"update-type\"\n                            value=\"iipzy-sentinel-admin\"\n                            checked={updateType === \"iipzy-sentinel-admin\"}\n                            disabled={disabledWhileUpdating}\n                            onChange={(ev) => this.handleUpdateTypeChange(ev)}\n                          />\n                          &nbsp;Admin&nbsp;\n                        </tr>\n                        <tr>\n                          <input\n                            type=\"radio\"\n                            name=\"update-type\"\n                            value=\"iipzy-sentinel-web\"\n                            checked={updateType === \"iipzy-sentinel-web\"}\n                            disabled={disabledWhileUpdating}\n                            onChange={(ev) => this.handleUpdateTypeChange(ev)}\n                          />\n                          &nbsp;Web&nbsp;\n                        </tr>\n                        <tr>\n                          <input\n                            type=\"radio\"\n                            name=\"update-type\"\n                            value=\"iipzy-sentinel-web-proxy\"\n                            checked={updateType === \"iipzy-sentinel-web-proxy\"}\n                            disabled={disabledWhileUpdating}\n                            onChange={(ev) => this.handleUpdateTypeChange(ev)}\n                          />\n                          &nbsp;Web Proxy&nbsp;\n                        </tr>\n                        <tr>\n                          <input\n                            type=\"radio\"\n                            name=\"update-type\"\n                            value=\"iipzy-sentinel-traffic-control\"\n                            checked={updateType === \"iipzy-sentinel-traffic-control\"}\n                            disabled={disabledWhileUpdating}\n                            onChange={(ev) => this.handleUpdateTypeChange(ev)}\n                          />\n                          &nbsp;Traffic Control&nbsp;\n                        </tr>\n                        <tr>\n                          <input\n                            type=\"radio\"\n                            name=\"update-type\"\n                            value=\"iipzy-updater\"\n                            checked={updateType === \"iipzy-updater\"}\n                            disabled={disabledWhileUpdating}\n                            onChange={(ev) => this.handleUpdateTypeChange(ev)}\n                          />\n                          &nbsp;Updater\n                        </tr>\n                      </tbody>\n                    </table>\n                  </tr>\n                  <tr>\n                    <td>&nbsp;</td>\n                  </tr>\n                  <tr>\n                    <td>&nbsp;</td>\n                    <td>\n                      <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        disabled={!this.getEnableSubmit()}\n                        style={{\n                          marginLeft: \"50px\",\n                          width: \"130px\",\n                          color: \"#0000b0\",\n                        }}\n                        autoFocus\n                        onClick={(ev) => this.handleSubmitClick(ev)}\n                      >\n                        Submit\n                      </Button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>&nbsp;</td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <hr width=\"770%\" height=\"20\" border=\"none\"></hr>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>&nbsp;</td>\n                  </tr>\n                  <tr>\n                    <td>Status:</td>\n                    <td>\n                      <input\n                        type=\"text\"\n                        name=\"update-status-text\"\n                        size=\"40\"\n                        value={updateStatus}\n                        readOnly={true}\n                      />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nUpdaterWindow.infoMessage = \"\";\nUpdaterWindow.inProgress = false;\nUpdaterWindow.password = \"\";\nUpdaterWindow.showInfoPopup = false;\nUpdaterWindow.submitTimeout = null;\nUpdaterWindow.status = \"done\";\nUpdaterWindow.statusInterval = null;\nUpdaterWindow.tgtClientToken = \"\";\nUpdaterWindow.updateType = \"iipzy-core\";\nUpdaterWindow.waitForInProgress = false;\n\nasync function getUpdaterStatus() {\n  const { data, status } = await updater.getUpdaterStatus(\n    UpdaterWindow.tgtClientToken\n  );\n\n  if (status && status === Defs.httpStatusOk) {\n    const updateStatus = data.updateStatus;\n\n    console.log(\n      \"UpdaterWindow.getUpdaterStatus: status = \" +\n        JSON.stringify(updateStatus, null, 2)\n    );\n\n    UpdaterWindow.inProgress = updateStatus.inProgress;\n    if (!UpdaterWindow.waitForInProgress)\n      UpdaterWindow.status = updateStatus.step;\n\n    if (updateStatus.failed) {\n      UpdaterWindow.status = \"failed\";\n      UpdaterWindow.waitForInProgress = false;\n      if (UpdaterWindow.submitTimeout) {\n        clearTimeout(UpdaterWindow.submitTimeout);\n        UpdaterWindow.submitTimeout = null;\n      }\n    }\n  }\n  if (app) app.doRender();\n}\n\nasync function postUpdaterUpdate(params) {\n  const { data, status } = await updater.postUpdaterUpdate(params);\n  console.log(\n    \"UpdaterWindow.postUpdaterUpdate: response = \" +\n      JSON.stringify(data, null, 2)\n  );\n\n  if (data.__hadError__) {\n    console.log(\n      \"UpdaterWindow.postUpdaterUpdate: errorMessage = \" +\n        data.__hadError__.errorMessage +\n        \", statusCode = \" +\n        data.__hadError__.statusCode\n    );\n\n    UpdaterWindow.infoMessage = data.__hadError__.errorMessage;\n    UpdaterWindow.showInfoPopup = true;\n    UpdaterWindow.buttonsEnabled = false;\n    UpdaterWindow.status = \"failed\";\n\n    UpdaterWindow.waitForInProgress = false;\n    UpdaterWindow.inProgress = false;\n    if (UpdaterWindow.submitTimeout) {\n      clearTimeout(UpdaterWindow.submitTimeout);\n      UpdaterWindow.submitTimeout = null;\n    }\n  }\n\n  if (app) app.doRender();\n}\n\nexport default UpdaterWindow;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\n//import { ToastContainer } from \"react-toastify\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"./ipc/eventManager\";\n\nimport NavBar from \"./components/navBar\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport AboutWindow from \"./components/aboutWindow\";\nimport AddUserWindow from \"./components/addUserWindow\";\nimport AdminNavigatorWindow from \"./components/adminNavigatorWindow\";\nimport BlankWindow from \"./components/blankWindow\";\nimport ClientsWindow from \"./components/clientsWindow\";\nimport DownloadWindow from \"./components/downloadWindow\";\nimport EditUserWindow from \"./components/editUserWindow\";\nimport ForgotPasswordWindow from \"./components/forgotPasswordWindow\";\nimport HomeNavigatorWindow from \"./components/homeNavigatorWindow\";\nimport IipzyWindow from \"./components/iipzyWindow\";\nimport LoginWindow from \"./components/loginWindow\";\nimport SentinelAdminWindow from \"./components/sentinelAdminWindow\";\nimport SentinelsWindow from \"./components/sentinelsWindow\";\nimport UpdaterWindow from \"./components/updaterWindow\";\n\nlet app = null;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"App.constructor\");\n\n    this.state = { count: 0, data: null };\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"App.componentDidMount\");\n    // Call our fetch function below once the exact component mounts\n    // this.callBackendAPI()\n    //   .then(res => this.setState({ data: res.express }))\n    //   .catch(err => console.log(err));\n  }\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch(\"/express_backend\");\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    return body;\n  };\n\n  doRender() {\n    console.log(\"App.doRender\");\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  render() {\n    const loggedIn = App.loggedIn;\n    const navbarName = App.navbarName;\n\n    return (\n      <React.Fragment>\n        {/* <ToastContainer /> */}\n        <BrowserRouter>\n          {/*   <NavBar user={this.state.user} /> */}\n          <NavBar />\n          {/* <main className=\"container\"> */}\n          <Switch>\n            <Route path={Defs.urlAbout} exact component={AboutWindow} />\n            <Route path={Defs.urlAddUser} exact component={AddUserWindow} />\n            <Route\n              path={Defs.urlAdministration}\n              exact\n              component={AdminNavigatorWindow}\n            />\n            <Route path={Defs.urlBlank} exact component={BlankWindow} />\n            <Route path={Defs.urlClients} exact component={ClientsWindow} />\n            <Route path={Defs.urlDownload} exact component={DownloadWindow} />\n            <Route path={Defs.urlEditUser} exact component={EditUserWindow} />\n            <Route\n              path={Defs.urlForgotPassword}\n              exact\n              component={ForgotPasswordWindow}\n            />\n            <Route path={Defs.urlHome} exact component={HomeNavigatorWindow} />\n            <Route path={Defs.urlIipzy} exact component={IipzyWindow} />\n            <Route path={Defs.urlLogin} exact component={LoginWindow} />\n            <Route\n              path={Defs.urlSentinelAdmin}\n              exact\n              component={SentinelAdminWindow}\n            />\n            <Route path={Defs.urlSentinels} exact component={SentinelsWindow} />\n            <Route path={Defs.urlUpdater} exact component={UpdaterWindow} />\n            <Redirect to={Defs.urlBlank} />}\n          </Switch>\n          {/* </main> */}\n        </BrowserRouter>\n      </React.Fragment>\n    );\n  }\n}\n\nApp.loggedIn = false;\nApp.navbarName = \"home\";\nApp.props = null;\n\nconst handleShowNavBar = (event, data) => {\n  console.log(\"App.handleShowNavBar: \" + data);\n  App.navbarName = data;\n  if (App.navbarName === \"admin\") {\n    eventManager.send(Defs.ipcLinkTo, Defs.urlClients);\n  }\n  if (app != null) app.doRender();\n};\n\nconst handleLoginStatus = (event, data) => {\n  console.log(\"App.handleLoginStatus\");\n  const { loginStatus, onUserCommand } = data;\n\n  App.loggedIn = loginStatus === Defs.loginStatusLoggedIn;\n\n  if (App.navbarName === \"home\") {\n    if (App.loggedIn) {\n      eventManager.send(Defs.ipcLinkTo, Defs.urlIipzy);\n    } else {\n      eventManager.send(Defs.ipcLinkTo, Defs.urlLogin);\n    }\n  }\n};\n\n// NB: handleUserAddRequired and handleUserAddVerified are used to force a first time user to\n//      register then login.\n// const handleUserAddRequired = (event, settings) => {\n//   App.userAddRequired = true;\n//   eventManager.send(\n//     Defs.ipcConsoleLog,\n//     \"App handleUserAddRequired: userAddRequired = \" + App.userAddRequired\n//   );\n//   if (app != null) app.doRender();\n// };\n\n// const handleUserAddVerified = (event, settings) => {\n//   App.userAddRequired = false;\n//   App.forceLogin = true;\n//   eventManager.send(Defs.ipcConsoleLog, \"App handleUserAddVerified\");\n//   if (app != null) app.doRender();\n// };\n\neventManager.on(Defs.ipcLoginStatus, handleLoginStatus);\neventManager.on(Defs.ipcShowNavBar, handleShowNavBar);\n// eventManager.on(Defs.ipcUserAddRequired, handleUserAddRequired);\n// eventManager.on(Defs.ipcUserAddVerified, handleUserAddVerified);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Defs from \"iipzy-shared/src/defs\";\n\nimport cookie from \"../utils/cookie\";\nimport { log } from \"../utils/log\";\nimport eventManager from \"../ipc/eventManager\";\nimport http from \"../ipc/httpService\";\n\nlet serverIPAddress = \"address not set\";\n\nlet clientToken = null;\n\nlet sentClientLoginNeeded = 0;\n\nlet isLoggedIn = false;\nlet isExiting = false;\nlet interval = null;\n\nlet inHeartbeat = 0;\n\nasync function init(serverIPAddress_) {\n  log(\">>>heartbeat.init\", \"htbt\", \"info\");\n\n  serverIPAddress = serverIPAddress_;\n\n  clientToken = cookie.get(\"clientToken\");\n  log(\"..clientToken=\" + clientToken, \"htbt\", \"info\");\n  if (clientToken) {\n    http.setClientTokenHeader(clientToken);\n  }\n\n  interval = setInterval(async () => {\n    if (!inHeartbeat) {\n      inHeartbeat++;\n      try {\n        await heartbeat();\n      } catch (ex) {\n        log(\"(Exception) heartbeat: \" + ex, \"htbt\", \"error\");\n      }\n      inHeartbeat--;\n    }\n  }, 20 * 1000);\n\n  inHeartbeat++;\n  await heartbeat();\n  inHeartbeat--;\n\n  log(\"<<<heartbeat.init\", \"htbt\", \"info\");\n}\n\nfunction final() {}\n\nfunction createPseudoLocalIPAddress() {\n  let localIPAddress = cookie.get(\"pseudoLocalIPAddress\");\n  if (!localIPAddress) {\n    const ts = Date.now().toString();\n    // from : https://stackoverflow.com/questions/43464519/creating-fake-ip-address-using-javascript\n    localIPAddress =\n      Math.floor(Math.random() * 255) +\n      1 +\n      \".\" +\n      (Math.floor(Math.random() * 255) + 0) +\n      \".\" +\n      (Math.floor(Math.random() * 255) + 0) +\n      \".\" +\n      (Math.floor(Math.random() * 255) + 0);\n  }\n  cookie.set(\"pseudoLocalIPAddress\", localIPAddress);\n  return localIPAddress;\n}\n\nasync function createClient() {\n  const { data, status } = await http.get(\n    \"https://\" + serverIPAddress + \"/api/myIPAddress\"\n  );\n  if (status === Defs.httpStatusOk) {\n    const { yourIPAddress, timestamp } = data;\n    const localIPAddress = createPseudoLocalIPAddress();\n    const newClientToken = encodeURI(\n      yourIPAddress + \":\" + localIPAddress + \":\" + timestamp\n    );\n    log(\n      \"heartbeat.createClient: newClientToken = \" + newClientToken,\n      \"htbt\",\n      \"info\"\n    );\n\n    const { status: status2 } = await http.post(\n      \"https://\" + serverIPAddress + \"/api/client/client\",\n      {\n        localIPAddress,\n        clientType: \"web\",\n        clientToken: newClientToken,\n        clientName: \"web client\",\n      }\n    );\n    if (status2 === Defs.httpStatusOk) {\n      clientToken = newClientToken;\n      log(\n        \"heartbeat.createClient: clientToken = \" + clientToken,\n        \"htbt\",\n        \"info\"\n      );\n      // save in cookies.\n      cookie.set(\"clientToken\", clientToken);\n      // set in http header.\n      http.setClientTokenHeader(clientToken);\n    }\n  }\n}\n\nasync function heartbeat() {\n  log(\n    \">>>heartbeat: isLoggedIn =\" + isLoggedIn + \", isExiting = \" + isExiting,\n    \"htbt\",\n    \"info\"\n  );\n\n  if (isExiting) {\n    log(\"<<<heartbeat: exiting\", \"htbt\", \"info\");\n    return;\n  }\n\n  if (!clientToken) {\n    await createClient();\n    if (!clientToken) {\n      log(\"<<<heartbeat: no clientToken\", \"htbt\", \"info\");\n      return;\n    }\n  }\n\n  //??\n  const reqData = {\n    // clientType: Defs.clientType_web,\n    // clientName: \"web client\",\n    // clientMode: Defs.clientMode_sentinel,\n    // localIPAddress\n  };\n\n  log(\n    \"heartbeat: before post - reqData = \" + JSON.stringify(reqData, null, 2),\n    \"htbt\",\n    \"info\"\n  );\n\n  const { data, status } = await http.post(\n    \"https://\" + serverIPAddress + \"/api/client/heartbeat\",\n    reqData\n  );\n\n  log(\"heartbeat: status = \" + status, \"htbt\", \"verbose\");\n\n  if (status !== Defs.httpStatusOk) {\n    if (status === Defs.httpStatusUnauthorized) {\n      cookie.set(\"clientToken\", null);\n      clientToken = null;\n    }\n  }\n\n  if (data) {\n    log(\n      \"heartbeat: data = \" + JSON.stringify(data, null, 2),\n      \"htbt\",\n      \"verbose\"\n    );\n\n    const clientToken = data.clientToken;\n    isLoggedIn = data.isLoggedIn;\n\n    // if (clientToken) {\n    //   // first connection by this client\n    //   log(\"heartbeat: clientToken = \" + clientToken, \"htbt\", \"info\");\n    //   cookie.set(\"clientToken\", clientToken);\n    //   // set in http header.\n    //   http.setClientTokenHeader(clientToken);\n    // }\n\n    if (!isLoggedIn) {\n      if (sentClientLoginNeeded === 0) {\n        log(\"heartbeat: login needed\", \"htbt\", \"info\");\n        eventManager.send(Defs.ipcClientLoginNeeded, true);\n        // retry after 5 hearbeats of not logged in.\n        sentClientLoginNeeded = 5;\n      } else {\n        sentClientLoginNeeded--;\n      }\n    } else sentClientLoginNeeded = 0;\n  }\n  log(\"<<<heartbeat\", \"htbt\", \"info\");\n}\n\nfunction handleLoginStatus(event, data) {\n  log(\n    \"heartbeat handleLoginStatus: status = \" + data.loginStatus,\n    \"htbt\",\n    \"info\"\n  );\n  isLoggedIn = data.loginStatus === Defs.loginStatusLoggedIn;\n  http.setAuthTokenHeader(data.authToken);\n}\n\neventManager.on(Defs.ipcLoginStatus, handleLoginStatus);\n\nexport default { init };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n//import { sleep } from \"iipzy-shared/src/utils/utils\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport eventManager from \"./ipc/eventManager\";\n\nimport auth from \"./services/auth\";\nimport clients from \"./services/clients\";\nimport heartbeat from \"./services/heartbeat\";\nimport sentinelAdmin from \"./services/sentinelAdmin\";\nimport updater from \"./services/updater\";\nimport user from \"./services/user\";\n//import cookie from \"./utils/cookie\";\n\nconst serverIPAddress = \"iipzy.net:8001\";\n\nasync function main() {\n  ReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n\n  // console.log(\"-------------window.location-----------\");\n  // console.log(window.location);\n  // console.log(\"-----------origin-------------\");\n  // console.log(window.location.origin);\n\n  await heartbeat.init(serverIPAddress);\n  const hasCredentials = await auth.init(serverIPAddress);\n  console.log(\"====== AFTER calling auth.init\");\n  if (!hasCredentials) {\n    console.log(\"===========!hasCredentials\");\n    eventManager.send(Defs.ipcLinkTo, Defs.urlLogin);\n  } else {\n    // do login in background.\n    auth.login();\n  }\n  console.log(\"====== AFTER calling auth.login\");\n  await clients.init(serverIPAddress);\n  console.log(\"====== AFTER calling clients.init\");\n  await sentinelAdmin.init(serverIPAddress);\n  console.log(\"====== AFTER calling updater.init\");\n  await updater.init(serverIPAddress);\n  console.log(\"====== AFTER calling updater.init\");\n  await user.init(serverIPAddress);\n  console.log(\"====== AFTER calling user.init\");\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: http://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n}\n\n// window.addEventListener(\"beforeunload\", ev => {\n//   ev.preventDefault();\n//   return (ev.returnValue = \"Are you sure you want to close?\");\n// });\n\nmain();\n","// see: https://www.grainger.xyz/changing-from-cipher-to-cipheriv/\nimport { createCipheriv, createDecipheriv, randomBytes } from \"crypto\";\n\n//import { log } from \"./log\";\n\nconst algorithm = \"aes-256-ctr\";\nconst key = \"bite-the-wax-tadpole-hank-jake$$\";\nconst inputEncoding = \"utf8\"; //b2df428b9929d3ace7c598bbf4e496b2\n\nconst outputEncoding = \"hex\";\n\nexport function encrypt(decrypted) {\n  //log(\"encrypt: in = \" + decrypted, \"cryp\", \"info\");\n  const iv = Buffer.from(randomBytes(16));\n  const cipher = createCipheriv(algorithm, key, iv);\n  let crypted = cipher.update(decrypted, inputEncoding, outputEncoding);\n  crypted += cipher.final(outputEncoding);\n  const encrypted = `${iv.toString(\"hex\")}:${crypted.toString()}`;\n  //log(\"encrypt: out = \" + encrypted, \"cryp\", \"info\");\n  return encrypted;\n}\n\nexport function decrypt(encrypted) {\n  //log(\"decrypt: in = \" + encrypted, \"cryp\", \"info\");\n  if (!encrypted || encrypted === \"\") return \"\";\n\n  const textParts = encrypted.split(\":\");\n\n  //extract the IV from the first half of the value\n  const IV = Buffer.from(textParts.shift(), outputEncoding);\n\n  //extract the encrypted text without the IV\n  const encryptedText = Buffer.from(textParts.join(\":\"), outputEncoding);\n\n  //decipher the string\n  const decipher = createDecipheriv(algorithm, key, IV);\n  let decrypted = decipher.update(encryptedText, outputEncoding, inputEncoding);\n  decrypted += decipher.final(inputEncoding);\n  //log(\"decrypt: out = \" + decrypted.toString(), \"cryp\", \"info\");\n  return decrypted.toString();\n}\n\nexport default { encrypt, decrypt };\n"],"sourceRoot":""}